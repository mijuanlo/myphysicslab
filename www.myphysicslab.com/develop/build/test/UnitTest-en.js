/*Copyright_2020_Erik_Neumann_All_Rights_Reserved_www.myphysicslab.com*//*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
'use strict';var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.ISOLATE_POLYFILLS=!1;$jscomp.FORCE_POLYFILL_PROMISE=!1;$jscomp.FORCE_POLYFILL_PROMISE_WHEN_NO_UNHANDLED_REJECTION=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
$jscomp.getGlobal=function(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");};$jscomp.global=$jscomp.getGlobal(this);$jscomp.IS_SYMBOL_NATIVE="function"===typeof Symbol&&"symbol"===typeof Symbol("x");$jscomp.TRUST_ES6_POLYFILLS=!$jscomp.ISOLATE_POLYFILLS||$jscomp.IS_SYMBOL_NATIVE;$jscomp.polyfills={};
$jscomp.propertyToPolyfillSymbol={};$jscomp.POLYFILL_PREFIX="$jscp$";var $jscomp$lookupPolyfilledValue=function(a,b){var c=$jscomp.propertyToPolyfillSymbol[b];if(null==c)return a[b];c=a[c];return void 0!==c?c:a[b]};$jscomp.polyfill=function(a,b,c,d){b&&($jscomp.ISOLATE_POLYFILLS?$jscomp.polyfillIsolated(a,b,c,d):$jscomp.polyfillUnisolated(a,b,c,d))};
$jscomp.polyfillUnisolated=function(a,b,c,d){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];if(!(e in c))return;c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})};
$jscomp.polyfillIsolated=function(a,b,c,d){var e=a.split(".");a=1===e.length;d=e[0];d=!a&&d in $jscomp.polyfills?$jscomp.polyfills:$jscomp.global;for(var f=0;f<e.length-1;f++){var g=e[f];if(!(g in d))return;d=d[g]}e=e[e.length-1];c=$jscomp.IS_SYMBOL_NATIVE&&"es6"===c?d[e]:null;b=b(c);null!=b&&(a?$jscomp.defineProperty($jscomp.polyfills,e,{configurable:!0,writable:!0,value:b}):b!==c&&(void 0===$jscomp.propertyToPolyfillSymbol[e]&&($jscomp.propertyToPolyfillSymbol[e]=$jscomp.IS_SYMBOL_NATIVE?$jscomp.global.Symbol(e):
$jscomp.POLYFILL_PREFIX+e),e=$jscomp.propertyToPolyfillSymbol[e],$jscomp.defineProperty(d,e,{configurable:!0,writable:!0,value:b})))};$jscomp.polyfill("String.prototype.trimLeft",function(a){function b(){return this.replace(/^[\s\xa0]+/,"")}return a||b},"es_2019","es3");var COMPILED=!0,goog=goog||{};goog.global=this||self;
goog.exportPath_=function(a,b,c,d){a=a.split(".");d=d||goog.global;a[0]in d||"undefined"==typeof d.execScript||d.execScript("var "+a[0]);for(var e;a.length&&(e=a.shift());)if(a.length||void 0===b)d=d[e]&&d[e]!==Object.prototype[e]?d[e]:d[e]={};else if(!c&&goog.isObject(b)&&goog.isObject(d[e]))for(var f in b)b.hasOwnProperty(f)&&(d[e][f]=b[f]);else d[e]=b};
goog.define=function(a,b){if(!COMPILED){var c=goog.global.CLOSURE_UNCOMPILED_DEFINES,d=goog.global.CLOSURE_DEFINES;c&&void 0===c.nodeType&&Object.prototype.hasOwnProperty.call(c,a)?b=c[a]:d&&void 0===d.nodeType&&Object.prototype.hasOwnProperty.call(d,a)&&(b=d[a])}return b};goog.FEATURESET_YEAR=2012;goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b,c){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var d=a;(d=d.substring(0,d.lastIndexOf(".")))&&!goog.getObjectByName(d);)goog.implicitNamespaces_[d]=!0}goog.exportPath_(a,b,c)};
goog.getScriptNonce=function(a){if(a&&a!=goog.global)return goog.getScriptNonce_(a.document);null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document));return goog.cspNonce_};goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.cspNonce_=null;goog.getScriptNonce_=function(a){return(a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if("string"!==typeof a||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace "'+a+'" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};
goog.module.getInternal_=function(a){if(!COMPILED){if(a in goog.loadedModules_)return goog.loadedModules_[a].exports;if(!goog.implicitNamespaces_[a])return a=goog.getObjectByName(a),null!=a?a:null}return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return!!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};
goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return!0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInGoogModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0};
goog.declareModuleId=function(a){if(!COMPILED){if(!goog.isInEs6ModuleLoader_())throw Error("goog.declareModuleId may only be called from within an ES6 module");if(goog.moduleLoaderState_&&goog.moduleLoaderState_.moduleName)throw Error("goog.declareModuleId may only be called once per module.");if(a in goog.loadedModules_)throw Error('Module with namespace "'+a+'" already exists.');}if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else{var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a}}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&null!=goog.getObjectByName(a)},goog.implicitNamespaces_={"goog.module":!0});
goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b};goog.addDependency=function(a,b,c,d){!COMPILED&&goog.DEPENDENCIES_ENABLED&&goog.debugLoader_.addDependency(a,b,c,d)};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};
goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.debugLoader_.requested(a);if(goog.isProvided_(a)){if(goog.isInModuleLoader_())return goog.module.getInternal_(a)}else if(goog.ENABLE_DEBUG_LOADER){var b=goog.moduleLoaderState_;goog.moduleLoaderState_=null;try{goog.debugLoader_.load_(a)}finally{goog.moduleLoaderState_=b}}return null}};goog.requireType=function(a){return{}};goog.basePath="";goog.nullFunction=function(){};
goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;goog.TRANSPILE="detect";
goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRANSPILE_TO_LANGUAGE="";goog.TRANSPILER="transpile.js";goog.hasBadLetScoping=null;
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};var c={},d=c;if("function"===typeof a)d=a.call(void 0,d);else if("string"===typeof a)d=goog.loadModuleFromSource_.call(void 0,d,a);else throw Error("Invalid module definition");var e=goog.moduleLoaderState_.moduleName;if("string"===typeof e&&e)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(e,d,c!==d):goog.SEAL_MODULE_EXPORTS&&
Object.seal&&"object"==typeof d&&null!=d&&Object.seal(d),goog.loadedModules_[e]={exports:d,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+e+'"');}finally{goog.moduleLoaderState_=b}};goog.loadModuleFromSource_=function(a,b){eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(b));return a};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};
goog.transpile_=function(a,b,c){var d=goog.global.$jscomp;d||(goog.global.$jscomp=d={});var e=d.transpile;if(!e){var f=goog.basePath+goog.TRANSPILER,g=goog.loadFileSync_(f);if(g){(function(){(0,eval)(g+"\n//# sourceURL="+f)}).call(goog.global);if(goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=
goog.global.$gwtExport.$jscomp.transpile;d=goog.global.$jscomp;e=d.transpile}}e||(e=d.transpile=function(h,k){goog.logToConsole_(k+" requires transpilation but no transpiler was found.");return h});return e(a,b,c)};goog.typeOf=function(a){var b=typeof a;return"object"!=b?b:a?Array.isArray(a)?"array":b:"null"};goog.isArrayLike=function(a){var b=goog.typeOf(a);return"array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};
goog.isObject=function(a){var b=typeof a;return"object"==b&&null!=a||"function"==b};goog.getUid=function(a){return Object.prototype.hasOwnProperty.call(a,goog.UID_PROPERTY_)&&a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);
goog.uidCounter_=0;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var e=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(e,d);return a.apply(b,e)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var d=c.slice();d.push.apply(d,arguments);return a.apply(this,d)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=function(){return Date.now()};goog.globalEval=function(a){(0,eval)(a)};
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(e){return goog.cssNameMapping_[e]||e},d=function(e){e=e.split("-");for(var f=[],g=0;g<e.length;g++)f.push(c(e[g]));return f.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(e){return e};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,"&lt;"));c&&c.unescapeHtmlEntities&&(a=a.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&apos;/g,"'").replace(/&quot;/g,'"').replace(/&amp;/g,"&"));b&&(a=a.replace(/\{\$([^}]+)}/g,function(d,e){return null!=b&&e in b?b[e]:d}));return a};
goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,!0,c)};goog.exportProperty=function(a,b,c){a[b]=c};goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(d,e,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[e].apply(d,g)}};
goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);
goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;
goog.defineClass.createSealingConstructor_=function(a,b){return goog.defineClass.SEAL_CLASS_INSTANCES?function(){var c=a.apply(this,arguments)||this;c[goog.UID_PROPERTY_]=c[goog.UID_PROPERTY_];return c}:a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};
!COMPILED&&goog.DEPENDENCIES_ENABLED&&(goog.isEdge_=function(){return!!(goog.global.navigator&&goog.global.navigator.userAgent?goog.global.navigator.userAgent:"").match(/Edge\/(\d+)(\.\d)*/i)},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&"write"in a},goog.isDocumentLoading_=function(){var a=goog.global.document;return a.attachEvent?"complete"!=a.readyState:"loading"==a.readyState},goog.findBasePath_=function(){if(void 0!=goog.global.CLOSURE_BASE_PATH&&"string"===typeof goog.global.CLOSURE_BASE_PATH)goog.basePath=
goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_()){var a=goog.global.document,b=a.currentScript;a=b?[b]:a.getElementsByTagName("SCRIPT");for(b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf("?");d=-1==d?c.length:d;if("base.js"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}}},goog.findBasePath_(),goog.Transpiler=function(){this.requiresTranspilation_=null;this.transpilationTarget_=goog.TRANSPILE_TO_LANGUAGE},goog.Transpiler.prototype.createRequiresTranspilation_=function(){function a(f,
g){e?d[f]=!0:g()?(c=f,d[f]=!1):e=d[f]=!0}function b(f){try{return!!eval(f)}catch(g){return!1}}var c="es3",d={es3:!1},e=!1;a("es5",function(){return b("[1,].length==1")});a("es6",function(){return goog.isEdge_()?!1:b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()')});
a("es7",function(){return b("2**3==8")});a("es8",function(){return b("async()=>1,1")});a("es9",function(){return b("({...rest}={}),1")});a("es_2019",function(){return b('let r;try{throw 0}catch{r="\u2029"};r')});a("es_2020",function(){return b("null?.x??1")});a("es_next",function(){return!1});return{target:c,map:d}},goog.Transpiler.prototype.needsTranspile=function(a,b){if("always"==goog.TRANSPILE)return!0;if("never"==goog.TRANSPILE)return!1;if(!this.requiresTranspilation_){var c=this.createRequiresTranspilation_();
this.requiresTranspilation_=c.map;this.transpilationTarget_=this.transpilationTarget_||c.target}if(a in this.requiresTranspilation_)return this.requiresTranspilation_[a]?!0:!goog.inHtmlDocument_()||"es6"!=b||"noModule"in goog.global.document.createElement("script")?!1:!0;throw Error("Unknown language mode: "+a);},goog.Transpiler.prototype.transpile=function(a,b){return goog.transpile_(a,b,this.transpilationTarget_)},goog.transpiler_=new goog.Transpiler,goog.protectScriptTag_=function(a){return a.replace(/<\/(SCRIPT)/ig,
"\\x3c/$1")},goog.DebugLoader_=function(){this.dependencies_={};this.idToPath_={};this.written_={};this.loadingDeps_=[];this.depsToLoad_=[];this.paused_=!1;this.factory_=new goog.DependencyFactory(goog.transpiler_);this.deferredCallbacks_={};this.deferredQueue_=[]},goog.DebugLoader_.prototype.bootstrap=function(a,b){function c(){d&&(goog.global.setTimeout(d,0),d=null)}var d=b;if(a.length){b=[];for(var e=0;e<a.length;e++){var f=this.getPathFromDeps_(a[e]);if(!f)throw Error("Unregonized namespace: "+
a[e]);b.push(this.dependencies_[f])}f=goog.require;var g=0;for(e=0;e<a.length;e++)f(a[e]),b[e].onLoad(function(){++g==a.length&&c()})}else c()},goog.DebugLoader_.prototype.loadClosureDeps=function(){this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath+"deps.js"),"deps.js",[],[],{},!1));this.loadDeps_()},goog.DebugLoader_.prototype.requested=function(a,b){(a=this.getPathFromDeps_(a))&&(b||this.areDepsLoaded_(this.dependencies_[a].requires))&&(b=this.deferredCallbacks_[a])&&
(delete this.deferredCallbacks_[a],b())},goog.DebugLoader_.prototype.setDependencyFactory=function(a){this.factory_=a},goog.DebugLoader_.prototype.load_=function(a){if(this.getPathFromDeps_(a)){var b=this,c=[],d=function(e){var f=b.getPathFromDeps_(e);if(!f)throw Error("Bad dependency path or symbol: "+e);if(!b.written_[f]){b.written_[f]=!0;e=b.dependencies_[f];for(f=0;f<e.requires.length;f++)goog.isProvided_(e.requires[f])||d(e.requires[f]);c.push(e)}};d(a);a=!!this.depsToLoad_.length;this.depsToLoad_=
this.depsToLoad_.concat(c);this.paused_||a||this.loadDeps_()}else goog.logToConsole_("goog.require could not find: "+a)},goog.DebugLoader_.prototype.loadDeps_=function(){for(var a=this,b=this.paused_;this.depsToLoad_.length&&!b;)(function(){var c=!1,d=a.depsToLoad_.shift(),e=!1;a.loading_(d);var f={pause:function(){if(c)throw Error("Cannot call pause after the call to load.");b=!0},resume:function(){c?a.resume_():b=!1},loaded:function(){if(e)throw Error("Double call to loaded.");e=!0;a.loaded_(d)},
pending:function(){for(var g=[],h=0;h<a.loadingDeps_.length;h++)g.push(a.loadingDeps_[h]);return g},setModuleState:function(g){goog.moduleLoaderState_={type:g,moduleName:"",declareLegacyNamespace:!1}},registerEs6ModuleExports:function(g,h,k){k&&(goog.loadedModules_[k]={exports:h,type:goog.ModuleType.ES6,moduleId:k||""})},registerGoogModuleExports:function(g,h){goog.loadedModules_[g]={exports:h,type:goog.ModuleType.GOOG,moduleId:g}},clearModuleState:function(){goog.moduleLoaderState_=null},defer:function(g){if(c)throw Error("Cannot register with defer after the call to load.");
a.defer_(d,g)},areDepsLoaded:function(){return a.areDepsLoaded_(d.requires)}};try{d.load(f)}finally{c=!0}})();b&&this.pause_()},goog.DebugLoader_.prototype.pause_=function(){this.paused_=!0},goog.DebugLoader_.prototype.resume_=function(){this.paused_&&(this.paused_=!1,this.loadDeps_())},goog.DebugLoader_.prototype.loading_=function(a){this.loadingDeps_.push(a)},goog.DebugLoader_.prototype.loaded_=function(a){for(var b=0;b<this.loadingDeps_.length;b++)if(this.loadingDeps_[b]==a){this.loadingDeps_.splice(b,
1);break}for(b=0;b<this.deferredQueue_.length;b++)if(this.deferredQueue_[b]==a.path){this.deferredQueue_.splice(b,1);break}if(this.loadingDeps_.length==this.deferredQueue_.length&&!this.depsToLoad_.length)for(;this.deferredQueue_.length;)this.requested(this.deferredQueue_.shift(),!0);a.loaded()},goog.DebugLoader_.prototype.areDepsLoaded_=function(a){for(var b=0;b<a.length;b++){var c=this.getPathFromDeps_(a[b]);if(!c||!(c in this.deferredCallbacks_||goog.isProvided_(a[b])))return!1}return!0},goog.DebugLoader_.prototype.getPathFromDeps_=
function(a){return a in this.idToPath_?this.idToPath_[a]:a in this.dependencies_?a:null},goog.DebugLoader_.prototype.defer_=function(a,b){this.deferredCallbacks_[a.path]=b;this.deferredQueue_.push(a.path)},goog.LoadController=function(){},goog.LoadController.prototype.pause=function(){},goog.LoadController.prototype.resume=function(){},goog.LoadController.prototype.loaded=function(){},goog.LoadController.prototype.pending=function(){},goog.LoadController.prototype.registerEs6ModuleExports=function(a,
b,c){},goog.LoadController.prototype.setModuleState=function(a){},goog.LoadController.prototype.clearModuleState=function(){},goog.LoadController.prototype.defer=function(a){},goog.LoadController.prototype.areDepsLoaded=function(){},goog.Dependency=function(a,b,c,d,e){this.path=a;this.relativePath=b;this.provides=c;this.requires=d;this.loadFlags=e;this.loaded_=!1;this.loadCallbacks_=[]},goog.Dependency.prototype.getPathName=function(){var a=this.path,b=a.indexOf("://");0<=b&&(a=a.substring(b+3),b=
a.indexOf("/"),0<=b&&(a=a.substring(b+1)));return a},goog.Dependency.prototype.onLoad=function(a){this.loaded_?a():this.loadCallbacks_.push(a)},goog.Dependency.prototype.loaded=function(){this.loaded_=!0;var a=this.loadCallbacks_;this.loadCallbacks_=[];for(var b=0;b<a.length;b++)a[b]()},goog.Dependency.defer_=!1,goog.Dependency.callbackMap_={},goog.Dependency.registerCallback_=function(a){var b=Math.random().toString(32);goog.Dependency.callbackMap_[b]=a;return b},goog.Dependency.unregisterCallback_=
function(a){delete goog.Dependency.callbackMap_[a]},goog.Dependency.callback_=function(a,b){if(a in goog.Dependency.callbackMap_){for(var c=goog.Dependency.callbackMap_[a],d=[],e=1;e<arguments.length;e++)d.push(arguments[e]);c.apply(void 0,d)}else throw Error("Callback key "+a+" does not exist (was base.js loaded more than once?).");},goog.Dependency.prototype.load=function(a){if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var b=
goog.global.document;if("complete"==b.readyState&&!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING){if(/\bdeps.js$/.test(this.path)){a.loaded();return}throw Error('Cannot write "'+this.path+'" after document load');}var c=goog.getScriptNonce();if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&goog.isDocumentLoading_()){var d=function(h){h.readyState&&"complete"!=h.readyState?h.onload=d:(goog.Dependency.unregisterCallback_(e),a.loaded())};var e=goog.Dependency.registerCallback_(d);c=c?' nonce="'+c+'"':"";
var f='<script src="'+this.path+'"'+c+(goog.Dependency.defer_?" defer":"")+' id="script-'+e+'">\x3c/script>';f+="<script"+c+">";f=goog.Dependency.defer_?f+("document.getElementById('script-"+e+"').onload = function() {\n  goog.Dependency.callback_('"+e+"', this);\n};\n"):f+("goog.Dependency.callback_('"+e+"', document.getElementById('script-"+e+"'));");f+="\x3c/script>";b.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(f):f)}else{var g=b.createElement("script");g.defer=goog.Dependency.defer_;
g.async=!1;c&&(g.nonce=c);goog.DebugLoader_.IS_OLD_IE_?(a.pause(),g.onreadystatechange=function(){if("loaded"==g.readyState||"complete"==g.readyState)a.loaded(),a.resume()}):g.onload=function(){g.onload=null;a.loaded()};g.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path):this.path;b.head.appendChild(g)}}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),"deps.js"==this.relativePath?(goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or setting CLOSURE_NO_DEPS to true."),
a.loaded()):a.pause()},goog.Es6ModuleDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e)},goog.inherits(goog.Es6ModuleDependency,goog.Dependency),goog.Es6ModuleDependency.prototype.load=function(a){function b(l,m){var p="",t=goog.getScriptNonce();t&&(p=' nonce="'+t+'"');l=m?'<script type="module" crossorigin'+p+">"+m+"\x3c/script>":'<script type="module" crossorigin src="'+l+'"'+p+">\x3c/script>";d.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(l):l)}function c(l,
m){var p=d.createElement("script");p.defer=!0;p.async=!1;p.type="module";p.setAttribute("crossorigin",!0);var t=goog.getScriptNonce();t&&(p.nonce=t);m?p.text=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScript(m):m:p.src=goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createScriptURL(l):l;d.head.appendChild(p)}if(goog.global.CLOSURE_IMPORT_SCRIPT)goog.global.CLOSURE_IMPORT_SCRIPT(this.path)?a.loaded():a.pause();else if(goog.inHtmlDocument_()){var d=goog.global.document,e=this;
if(goog.isDocumentLoading_()){var f=b;goog.Dependency.defer_=!0}else f=c;var g=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(g);a.setModuleState(goog.ModuleType.ES6)});f(void 0,'goog.Dependency.callback_("'+g+'")');f(this.path,void 0);var h=goog.Dependency.registerCallback_(function(l){goog.Dependency.unregisterCallback_(h);a.registerEs6ModuleExports(e.path,l,goog.moduleLoaderState_.moduleName)});f(void 0,'import * as m from "'+this.path+'"; goog.Dependency.callback_("'+
h+'", m)');var k=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(k);a.clearModuleState();a.loaded()});f(void 0,'goog.Dependency.callback_("'+k+'")')}else goog.logToConsole_("Cannot use default debug loader outside of HTML documents."),a.pause()},goog.TransformedDependency=function(a,b,c,d,e){goog.Dependency.call(this,a,b,c,d,e);this.contents_=null;this.lazyFetch_=!goog.inHtmlDocument_()||!("noModule"in goog.global.document.createElement("script"))},goog.inherits(goog.TransformedDependency,
goog.Dependency),goog.TransformedDependency.prototype.load=function(a){function b(){e.contents_=goog.loadFileSync_(e.path);e.contents_&&(e.contents_=e.transform(e.contents_),e.contents_&&(e.contents_+="\n//# sourceURL="+e.path))}function c(){e.lazyFetch_&&b();if(e.contents_){f&&a.setModuleState(goog.ModuleType.ES6);try{var m=e.contents_;e.contents_=null;goog.globalEval(m);if(f)var p=goog.moduleLoaderState_.moduleName}finally{f&&a.clearModuleState()}f&&goog.global.$jscomp.require.ensure([e.getPathName()],
function(){a.registerEs6ModuleExports(e.path,goog.global.$jscomp.require(e.getPathName()),p)});a.loaded()}}function d(){var m=goog.global.document,p=goog.Dependency.registerCallback_(function(){goog.Dependency.unregisterCallback_(p);c()}),t=goog.getScriptNonce();t="<script"+(t?' nonce="'+t+'"':"")+">"+goog.protectScriptTag_('goog.Dependency.callback_("'+p+'");')+"\x3c/script>";m.write(goog.TRUSTED_TYPES_POLICY_?goog.TRUSTED_TYPES_POLICY_.createHTML(t):t)}var e=this;if(goog.global.CLOSURE_IMPORT_SCRIPT)b(),
this.contents_&&goog.global.CLOSURE_IMPORT_SCRIPT("",this.contents_)?(this.contents_=null,a.loaded()):a.pause();else{var f=this.loadFlags.module==goog.ModuleType.ES6;this.lazyFetch_||b();var g=1<a.pending().length,h=g&&goog.DebugLoader_.IS_OLD_IE_;g=goog.Dependency.defer_&&(g||goog.isDocumentLoading_());if(h||g)a.defer(function(){c()});else{var k=goog.global.document;h=goog.inHtmlDocument_()&&("ActiveXObject"in goog.global||goog.isEdge_());if(f&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()&&
!h){goog.Dependency.defer_=!0;a.pause();var l=k.onreadystatechange;k.onreadystatechange=function(){"interactive"==k.readyState&&(k.onreadystatechange=l,c(),a.resume());"function"===typeof l&&l.apply(void 0,arguments)}}else!goog.DebugLoader_.IS_OLD_IE_&&goog.inHtmlDocument_()&&goog.isDocumentLoading_()?d():c()}}},goog.TransformedDependency.prototype.transform=function(a){},goog.TranspiledDependency=function(a,b,c,d,e,f){goog.TransformedDependency.call(this,a,b,c,d,e);this.transpiler=f},goog.inherits(goog.TranspiledDependency,
goog.TransformedDependency),goog.TranspiledDependency.prototype.transform=function(a){return this.transpiler.transpile(a,this.getPathName())},goog.PreTranspiledEs6ModuleDependency=function(a,b,c,d,e){goog.TransformedDependency.call(this,a,b,c,d,e)},goog.inherits(goog.PreTranspiledEs6ModuleDependency,goog.TransformedDependency),goog.PreTranspiledEs6ModuleDependency.prototype.transform=function(a){return a},goog.GoogModuleDependency=function(a,b,c,d,e,f,g){goog.TransformedDependency.call(this,a,b,c,
d,e);this.needsTranspile_=f;this.transpiler_=g},goog.inherits(goog.GoogModuleDependency,goog.TransformedDependency),goog.GoogModuleDependency.prototype.transform=function(a){this.needsTranspile_&&(a=this.transpiler_.transpile(a,this.getPathName()));return goog.LOAD_MODULE_USING_EVAL&&void 0!==goog.global.JSON?"goog.loadModule("+goog.global.JSON.stringify(a+"\n//# sourceURL="+this.path+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+a+"\n;return exports});\n//# sourceURL="+this.path+
"\n"},goog.DebugLoader_.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.DebugLoader_.prototype.addDependency=function(a,b,c,d){b=b||[];a=a.replace(/\\/g,"/");var e=goog.normalizePath_(goog.basePath+a);d&&"boolean"!==typeof d||(d=d?{module:goog.ModuleType.GOOG}:{});c=this.factory_.createDependency(e,a,b,c,d,goog.transpiler_.needsTranspile(d.lang||"es3",d.module));this.dependencies_[e]=c;for(c=0;c<b.length;c++)this.idToPath_[b[c]]=e;this.idToPath_[a]=e},goog.DependencyFactory=
function(a){this.transpiler=a},goog.DependencyFactory.prototype.createDependency=function(a,b,c,d,e,f){return e.module==goog.ModuleType.GOOG?new goog.GoogModuleDependency(a,b,c,d,e,f,this.transpiler):f?new goog.TranspiledDependency(a,b,c,d,e,this.transpiler):e.module==goog.ModuleType.ES6?"never"==goog.TRANSPILE&&goog.ASSUME_ES_MODULES_TRANSPILED?new goog.PreTranspiledEs6ModuleDependency(a,b,c,d,e):new goog.Es6ModuleDependency(a,b,c,d,e):new goog.Dependency(a,b,c,d,e)},goog.debugLoader_=new goog.DebugLoader_,
goog.loadClosureDeps=function(){goog.debugLoader_.loadClosureDeps()},goog.setDependencyFactory=function(a){goog.debugLoader_.setDependencyFactory(a)},goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null,goog.global.CLOSURE_NO_DEPS||goog.debugLoader_.loadClosureDeps(),goog.bootstrap=function(a,b){goog.debugLoader_.bootstrap(a,b)});goog.TRUSTED_TYPES_POLICY_NAME="goog";goog.identity_=function(a){return a};
goog.createTrustedTypesPolicy=function(a){var b=null,c=goog.global.trustedTypes;if(!c||!c.createPolicy)return b;try{b=c.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_})}catch(d){goog.logToConsole_(d.message)}return b};
if(!COMPILED){var isChrome87=!1;try{isChrome87=eval(goog.global.trustedTypes.emptyScript)!==goog.global.trustedTypes.emptyScript}catch(a){}goog.CLOSURE_EVAL_PREFILTER_=goog.global.trustedTypes&&isChrome87&&goog.createTrustedTypesPolicy("goog#base#devonly#eval")||{createScript:goog.identity_}};class mpl$lab$util$Printable{toStringShort(){}};goog.debug={};function module$contents$goog$debug$Error_DebugError(a){if(Error.captureStackTrace)Error.captureStackTrace(this,module$contents$goog$debug$Error_DebugError);else{const b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a));this.reportErrorToServer=!0}goog.inherits(module$contents$goog$debug$Error_DebugError,Error);module$contents$goog$debug$Error_DebugError.prototype.name="CustomError";goog.debug.Error=module$contents$goog$debug$Error_DebugError;goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){module$contents$goog$debug$Error_DebugError.call(this,goog.asserts.subs_(a,b));this.messagePattern=a};goog.inherits(goog.asserts.AssertionError,module$contents$goog$debug$Error_DebugError);goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_=function(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");return c+a[d]};goog.asserts.doAssertFailure_=function(a,b,c,d){var e="Assertion failed";if(c){e+=": "+c;var f=d}else a&&(e+=": "+a,f=b);a=new goog.asserts.AssertionError(""+e,f||[]);goog.asserts.errorHandler_(a)};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)};
goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_("",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&goog.asserts.doAssertFailure_("Expected to exist: %s.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"number"!==typeof a&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"string"!==typeof a&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"function"!==typeof a&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!Array.isArray(a)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&"boolean"!==typeof a&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||"number"==typeof a&&isFinite(a)||goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+" should not be enumerable in Object.prototype.")};goog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;const module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.ASSUME_NATIVE_FUNCTIONS=module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS;function module$contents$goog$array_peek(a){return a[a.length-1]}goog.array.peek=module$contents$goog$array_peek;goog.array.last=module$contents$goog$array_peek;
const module$contents$goog$array_indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.indexOf(b,c);for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};goog.array.indexOf=module$contents$goog$array_indexOf;
const module$contents$goog$array_lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if("string"===typeof a)return"string"!==typeof b||1!=b.length?-1:a.lastIndexOf(b,c);for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};
goog.array.lastIndexOf=module$contents$goog$array_lastIndexOf;const module$contents$goog$array_forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e="string"===typeof a?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEach=module$contents$goog$array_forEach;
function module$contents$goog$array_forEachRight(a,b,c){var d=a.length,e="string"===typeof a?a.split(""):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a)}goog.array.forEachRight=module$contents$goog$array_forEachRight;
const module$contents$goog$array_filter=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g="string"===typeof a?a.split(""):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};goog.array.filter=module$contents$goog$array_filter;
const module$contents$goog$array_map=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f="string"===typeof a?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};goog.array.map=module$contents$goog$array_map;
const module$contents$goog$array_reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;module$contents$goog$array_forEach(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduce=module$contents$goog$array_reduce;
const module$contents$goog$array_reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;module$contents$goog$array_forEachRight(a,function(f,g){e=b.call(d,e,f,g,a)});return e};goog.array.reduceRight=module$contents$goog$array_reduceRight;
const module$contents$goog$array_some=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e="string"===typeof a?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};goog.array.some=module$contents$goog$array_some;
const module$contents$goog$array_every=goog.NATIVE_ARRAY_PROTOTYPES&&(module$contents$goog$array_ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e="string"===typeof a?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.every=module$contents$goog$array_every;
function module$contents$goog$array_count(a,b,c){var d=0;module$contents$goog$array_forEach(a,function(e,f,g){b.call(c,e,f,g)&&++d},c);return d}goog.array.count=module$contents$goog$array_count;function module$contents$goog$array_find(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0>b?null:"string"===typeof a?a.charAt(b):a[b]}goog.array.find=module$contents$goog$array_find;
function module$contents$goog$array_findIndex(a,b,c){for(var d=a.length,e="string"===typeof a?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1}goog.array.findIndex=module$contents$goog$array_findIndex;function module$contents$goog$array_findRight(a,b,c){b=module$contents$goog$array_findIndexRight(a,b,c);return 0>b?null:"string"===typeof a?a.charAt(b):a[b]}goog.array.findRight=module$contents$goog$array_findRight;
function module$contents$goog$array_findIndexRight(a,b,c){var d=a.length,e="string"===typeof a?a.split(""):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1}goog.array.findIndexRight=module$contents$goog$array_findIndexRight;function module$contents$goog$array_contains(a,b){return 0<=module$contents$goog$array_indexOf(a,b)}goog.array.contains=module$contents$goog$array_contains;function module$contents$goog$array_isEmpty(a){return 0==a.length}goog.array.isEmpty=module$contents$goog$array_isEmpty;
function module$contents$goog$array_clear(a){if(!Array.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0}goog.array.clear=module$contents$goog$array_clear;function module$contents$goog$array_insert(a,b){module$contents$goog$array_contains(a,b)||a.push(b)}goog.array.insert=module$contents$goog$array_insert;function module$contents$goog$array_insertAt(a,b,c){module$contents$goog$array_splice(a,c,0,b)}goog.array.insertAt=module$contents$goog$array_insertAt;
function module$contents$goog$array_insertArrayAt(a,b,c){goog.partial(module$contents$goog$array_splice,a,c,0).apply(null,b)}goog.array.insertArrayAt=module$contents$goog$array_insertArrayAt;function module$contents$goog$array_insertBefore(a,b,c){var d;2==arguments.length||0>(d=module$contents$goog$array_indexOf(a,c))?a.push(b):module$contents$goog$array_insertAt(a,b,d)}goog.array.insertBefore=module$contents$goog$array_insertBefore;
function module$contents$goog$array_remove(a,b){b=module$contents$goog$array_indexOf(a,b);var c;(c=0<=b)&&module$contents$goog$array_removeAt(a,b);return c}goog.array.remove=module$contents$goog$array_remove;function module$contents$goog$array_removeLast(a,b){b=module$contents$goog$array_lastIndexOf(a,b);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeLast=module$contents$goog$array_removeLast;
function module$contents$goog$array_removeAt(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length}goog.array.removeAt=module$contents$goog$array_removeAt;function module$contents$goog$array_removeIf(a,b,c){b=module$contents$goog$array_findIndex(a,b,c);return 0<=b?(module$contents$goog$array_removeAt(a,b),!0):!1}goog.array.removeIf=module$contents$goog$array_removeIf;
function module$contents$goog$array_removeAllIf(a,b,c){var d=0;module$contents$goog$array_forEachRight(a,function(e,f){b.call(c,e,f,a)&&module$contents$goog$array_removeAt(a,f)&&d++});return d}goog.array.removeAllIf=module$contents$goog$array_removeAllIf;function module$contents$goog$array_concat(a){return Array.prototype.concat.apply([],arguments)}goog.array.concat=module$contents$goog$array_concat;function module$contents$goog$array_join(a){return Array.prototype.concat.apply([],arguments)}
goog.array.join=module$contents$goog$array_join;function module$contents$goog$array_toArray(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]}const module$contents$goog$array_clone=goog.array.toArray=module$contents$goog$array_toArray;goog.array.clone=module$contents$goog$array_clone;
function module$contents$goog$array_extend(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}}goog.array.extend=module$contents$goog$array_extend;function module$contents$goog$array_splice(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,module$contents$goog$array_slice(arguments,1))}goog.array.splice=module$contents$goog$array_splice;
function module$contents$goog$array_slice(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)}goog.array.slice=module$contents$goog$array_slice;
function module$contents$goog$array_removeDuplicates(a,b,c){b=b||a;var d=function(k){return goog.isObject(k)?"o"+goog.getUid(k):(typeof k).charAt(0)+k};c=c||d;d={};for(var e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e}goog.array.removeDuplicates=module$contents$goog$array_removeDuplicates;
function module$contents$goog$array_binarySearch(a,b,c){return module$contents$goog$array_binarySearch_(a,c||module$contents$goog$array_defaultCompare,!1,b)}goog.array.binarySearch=module$contents$goog$array_binarySearch;function module$contents$goog$array_binarySelect(a,b,c){return module$contents$goog$array_binarySearch_(a,b,!0,void 0,c)}goog.array.binarySelect=module$contents$goog$array_binarySelect;
function module$contents$goog$array_binarySearch_(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+(g-f>>>1);var l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:-f-1}function module$contents$goog$array_sort(a,b){a.sort(b||module$contents$goog$array_defaultCompare)}goog.array.sort=module$contents$goog$array_sort;
function module$contents$goog$array_stableSort(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(c,function(f,g){return e(f.value,g.value)||f.index-g.index});for(d=0;d<a.length;d++)a[d]=c[d].value}goog.array.stableSort=module$contents$goog$array_stableSort;
function module$contents$goog$array_sortByKey(a,b,c){var d=c||module$contents$goog$array_defaultCompare;module$contents$goog$array_sort(a,function(e,f){return d(b(e),b(f))})}goog.array.sortByKey=module$contents$goog$array_sortByKey;function module$contents$goog$array_sortObjectsByKey(a,b,c){module$contents$goog$array_sortByKey(a,function(d){return d[b]},c)}goog.array.sortObjectsByKey=module$contents$goog$array_sortObjectsByKey;
function module$contents$goog$array_isSorted(a,b,c){b=b||module$contents$goog$array_defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0}goog.array.isSorted=module$contents$goog$array_isSorted;function module$contents$goog$array_equals(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||module$contents$goog$array_defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0}
goog.array.equals=module$contents$goog$array_equals;function module$contents$goog$array_compare3(a,b,c){c=c||module$contents$goog$array_defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return module$contents$goog$array_defaultCompare(a.length,b.length)}goog.array.compare3=module$contents$goog$array_compare3;function module$contents$goog$array_defaultCompare(a,b){return a>b?1:a<b?-1:0}goog.array.defaultCompare=module$contents$goog$array_defaultCompare;
function module$contents$goog$array_inverseDefaultCompare(a,b){return-module$contents$goog$array_defaultCompare(a,b)}goog.array.inverseDefaultCompare=module$contents$goog$array_inverseDefaultCompare;function module$contents$goog$array_defaultCompareEquality(a,b){return a===b}goog.array.defaultCompareEquality=module$contents$goog$array_defaultCompareEquality;
function module$contents$goog$array_binaryInsert(a,b,c){c=module$contents$goog$array_binarySearch(a,b,c);return 0>c?(module$contents$goog$array_insertAt(a,b,-(c+1)),!0):!1}goog.array.binaryInsert=module$contents$goog$array_binaryInsert;function module$contents$goog$array_binaryRemove(a,b,c){b=module$contents$goog$array_binarySearch(a,b,c);return 0<=b?module$contents$goog$array_removeAt(a,b):!1}goog.array.binaryRemove=module$contents$goog$array_binaryRemove;
function module$contents$goog$array_bucket(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);void 0!==g&&(d[g]||(d[g]=[])).push(f)}return d}goog.array.bucket=module$contents$goog$array_bucket;function module$contents$goog$array_toObject(a,b,c){var d={};module$contents$goog$array_forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d}goog.array.toObject=module$contents$goog$array_toObject;
function module$contents$goog$array_range(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d}goog.array.range=module$contents$goog$array_range;function module$contents$goog$array_repeat(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c}goog.array.repeat=module$contents$goog$array_repeat;
function module$contents$goog$array_flatten(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(Array.isArray(d))for(var e=0;e<d.length;e+=8192){var f=module$contents$goog$array_slice(d,e,e+8192);f=module$contents$goog$array_flatten.apply(null,f);for(var g=0;g<f.length;g++)b.push(f[g])}else b.push(d)}return b}goog.array.flatten=module$contents$goog$array_flatten;
function module$contents$goog$array_rotate(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a}goog.array.rotate=module$contents$goog$array_rotate;function module$contents$goog$array_moveItem(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])}goog.array.moveItem=module$contents$goog$array_moveItem;
function module$contents$goog$array_zip(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b}goog.array.zip=module$contents$goog$array_zip;function module$contents$goog$array_shuffle(a,b){b=b||Math.random;for(var c=a.length-1;0<c;c--){var d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e}}goog.array.shuffle=module$contents$goog$array_shuffle;
function module$contents$goog$array_copyByIndex(a,b){var c=[];module$contents$goog$array_forEach(b,function(d){c.push(a[d])});return c}goog.array.copyByIndex=module$contents$goog$array_copyByIndex;function module$contents$goog$array_concatMap(a,b,c){return module$contents$goog$array_concat.apply([],module$contents$goog$array_map(a,b,c))}goog.array.concatMap=module$contents$goog$array_concatMap;class mpl$lab$util$Util{constructor(){throw"";}static array2string(a,b,c){b=b||mpl$lab$util$Util.NF7E;void 0===c&&(c=", ");const d=a.length;let e="";for(let f=0;f<d;f++)e+=(0<f?c:"")+b(a[f]);return e}static arrayBool2string(a,b,c){b=b||"true";c=c||"false";const d=a.length;let e="";for(let f=0;f<d;f++)e+=a[f]?b:c,f<d-1&&(e+=", ");return e}static colorString3(a,b,c){let d="#";a=[a,b,c];for(b=0;3>b;b++)d+=mpl$lab$util$Util.numToHexChar1(a[b]);
goog.asserts.assert(4==d.length);return d}static colorString6(a,b,c){let d="#";a=[a,b,c];for(b=0;3>b;b++)d+=mpl$lab$util$Util.numToHexChar2(a[b]);goog.asserts.assert(7==d.length);return d}static createImage(a,b,c){const d=document.createElement("img");d.src=a;d.width=b;d.height=void 0!==c?c:b;return d}static drop(a,b){return 0<=b?a.slice(b):a.slice(0,a.length+b)}static get(a,b){if("number"!==typeof b||0>b||b!=Math.floor(b))throw"index is not a non-negative integer: "+b;return a[b]}static hypot(a,
b){return Math.sqrt(a*a+b*b)}static isChrome(){const a=navigator;return null!=a?null!=a.userAgent.match(/.*Chrome.*/):!1}static isIPhone(){const a=navigator;return null!=a?"iPhone"==a.platform:!1}static limitAngle(a){return a>Math.PI?a-2*Math.PI*Math.floor((a- -Math.PI)/(2*Math.PI)):a<-Math.PI?a+2*Math.PI*Math.floor(-(a-Math.PI)/(2*Math.PI)):a}static methodsOf(a){const b=[];var c=Object.getPrototypeOf(a);if(c){c=Object.getOwnPropertyNames(c);for(let d=0;d<c.length;d++){let e=c[d];"constructor"!==
e&&"function"===typeof a[e]&&b.push(e)}}module$contents$goog$array_sort(b);return b}static nameOf(a,b){for(let c in a)if(a[c]===b)return c;return""}static newBooleanArray(a){const b=Array(a);for(let c=0;c<a;c++)b[c]=!1;return b}static newNumberArray(a){const b=Array(a);for(let c=0;c<a;c++)b[c]=0;return b}static NF0(a){return null!=a?a.toFixed(0):null===a?"null":"undefined"}static NF18(a){return null!=a?a.toFixed(18):null===a?"null":"undefined"}static NF1S(a){return null!=a?(0<a?"+":"")+a.toFixed(1):
null===a?"null":"undefined"}static NF2(a){return null!=a?a.toFixed(2):null===a?"null":"undefined"}static NF3(a){return null!=a?a.toFixed(3):null===a?"null":"undefined"}static NF4(a){return null!=a?a.toFixed(4):null===a?"null":"undefined"}static NF5(a){return null!=a?a.toFixed(5):null===a?"null":"undefined"}static NF5E(a){return null!=a?2E-4<Math.abs(a)||0==a?a.toFixed(5):a.toExponential(5):null===a?"null":"undefined"}static nf5(a){return null!=a?a.toFixed(5).replace(/\.?0+$/,""):null===a?"null":"undefined"}static NF7(a){return null!=
a?a.toFixed(7):null===a?"null":"undefined"}static NF7E(a){return null!=a?2E-6<Math.abs(a)?a.toFixed(7):a.toExponential(7):null===a?"null":"undefined"}static nf7(a){return null!=a?a.toFixed(7).replace(/\.?0+$/,""):null===a?"null":"undefined"}static NF9(a){return null!=a?a.toFixed(9):null===a?"null":"undefined"}static NFE(a){return null!=a?a.toExponential(7):null===a?"null":"undefined"}static NFSCI(a){return null!=a?a.toExponential(17):null===a?"null":"undefined"}static numToHexChar1(a){a=Math.floor(.5+
16*a);return 15<=a?"f":0>=a?"0":mpl$lab$util$Util.HEX_DIGITS.charAt(a)}static numToHexChar2(a){a=Math.floor(.5+256*a);if(255<=a)return"ff";if(0>=a)return"00";{const b=a%16;return mpl$lab$util$Util.HEX_DIGITS.charAt(Math.floor(a/16))+mpl$lab$util$Util.HEX_DIGITS.charAt(b)}}static prettyPrint(a,b,c){"number"!==typeof b&&(b=2);"string"!==typeof c&&(c="  ");const d=String(a);let e="",f=0;const g=d.length;var h=!1;const k=[];var l=
"";a:for(let p=0;p<g;p++){var m=d.charAt(p);if(h)if(" "==m)continue;else h=!1;if("{"==m||"["==m){f++;if(f<=b){e+=m+"\n";for(h=0;h<f;h++)e+=c;h=!0}else e+=m;k.push(l);l="{"==m?"}":"]"}else if(m==l){if(f<=b)for(f--,e+="\n",l=0;l<f;l++)e+=c;else f--;e+=m;l=k.pop();if(0>f)throw"unbalanced "+l+" at "+p+" in "+a;}else{if('"'==m||"'"==m){const t=m,y=p;for(e+=m;++p<g;)if(m=d.charAt(p),e+=m,m==t)continue a;throw"unbalanced quote at "+y+" in "+a;}if((","==m||";"==m)&&f<=b){e+=m+"\n";for(m=0;m<f;m++)e+=c;h=
!0}else e+=m}}return e=e.replace(/^\s+\n/gm,"")}static printArray(a,b,c){if(mpl$lab$util$Util.DEBUG){b=b||80;c=c||mpl$lab$util$Util.NF5E;let d="";for(let e=0,f=a.length;e<f;e++){const g=c(a[e]);d.length+g.length>b?(console.log(d),d="  "+g):d+=" "+g}0<d.length&&console.log(d)}}static println(a){console.log(a)}static printNums5(a,b){for(let c=1;c<arguments.length;c++)a+=" "+mpl$lab$util$Util.NF5(arguments[c]);console.log(a)}static propertiesOf(a,
b){if(null===a)return["null"];b=b||!1;const c=[];for(let d in a)"function"!==typeof a[d]&&(b?c.push(d+": "+a[d]):c.push(d));module$contents$goog$array_sort(c);return c}static set(a,b,c){if("number"!==typeof b||0>b||b!=Math.floor(b))throw"index is not a non-negative integer: "+b;return a[b]=c}static setErrorHandler(){window.onerror=function(a,b,c){a=a+"\n"+b+":"+c;mpl$lab$util$Util.DEBUG&&console.log(a);mpl$lab$util$Util.numErrors++<mpl$lab$util$Util.maxErrors&&
alert(a)};if(goog.DEBUG&&!mpl$lab$util$Util.ADVANCED){let a=1;try{goog.asserts.assert(!1),a=2}catch(b){console.log("asserts are working")}if(2==a)throw"asserts are not working";}else mpl$lab$util$Util.DEBUG&&console.log("WARNING: asserts are NOT enabled!")}static setImagesDir(a){void 0!==a&&(mpl$lab$util$Util.IMAGES_DIR=a)}static systemTime(){return mpl$lab$util$Util.MODERN_CLOCK&&!mpl$lab$util$Util.MOCK_CLOCK?
.001*performance.now():.001*Date.now()}static take(a,b){return 0==b?"":0<b?a.slice(0,b):a.slice(a.length+b,a.length)}static testFinite(a){if(!isFinite(a))throw"not a finite number "+a;return a}static testNumber(a){if(isNaN(a))throw"not a number "+a;return a}static toName(a){return a.toUpperCase().replace(/[ -]/g,"_")}static uniqueElements(a){const b=a.length;if(1<b){const d=Array(b);for(var c=0;c<b;c++)d[c]=a[c];module$contents$goog$array_sort(d);a=d[0];for(c=1;c<b;c++){if(a==d[c])return!1;a=d[c]}}return!0}static validName(a){if(!a.match(/^[A-Z_][A-Z_0-9]*$/))throw"not a valid name: "+
a;return a}static veryDifferent(a,b,c,d){c=c||1E-14;if(isNaN(a)||isNaN(b))throw"argument is NaN";if(0>=c)throw"epsilon must be positive "+c;d=d||1;if(0>=d)throw"magnitude must be positive "+d;const e=Math.max(Math.abs(a),Math.abs(b));return Math.abs(a-b)>(e>d?e:d)*c}static zeroArray(a){const b=a.length;for(let c=0;c<b;c++)a[c]=0}}mpl$lab$util$Util.ADVANCED=!1;mpl$lab$util$Util.COMPILE_TIME="2021-03-25 23:21:18";
mpl$lab$util$Util.DEBUG=!1;mpl$lab$util$Util.HEX_DIGITS="0123456789abcdef";mpl$lab$util$Util.IMAGES_DIR=".";mpl$lab$util$Util.maxErrors=3;mpl$lab$util$Util.MAX_INTEGER=Math.pow(2,53);mpl$lab$util$Util.MIN_INTEGER=-Math.pow(2,53);mpl$lab$util$Util.MOCK_CLOCK=!1;
mpl$lab$util$Util.MODERN_CLOCK=goog.isObject(performance)&&"function"===typeof performance.now;mpl$lab$util$Util.NaN=Number.NaN;mpl$lab$util$Util.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY;mpl$lab$util$Util.numErrors=0;mpl$lab$util$Util.POSITIVE_INFINITY=Number.POSITIVE_INFINITY;mpl$lab$util$Util.VERSION="2.0.0";
mpl$lab$util$Util.NF=mpl$lab$util$Util.nf5;class mpl$lab$util$SubjectEvent extends mpl$lab$util$Printable{getName(a){}getSubject(){}getValue(){}nameEquals(a){}};class mpl$lab$util$Observer extends mpl$lab$util$Printable{observe(a){}};class mpl$lab$util$GenericEvent{constructor(a,b,c){this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(b));this.subject_=a;this.value_=c}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", subject_: "+this.subject_.toStringShort()+", value_: "+this.value_+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":'GenericEvent{name_:"'+this.name_+
'"}'}getName(a){return this.name_}getSubject(){return this.subject_}getValue(){return this.value_}nameEquals(a){return this.name_==mpl$lab$util$Util.toName(a)}};class mpl$lab$util$Parameter extends mpl$lab$util$SubjectEvent{getAsString(){}getChoices(){}getValues(){}isComputed(){}setComputed(a){}setFromString(a){}}mpl$lab$util$Parameter.CHOICES_MODIFIED="CHOICES_MODIFIED";class mpl$lab$util$ParameterBoolean{constructor(a,b,c,d,e,f,g){this.subject_=a;this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(b));this.localName_=c;this.getter_=d;this.setter_=e;this.isComputed_=!1;this.choices_=[];this.values_=[];if(null!=f)if(null!=g)this.setChoices_(f,g);else throw"values not defined";}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+
", isComputed_: "+this.isComputed_+", subject_: "+this.subject_.toStringShort()+', localName_: "'+this.localName_+'", choices_: '+this.choices_+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":'ParameterBoolean{name_: "'+this.name_+'", value: '+this.getValue()+"}"}getAsString(){return this.getValue().toString()}getChoices(){return Array.from(this.choices_)}getName(a){return a?this.localName_:this.name_}getSubject(){return this.subject_}getValue(){return this.getter_()}getValues(){return this.values_.map(a=>
a.toString())}isComputed(){return this.isComputed_}nameEquals(a){return this.name_==mpl$lab$util$Util.toName(a)}setChoices(a,b){this.setChoices_(a,b);a=new mpl$lab$util$GenericEvent(this.subject_,mpl$lab$util$Parameter.CHOICES_MODIFIED,this);this.subject_.broadcast(a)}setChoices_(a,b){this.choices_=a;if(b.length!==a.length)throw"choices and values not same length";this.values_=b}setComputed(a){this.isComputed_=a}setFromString(a){this.setValue("true"==
a||"TRUE"==a)}setValue(a){if("boolean"!==typeof a)throw"non-boolean value: "+a;a!==this.getValue()&&this.setter_(a)}};class mpl$lab$util$ParameterNumber{constructor(a,b,c,d,e,f,g){this.subject_=a;this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(b));this.localName_=c;this.units_="";this.getter_=d;this.setter_=e;this.isComputed_=!1;this.signifDigits_=3;this.decimalPlaces_=-1;this.lowerLimit_=0;this.upperLimit_=mpl$lab$util$Util.POSITIVE_INFINITY;this.choices_=[];this.values_=[];if(null!=f)if(null!=g)this.setChoices_(f,
g);else throw"values is not defined";}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", isComputed_: "+this.isComputed_+", subject_: "+this.subject_.toStringShort()+', localName_: "'+this.localName_+'", units_: "'+this.units_+'", lowerLimit_: '+mpl$lab$util$Util.NF(this.lowerLimit_)+", upperLimit_: "+mpl$lab$util$Util.NF(this.upperLimit_)+", decimalPlaces_: "+this.decimalPlaces_+", signifDigits_: "+
this.signifDigits_+", choices_: ["+this.choices_+"], values_: ["+this.values_+"]}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":'ParameterNumber{name_: "'+this.name_+'", value: '+mpl$lab$util$Util.NF(this.getValue())+"}"}getAsString(){return this.getValue().toString()}getChoices(){return Array.from(this.choices_)}getDecimalPlaces(){return this.decimalPlaces_}getLowerLimit(){return this.lowerLimit_}getName(a){return a?this.localName_:this.name_}getSignifDigits(){return this.signifDigits_}getSubject(){return this.subject_}getUnits(){return this.units_}getUpperLimit(){return this.upperLimit_}getValue(){return this.getter_()}getValues(){return this.values_.map(a=>
a.toString())}isComputed(){return this.isComputed_}nameEquals(a){return this.name_==mpl$lab$util$Util.toName(a)}setChoices(a,b){this.setChoices_(a,b);a=new mpl$lab$util$GenericEvent(this.subject_,mpl$lab$util$Parameter.CHOICES_MODIFIED,this);this.subject_.broadcast(a)}setChoices_(a,b){if(b.length!==a.length)throw"choices and values not same length";this.choices_=a;this.values_=b}setComputed(a){this.isComputed_=a}setDecimalPlaces(a){this.decimalPlaces_=
a;return this}setFromString(a){const b=Number(a);if(isNaN(b))throw"not a number: "+a;this.setValue(b)}setLowerLimit(a){if(a>this.getValue()||a>this.upperLimit_)throw"out of range: "+a+" value="+this.getValue()+" upper="+this.upperLimit_;this.lowerLimit_=a;return this}setSignifDigits(a){this.signifDigits_=a;return this}setUnits(a){this.units_=a;return this}setUpperLimit(a){if(a<this.getValue()||a<this.lowerLimit_)throw"out of range: "+a+" value="+this.getValue()+" lower="+this.lowerLimit_;this.upperLimit_=
a;return this}setValue(a){if("number"!==typeof a)throw"not a number: "+a;if(a<this.lowerLimit_||a>this.upperLimit_)throw"out of range. "+a+" is not between "+this.lowerLimit_+" and "+this.upperLimit_;if(0<this.values_.length&&!this.values_.includes(a))throw a+" is not an allowed value among: ["+this.values_.join(",")+"]";a!==this.getValue()&&this.setter_(a)}};class mpl$lab$util$ParameterString{constructor(a,b,c,d,e,f,g){this.subject_=a;this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(b));this.localName_=c;this.getter_=d;this.setter_=e;this.isComputed_=!1;this.suggestedLength_=20;this.maxLength_=mpl$lab$util$Util.POSITIVE_INFINITY;this.choices_=[];this.values_=[];this.inputFunction_=null;if(null!=f)if(null!=g)this.setChoices_(f,g);else throw"values is not defined";
}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", isComputed_: "+this.isComputed_+", subject_: "+this.subject_.toStringShort()+', localName_: "'+this.localName_+'", suggestedLength_: '+this.suggestedLength_+", maxLength_: "+this.maxLength_+", choices_: ["+this.choices_+"], values_: ["+this.values_+"]}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":'ParameterString{name_: "'+this.name_+'", value: "'+this.getValue()+
'"}'}getAsString(){return this.getValue()}getChoices(){return Array.from(this.choices_)}getMaxLength(){return this.maxLength_}getName(a){return a?this.localName_:this.name_}getSubject(){return this.subject_}getSuggestedLength(){return this.suggestedLength_}getValue(){return this.getter_()}getValues(){return Array.from(this.values_)}isComputed(){return this.isComputed_}nameEquals(a){return this.name_==mpl$lab$util$Util.toName(a)}setChoices(a,b){this.setChoices_(a,b);a=new mpl$lab$util$GenericEvent(this.subject_,
mpl$lab$util$Parameter.CHOICES_MODIFIED,this);this.subject_.broadcast(a)}setChoices_(a,b){this.choices_=a;if(b.length!==a.length)throw"different lengths choices:"+a+" values:"+b;this.values_=b}setComputed(a){this.isComputed_=a}setFromString(a){this.setValue(a)}setInputFunction(a){this.inputFunction_=a;return this}setMaxLength(a){if(a<this.getValue().length)throw"too long";this.maxLength_=a;return this}setSuggestedLength(a){this.suggestedLength_=a;return this}setValue(a){null!=
this.inputFunction_&&(a=this.inputFunction_(a));if("string"!==typeof a)throw"non-string value: "+a;if(a.length>this.maxLength_)throw"string too long: "+a+" maxLength="+this.maxLength_;if(0<this.values_.length&&!this.values_.includes(a))throw'"'+a+'" is not an allowed value among: ['+this.values_.join(",")+"]";a!==this.getValue()&&this.setter_(a)}};class mpl$lab$util$Subject extends mpl$lab$util$Printable{addObserver(a){}broadcast(a){}broadcastParameter(a){}getName(){}getObservers(){}getParameter(a){}getParameters(){}getParameterBoolean(a){}getParameterNumber(a){}getParameterString(a){}removeObserver(a){}};class mpl$lab$util$AbstractSubject{constructor(a){if(!a)throw"no name";this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(a));this.observers_=[];this.paramList_=[];this.doBroadcast_=!0;this.isBroadcasting_=!1;this.commandList_=[]}toString(){return mpl$lab$util$Util.ADVANCED?"":", parameters: ["+this.paramList_.map(a=>a.toStringShort())+"], observers: ["+this.observers_.map(a=>a.toStringShort())+
"]}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+'{name_: "'+this.getName()+'"}'}addObserver(a){this.commandList_.push({action:!0,observer:a});this.doCommands()}doCommands(){if(!this.isBroadcasting_){for(let a=0,b=this.commandList_.length;a<b;a++){const c=this.commandList_[a];c.action?this.observers_.includes(c.observer)||this.observers_.push(c.observer):module$contents$goog$array_remove(this.observers_,c.observer)}this.commandList_=[]}}addParameter(a){const b=
a.getName(),c=this.getParam(b);if(null!=c)throw"parameter "+b+" already exists: "+c;this.paramList_.push(a)}broadcast(a){if(this.doBroadcast_){this.isBroadcasting_=!0;try{this.observers_.forEach(b=>b.observe(a))}finally{this.isBroadcasting_=!1,this.doCommands()}}}broadcastParameter(a){const b=this.getParam(a);if(null==b)throw"unknown Parameter "+a;this.broadcast(b)}getBroadcast(){return this.doBroadcast_}getClassName(){}getName(){return this.name_}getObservers(){return Array.from(this.observers_)}getParam(a){a=
mpl$lab$util$Util.toName(a);return module$contents$goog$array_find(this.paramList_,b=>b.getName()==a)}getParameter(a){const b=this.getParam(a);if(null!=b)return b;throw"Parameter not found "+a;}getParameterBoolean(a){const b=this.getParam(a);if(b instanceof mpl$lab$util$ParameterBoolean)return b;throw"ParameterBoolean not found "+a;}getParameterNumber(a){const b=this.getParam(a);if(b instanceof mpl$lab$util$ParameterNumber)return b;
throw"ParameterNumber not found "+a;}getParameterString(a){const b=this.getParam(a);if(b instanceof mpl$lab$util$ParameterString)return b;throw"ParameterString not found "+a;}getParameters(){return Array.from(this.paramList_)}removeObserver(a){this.commandList_.push({action:!1,observer:a});this.doCommands()}removeParameter(a){module$contents$goog$array_remove(this.paramList_,a)}setBroadcast(a){const b=this.doBroadcast_;this.doBroadcast_=a;return b}};const mpl$test$ExpectedPerf={ERN_MacBookProMid2010:{Safari:{all:{six_blocks_perf:2.8,pile_10_perf:7.7,clock_gears_perf:3.5}},Firefox:{all:{six_blocks_perf:4.5,pile_10_perf:8.2,clock_gears_perf:8}},Chrome:{all:{six_blocks_perf:1.2,pile_10_perf:2.44,pile_20_perf:25,clock_gears_perf:6}}},ERN_MacBookPro2013:{Safari:{simple:{six_blocks_perf:.47,pile_10_perf:.78,clock_gears_perf:.85},advanced:{six_blocks_perf:.47,pile_10_perf:.77,clock_gears_perf:.86}},Firefox:{simple:{six_blocks_perf:1.24,
pile_10_perf:2.02,clock_gears_perf:2.65},advanced:{six_blocks_perf:1.11,pile_10_perf:2.03,clock_gears_perf:2.62}},Chrome:{simple:{six_blocks_perf:.56,pile_10_perf:1.08,pile_20_perf:19,clock_gears_perf:.75},advanced:{six_blocks_perf:.54,pile_10_perf:1.04,pile_20_perf:11.24,clock_gears_perf:.72}}},ERN_MacBookPro2017:{Safari:{simple:{six_blocks_perf:.41,pile_10_perf:.75,clock_gears_perf:.73},advanced:{six_blocks_perf:.4,pile_10_perf:.69,clock_gears_perf:.76}},Firefox:{simple:{six_blocks_perf:1.09,pile_10_perf:1.75,
clock_gears_perf:2.23},advanced:{six_blocks_perf:.9,pile_10_perf:1.61,clock_gears_perf:2.36}},Chrome:{simple:{six_blocks_perf:.53,pile_10_perf:1.18,clock_gears_perf:.86},advanced:{six_blocks_perf:.5,pile_10_perf:1.02,clock_gears_perf:.81}}}};class mpl$test$TestRig{constructor(){throw"";}static getMachineName(){if(window.hasOwnProperty(mpl$test$TestRig.machineName)){const a=window[mpl$test$TestRig.machineName];if("string"===typeof a)return a}mpl$lab$util$Util.DEBUG&&console.log("TestRig.getMachineName: not defined "+mpl$test$TestRig.machineName);return"UNKNOWN_MACHINE"}static getBrowserName(){const a=navigator;return null==
a?"unknown":null!=a.userAgent.match(/.*Chrome.*/)?mpl$test$TestRig.BROWSER_CHROME:null!=a.userAgent.match(/.*Firefox.*/)?mpl$test$TestRig.BROWSER_FIREFOX:null!=a.userAgent.match(/.*Safari.*/)?mpl$test$TestRig.BROWSER_SAFARI:"other"}static getPerfLimit(a){return 1.2*a}static perfResult(a,b){return"time="+mpl$lab$util$Util.NF2(a)+" expected="+mpl$lab$util$Util.NF2(b)+"  ("+mpl$lab$util$Util.NF1S(100*
a/b-100)+"%)"}static perfExpected(a,b){void 0===b&&(b=1E4);var c=mpl$test$TestRig.getMachineName(),d=mpl$test$TestRig.getBrowserName(),e=mpl$lab$util$Util.ADVANCED?"advanced":"simple";const f=mpl$test$ExpectedPerf;goog.asserts.assertObject(f,"not an object "+f);let g="no expected results for machine: "+c;c=f[c];if(!goog.isObject(c))return mpl$test$TestRig.myPrintln(g,!0),b;g+=", browser: "+
d;d=c[d];if(!goog.isObject(d))return mpl$test$TestRig.myPrintln(g,!0),b;g+=", compiled: "+e;e=d[e];if(!goog.isObject(e)&&(e=d.all,!goog.isObject(e)))return mpl$test$TestRig.myPrintln(g,!0),b;e=e[a];return"number"!==typeof e?(mpl$test$TestRig.myPrintln(g+(", test: "+a),!0),b):e}static runFunction(a){try{a()}catch(b){mpl$test$TestRig.testsFailed+=1,mpl$test$TestRig.myPrintln("***FAILED*** "+
mpl$test$TestRig.testName+" "+b,!0),mpl$test$TestRig.myPrintln(b.stack,!0)}}static schedule(a){mpl$test$TestRig.testFns.push(goog.partial(mpl$test$TestRig.runFunction,a))}static runTests(){const a=mpl$test$TestRig.testFns.shift();"function"===typeof a&&(a(),setTimeout(mpl$test$TestRig.runTests,10))}static startTests(){mpl$test$TestRig.testsFailed=
0;var a=document.getElementById("test_results");if(!goog.isObject(a))throw'<p> element with id="test_results" not found';mpl$test$TestRig.output=a;a=new Date;mpl$test$TestRig.myPrintln(a.toDateString()+" "+a.toTimeString());mpl$test$TestRig.myPrintln("compiled "+mpl$lab$util$Util.COMPILE_TIME);mpl$test$TestRig.myPrintln("machine = "+mpl$test$TestRig.getMachineName());
mpl$test$TestRig.myPrintln("browser = "+mpl$test$TestRig.getBrowserName());COMPILED?mpl$test$TestRig.myPrintln("COMPILE_LEVEL = "+(mpl$lab$util$Util.ADVANCED?"advanced":"simple")):mpl$test$TestRig.myPrintln("COMPILE_LEVEL = whitespace or debug");mpl$test$TestRig.myPrintln("goog.DEBUG = "+goog.DEBUG);mpl$test$TestRig.myPrintln("Util.DEBUG = "+
mpl$lab$util$Util.DEBUG);mpl$test$TestRig.myPrintln("myPhysicsLab version = "+mpl$lab$util$Util.VERSION);a=navigator;null!=a&&(mpl$test$TestRig.myPrintln("userAgent = "+a.userAgent),mpl$test$TestRig.myPrintln("platform = "+a.platform));window.MSSTream&&mpl$test$TestRig.myPrintln("MSStream detected: probably on Internet Explorer for Windows Phone");if(goog.DEBUG&&
!mpl$lab$util$Util.ADVANCED){a=1;try{goog.asserts.assert(!1),a=2}catch(b){mpl$test$TestRig.myPrintln("asserts are working")}if(2==a)throw"asserts are not working";}else mpl$test$TestRig.myPrintln("NOTE: asserts are NOT enabled")}static finishTests(){var a=mpl$test$TestRig.testsFailed;0<a?mpl$test$TestRig.myPrintln("Tests finished -- "+a+" TESTS FAILED",!0):mpl$test$TestRig.myPrintln("Tests finished and passed.");
a=new Date;mpl$test$TestRig.myPrintln(a.toDateString()+" "+a.toTimeString())}static startTest(a){mpl$test$TestRig.testName=a;mpl$test$TestRig.myPrintln(a)}static myPrintln(a,b,c){console.log(a);null!=mpl$test$TestRig.output&&(b&&(a='<span class="error">'+a+"</span>"),c&&(a='<span class="warning">'+a+"</span>"),mpl$test$TestRig.output.innerHTML+=a+"<br>",window.scrollTo(0,document.documentElement.offsetHeight-
window.innerHeight))}static reportTestResults(a,b,c){let d=mpl$test$TestRig.testName+" ["+b+"]";if(a)"performance"==b&&(d+=" "+c),a=null!=mpl$test$TestRig.testName.match(/.*error.*/),mpl$test$TestRig.myPrintln("passed: "+d,!1,a);else if(mpl$test$TestRig.testsFailed+=1,mpl$test$TestRig.myPrintln("FAILED "+d,!0),"string"===typeof c&&0<c.length&&mpl$test$TestRig.myPrintln(c,
!0),console.trace(),mpl$test$TestRig.ABORT_ON_FAIL)throw Error();}static assertEquals(a,b){b!==a&&mpl$test$TestRig.reportTestResults(!1,"value","expected="+a+" but was actual="+b)}static assertRoughlyEquals(a,b,c){"number"!==typeof b?mpl$test$TestRig.reportTestResults(!1,"value","not a number "+b):Math.abs(a-b)>c&&mpl$test$TestRig.reportTestResults(!1,"value","expected="+a+" but was actual="+b+" tolerance="+
c)}static assertLessThan(a,b){"number"!==typeof a?mpl$test$TestRig.reportTestResults(!1,"value","not a number "+a):a>b&&mpl$test$TestRig.reportTestResults(!1,"value","value of "+a+" exceeds limit of "+b)}static assertTrue(a){"boolean"===typeof a&&a||mpl$test$TestRig.reportTestResults(!1,"assert")}static assertElementsEquals(a,b){if(Array.isArray(b))if(a.length!=b.length)mpl$test$TestRig.reportTestResults(!1,
"assert","expected array length "+a.length+" but found "+b.length);else for(let c=0,d=a.length;c<d;c++)a[c]!=b[c]&&mpl$test$TestRig.reportTestResults(!1,"assert","array elements not equal expected="+(a[c]+" but was actual="+b[c]));else mpl$test$TestRig.reportTestResults(!1,"assert","not an array "+b)}static assertFalse(a){("boolean"!==typeof a||a)&&mpl$test$TestRig.reportTestResults(!1,"assert")}static assertNaN(a){isNaN(a)||
mpl$test$TestRig.reportTestResults(!1,"assert","value is not NaN "+a)}static assertNotNull(a){null===a&&mpl$test$TestRig.reportTestResults(!1,"assert","value is null")}static assertNull(a){null!==a&&mpl$test$TestRig.reportTestResults(!1,"assert","value is not null "+a)}static assertNotThrows(a){try{a()}catch(b){mpl$test$TestRig.reportTestResults(!1,"exception","exception should not occur")}}static assertThrows(a){try{a(),
mpl$test$TestRig.reportTestResults(!1,"assert","expected exception did not occur")}catch(b){return String(b)}}static assertUndefined(a){void 0!==a&&mpl$test$TestRig.reportTestResults(!1,"assert")}}mpl$test$TestRig.ABORT_ON_FAIL=!1;mpl$test$TestRig.BROWSER_CHROME="Chrome";mpl$test$TestRig.BROWSER_FIREFOX="Firefox";mpl$test$TestRig.BROWSER_SAFARI="Safari";
mpl$test$TestRig.testFns=[];mpl$test$TestRig.testsFailed=0;mpl$test$TestRig.output=null;mpl$test$TestRig.testName="";mpl$test$TestRig.machineName="MYPHYSICSLAB_MACHINE_NAME";const module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1 extends mpl$lab$util$AbstractSubject{constructor(){super("MOCK");this.fooness_=0;this.fooBarness_=!1;this.qux_="corge"}getClassName(){return"MockSubject1"}getFooness(){return this.fooness_}setFooness(a){this.fooness_=a}getFooBarness(){return this.fooBarness_}setFooBarness(a){this.fooBarness_=a}getQux(){return this.qux_}setQux(a){this.qux_=a}}
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOONESS="FOONESS";module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS="FOO_BARNESS";module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX="QUX";
class module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockObserver1{constructor(a){this.numStrings=this.numDoubles=this.numBooleans=this.numEvents=0;this.mockSubj1=a}observe(a){a instanceof mpl$lab$util$GenericEvent?(this.numEvents++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("FOOEVENT",a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("fooevent")),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof
mpl$lab$util$GenericEvent),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject())):a instanceof mpl$lab$util$ParameterBoolean?(this.numBooleans++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("FOO_BARNESS",a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("foo-barness")),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof
mpl$lab$util$ParameterBoolean),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject()),a=a.getValue(),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue("boolean"===typeof a)):a instanceof mpl$lab$util$ParameterNumber?(this.numDoubles++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("FOONESS",a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("fooness")),
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof mpl$lab$util$ParameterNumber),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject()),a=a.getValue(),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue("number"===typeof a)):a instanceof mpl$lab$util$ParameterString&&(this.numStrings++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("QUX",
a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("qux")),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof mpl$lab$util$ParameterString),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue("string"===typeof a.getValue()))}toStringShort(){return"MockObserver1"}}
class module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockObserver2{constructor(a){this.numStrings=this.numDoubles=this.numBooleans=this.numEvents=0;this.mockSubj1=a}observe(a){a instanceof mpl$lab$util$GenericEvent?(this.numEvents++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("FOOEVENT",a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("fooevent")),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof
mpl$lab$util$GenericEvent),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject())):a instanceof mpl$lab$util$ParameterBoolean?(this.mockSubj1.removeObserver(this),this.numBooleans++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("FOO_BARNESS",a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("foo-barness")),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof
mpl$lab$util$ParameterBoolean),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject()),a=a.getValue(),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue("boolean"===typeof a)):a instanceof mpl$lab$util$ParameterNumber?(this.numDoubles++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("FOONESS",a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("fooness")),
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof mpl$lab$util$ParameterNumber),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject()),a=a.getValue(),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue("number"===typeof a)):a instanceof mpl$lab$util$ParameterString&&(this.numStrings++,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("QUX",
a.getName()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a.nameEquals("qux")),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(a instanceof mpl$lab$util$ParameterString),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(this.mockSubj1,a.getSubject()),module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue("string"===typeof a.getValue()))}toStringShort(){return"MockObserver2"}}
class mpl$lab$util$test$AbstractSubjectTest{static test(){module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_schedule(mpl$lab$util$test$AbstractSubjectTest.testAbstractSubject1)}static testAbstractSubject1(){module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_startTest(mpl$lab$util$test$AbstractSubjectTest.groupName+"testAbstractSubject1");const a=new module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1;
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(0,a.getFooness());module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertFalse(a.getFooBarness());module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("corge",a.getQux());var b=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOONESS,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOONESS,
()=>a.getFooness(),h=>a.setFooness(h));a.addParameter(b);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(0,b.getValue());var c=new mpl$lab$util$ParameterBoolean(a,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS,()=>a.getFooBarness(),h=>a.setFooBarness(h));a.addParameter(c);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertFalse(c.getValue());
const d=new mpl$lab$util$ParameterString(a,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX,module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX,()=>a.getQux(),h=>a.setQux(h));a.addParameter(d);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals("corge",d.getValue());module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(b,a.getParameter(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOONESS));
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(b,a.getParameterNumber(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOONESS));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOONESS));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>a.getParameterString(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOONESS));
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(c,a.getParameter(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(c,a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>a.getParameterNumber(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS));
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>a.getParameterString(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(d,a.getParameter(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(d,a.getParameterString(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX));
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>a.getParameterNumber(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>a.getParameter("BLARG"));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertThrows(()=>
a.getParameterNumber("BLARG"));var e=a.getParameters();module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(3,e.length);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(e.includes(b));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(e.includes(c));module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(e.includes(d));e=new module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockObserver1(a);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(0,
e.numEvents);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(0,e.numBooleans);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(0,e.numDoubles);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(0,e.numStrings);a.addObserver(e);const f=a.getObservers();module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,f.length);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(f.includes(e));
const g=new mpl$lab$util$GenericEvent(a,"fooEvent");g.getSubject().broadcast(g);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,e.numEvents);a.broadcast(g);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(2,e.numEvents);b.getSubject().broadcast(b);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,e.numDoubles);a.broadcastParameter(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS);
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,e.numBooleans);c.setValue(!c.getValue());c.getSubject().broadcast(c);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(2,e.numBooleans);c.setValue(!c.getValue());a.broadcast(c);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(3,e.numBooleans);a.broadcast(d);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,e.numStrings);d.setValue("grault");
d.getSubject().broadcast(d);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(2,e.numStrings);d.setValue("blarg");a.broadcastParameter(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.QUX);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(3,e.numStrings);a.removeObserver(e);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(0,a.getObservers().length);a.broadcastParameter(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS);
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(3,e.numBooleans);c=new module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockObserver2(a);a.addObserver(c);a.addObserver(e);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(2,a.getObservers().length);b.getSubject().broadcast(b);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,c.numDoubles);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(2,
e.numDoubles);a.broadcastParameter(module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_MockSubject1.FOOBARNESS);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,c.numBooleans);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(4,e.numBooleans);b=a.getObservers();module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertEquals(1,b.length);module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertFalse(f.includes(c));
module$contents$myphysicslab$lab$util$test$AbstractSubjectTest_assertTrue(f.includes(e))}}mpl$lab$util$test$AbstractSubjectTest.groupName="AbstractSubjectTest.";class mpl$lab$util$GenericVector{getX(){}getY(){}getZ(){}};class mpl$lab$util$Vector{constructor(a,b,c){c="number"===typeof c?c:0;this.x_=mpl$lab$util$Util.testNumber(a);this.y_=mpl$lab$util$Util.testNumber(b);this.z_=mpl$lab$util$Util.testNumber(c);this.lengthSquared_=this.length_=mpl$lab$util$Util.NaN}toString(){return mpl$lab$util$Util.ADVANCED?"":"Vector{x: "+mpl$lab$util$Util.NF5(this.x_)+
", y: "+mpl$lab$util$Util.NF5(this.y_)+(0!=this.z_?", z: "+mpl$lab$util$Util.NF5(this.z_):"")+"}"}static clone(a){return a instanceof mpl$lab$util$Vector?a:new mpl$lab$util$Vector(a.getX(),a.getY(),a.getZ())}add(a){return new mpl$lab$util$Vector(this.x_+a.getX(),this.y_+a.getY(),this.z_+a.getZ())}angleTo(a){if(0!=this.getZ()||0!=a.getZ())throw"";const b=Math.atan2(this.y_,this.x_);
a=Math.atan2(a.getY(),a.getX());return mpl$lab$util$Util.limitAngle(a-b)}distanceSquaredTo(a){const b=this.x_-a.getX(),c=this.y_-a.getY();a=this.z_-a.getZ();return b*b+c*c+a*a}distanceTo(a){return Math.sqrt(this.distanceSquaredTo(a))}divide(a){if(1===a)return this;if(a<mpl$lab$util$Vector.TINY_POSITIVE)throw"Vector.divide by near zero factor "+mpl$lab$util$Util.NFE(a);return new mpl$lab$util$Vector(this.x_/
a,this.y_/a,this.z_/a)}dotProduct(a){const b=this.x_*a.getX()+this.y_*a.getY()+this.z_*a.getZ();if(isNaN(b))throw mpl$lab$util$Util.DEBUG?"dotproduct is not a number "+this+" "+a:"";return b}equals(a){return null===a?!1:a.getX()===this.x_&&a.getY()===this.y_&&a.getZ()===this.z_}getAngle(){return Math.atan2(this.y_,this.x_)}getX(){return this.x_}getY(){return this.y_}getZ(){return this.z_}length(){isNaN(this.length_)&&(this.length_=Math.sqrt(this.lengthSquared()));return this.length_}lengthCheap(){const a=
Math.abs(this.x_)+Math.abs(this.y_);return 0==this.z_?a:a+Math.abs(this.z_)}lengthSquared(){isNaN(this.lengthSquared_)&&(this.lengthSquared_=0===this.z_?this.x_*this.x_+this.y_*this.y_:this.x_*this.x_+this.y_*this.y_+this.z_*this.z_);return this.lengthSquared_}multiply(a){return 1===a?this:new mpl$lab$util$Vector(a*this.x_,a*this.y_,a*this.z_)}nearEqual(a,b){return mpl$lab$util$Util.veryDifferent(this.x_,a.getX(),b)||mpl$lab$util$Util.veryDifferent(this.y_,
a.getY(),b)||mpl$lab$util$Util.veryDifferent(this.z_,a.getZ(),b)?!1:!0}normalize(){return this.divide(this.length())}rotate(a,b){let c;void 0!==b?c=a:(c=Math.cos(a),b=Math.sin(a));if(1E-12<Math.abs(c*c+b*b-1))throw"not cosine, sine: "+c+", "+b;return new mpl$lab$util$Vector(this.x_*c-this.y_*b,this.x_*b+this.y_*c,this.z_)}subtract(a){return new mpl$lab$util$Vector(this.x_-a.getX(),this.y_-a.getY(),this.z_-a.getZ())}}
mpl$lab$util$Vector.EAST=new mpl$lab$util$Vector(1,0);mpl$lab$util$Vector.NORTH=new mpl$lab$util$Vector(0,1);mpl$lab$util$Vector.ORIGIN=new mpl$lab$util$Vector(0,0);mpl$lab$util$Vector.SOUTH=new mpl$lab$util$Vector(0,-1);mpl$lab$util$Vector.TINY_POSITIVE=1E-10;
mpl$lab$util$Vector.WEST=new mpl$lab$util$Vector(-1,0);class mpl$lab$util$MutableVector{constructor(a,b,c){c="number"===typeof c?c:0;this.x_=mpl$lab$util$Util.testNumber(a);this.y_=mpl$lab$util$Util.testNumber(b);this.z_=mpl$lab$util$Util.testNumber(c)}toString(){return mpl$lab$util$Util.ADVANCED?"":"MutableVector{x: "+mpl$lab$util$Util.NF5(this.x_)+", y: "+mpl$lab$util$Util.NF5(this.y_)+
(0!=this.z_?", z: "+mpl$lab$util$Util.NF5(this.z_):"")+"}"}static clone(a){return new mpl$lab$util$MutableVector(a.getX(),a.getY(),a.getZ())}add(a){this.x_+=a.getX();this.y_+=a.getY();this.z_+=a.getZ();return this}distanceSquaredTo(a){const b=this.x_-a.getX(),c=this.y_-a.getY();a=this.z_-a.getZ();return b*b+c*c+a*a}distanceTo(a){return Math.sqrt(this.distanceSquaredTo(a))}divide(a){if(1===a)return this;if(a<mpl$lab$util$Vector.TINY_POSITIVE)throw"div by zero";
this.x_/=a;this.y_/=a;this.z_/=a;return this}equals(a){return null===a?!1:a.getX()===this.x_&&a.getY()===this.y_&&a.getZ()===this.z_}getX(){return this.x_}getY(){return this.y_}getZ(){return this.z_}length(){return Math.sqrt(this.lengthSquared())}lengthCheap(){const a=Math.abs(this.x_)+Math.abs(this.y_);return 0==this.z_?a:a+Math.abs(this.z_)}lengthSquared(){return 0===this.z_?this.x_*this.x_+this.y_*this.y_:this.x_*this.x_+this.y_*this.y_+this.z_*this.z_}multiply(a){this.x_*=a;this.y_*=a;this.z_*=
a;return this}nearEqual(a,b){return mpl$lab$util$Util.veryDifferent(this.x_,a.getX(),b)||mpl$lab$util$Util.veryDifferent(this.y_,a.getY(),b)||mpl$lab$util$Util.veryDifferent(this.z_,a.getZ(),b)?!1:!0}normalize(){const a=this.length();if(a<mpl$lab$util$Vector.TINY_POSITIVE)throw"";return new mpl$lab$util$Vector(this.x_/a,this.y_/a,this.z_/a)}setTo(a,b,c){this.x_=a;this.y_=b;this.z_=
c||0;return this}setToVector(a){this.x_=a.getX();this.y_=a.getY();this.z_=a.getZ();return this}subtract(a){this.x_-=a.getX();this.y_-=a.getY();this.z_-=a.getZ();return this}};class mpl$lab$util$AffineTransform{constructor(a,b,c,d,e,f){this.m11_=a;this.m12_=b;this.m21_=c;this.m22_=d;this.dx_=e;this.dy_=f}toString(){return mpl$lab$util$Util.ADVANCED?"":"AffineTransform{m11_: "+mpl$lab$util$Util.NF(this.m11_)+", m12_: "+mpl$lab$util$Util.NF(this.m12_)+", m21_: "+mpl$lab$util$Util.NF(this.m21_)+", m22_: "+mpl$lab$util$Util.NF(this.m22_)+
", dx_: "+mpl$lab$util$Util.NF(this.dx_)+", dy_: "+mpl$lab$util$Util.NF(this.dy_)+"}"}applyTransform(a){a.transform(this.m11_,this.m12_,this.m21_,this.m22_,this.dx_,this.dy_)}concatenate(a){return new mpl$lab$util$AffineTransform(this.m11_*a.m11_+this.m21_*a.m12_,this.m12_*a.m11_+this.m22_*a.m12_,this.m11_*a.m21_+this.m21_*a.m22_,this.m12_*a.m21_+this.m22_*a.m22_,this.m11_*a.dx_+this.m21_*a.dy_+this.dx_,this.m12_*a.dx_+this.m22_*
a.dy_+this.dy_)}lineTo(a,b,c){a=this.transform(a,b);c.lineTo(a.getX(),a.getY())}moveTo(a,b,c){a=this.transform(a,b);c.moveTo(a.getX(),a.getY())}rotate(a){const b=Math.cos(a);a=Math.sin(a);return new mpl$lab$util$AffineTransform(b*this.m11_+a*this.m21_,b*this.m12_+a*this.m22_,-a*this.m11_+b*this.m21_,-a*this.m12_+b*this.m22_,this.dx_,this.dy_)}scale(a,b){return new mpl$lab$util$AffineTransform(this.m11_*a,this.m12_*a,this.m21_*b,this.m22_*b,this.dx_,
this.dy_)}setTransform(a){a.setTransform(this.m11_,this.m12_,this.m21_,this.m22_,this.dx_,this.dy_)}transform(a,b){"number"!==typeof a&&(b=a.getY(),a=a.getX());if("number"!==typeof a||"number"!==typeof b)throw"need a Vector or two numbers";return new mpl$lab$util$Vector(this.m11_*a+this.m21_*b+this.dx_,this.m12_*a+this.m22_*b+this.dy_)}translate(a,b){"number"!==typeof a&&(b=a.getY(),a=a.getX());if("number"!==typeof a||"number"!==typeof b)throw"need a Vector or two numbers";
return new mpl$lab$util$AffineTransform(this.m11_,this.m12_,this.m21_,this.m22_,this.dx_+this.m11_*a+this.m21_*b,this.dy_+this.m12_*a+this.m22_*b)}}mpl$lab$util$AffineTransform.IDENTITY=new mpl$lab$util$AffineTransform(1,0,0,1,0,0);const module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$AffineTransformTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$AffineTransformTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$AffineTransformTest{static test(){module$contents$myphysicslab$lab$util$test$AffineTransformTest_schedule(mpl$lab$util$test$AffineTransformTest.testAffineTransform)}static testAffineTransform(){module$contents$myphysicslab$lab$util$test$AffineTransformTest_startTest(mpl$lab$util$test$AffineTransformTest.groupName+"testAffineTransform");module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(mpl$lab$util$AffineTransform.IDENTITY.transform(mpl$lab$util$Vector.ORIGIN).equals(mpl$lab$util$Vector.ORIGIN));
var a=mpl$lab$util$AffineTransform.IDENTITY.translate(2,3);module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(0,0).nearEqual(new mpl$lab$util$Vector(2,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(2,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(1,
0).nearEqual(new mpl$lab$util$Vector(3,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.EAST).nearEqual(new mpl$lab$util$Vector(3,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(0,1).nearEqual(new mpl$lab$util$Vector(2,4),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.NORTH).nearEqual(new mpl$lab$util$Vector(2,
4),1E-13));a=mpl$lab$util$AffineTransform.IDENTITY.translate(new mpl$lab$util$MutableVector(2,3));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(0,0).nearEqual(new mpl$lab$util$Vector(2,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(2,
3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(1,0).nearEqual(new mpl$lab$util$Vector(3,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.EAST).nearEqual(new mpl$lab$util$Vector(3,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(new mpl$lab$util$MutableVector(0,
1)).nearEqual(new mpl$lab$util$Vector(2,4),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.NORTH).nearEqual(new mpl$lab$util$Vector(2,4),1E-13));a=mpl$lab$util$AffineTransform.IDENTITY.scale(2,3);module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(mpl$lab$util$Vector.ORIGIN,
1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.NORTH).nearEqual(new mpl$lab$util$Vector(0,3),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.EAST).nearEqual(new mpl$lab$util$Vector(2,0),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(new mpl$lab$util$Vector(1,
1)).nearEqual(new mpl$lab$util$Vector(2,3),1E-13));a=mpl$lab$util$AffineTransform.IDENTITY.rotate(Math.PI/2);module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.EAST).nearEqual(mpl$lab$util$Vector.NORTH,
1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.NORTH).nearEqual(mpl$lab$util$Vector.WEST,1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.WEST).nearEqual(mpl$lab$util$Vector.SOUTH,1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(a.transform(mpl$lab$util$Vector.SOUTH).nearEqual(mpl$lab$util$Vector.EAST,
1E-13));a=mpl$lab$util$AffineTransform.IDENTITY.rotate(Math.PI/2);const b=mpl$lab$util$AffineTransform.IDENTITY.translate(2,3);var c=a.concatenate(b);module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(c.transform(mpl$lab$util$Vector.EAST).nearEqual(a.transform(b.transform(mpl$lab$util$Vector.EAST)),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(c.transform(mpl$lab$util$Vector.EAST).nearEqual(new mpl$lab$util$Vector(-3,
3),1E-13));c=b.concatenate(a);module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(c.transform(mpl$lab$util$Vector.EAST).nearEqual(b.transform(a.transform(mpl$lab$util$Vector.EAST)),1E-13));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertTrue(c.transform(mpl$lab$util$Vector.EAST).nearEqual(new mpl$lab$util$Vector(2,4),1E-13));const d=new mpl$lab$util$AffineTransform(1,
0,0,1,0,0);module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertThrows(()=>d.transform(0));module$contents$myphysicslab$lab$util$test$AffineTransformTest_assertThrows(()=>d.translate(0))}}mpl$lab$util$test$AffineTransformTest.groupName="AffineTransformTest.";class mpl$lab$util$Calculus{constructor(){throw"";}static simp(a,b,c){const d=(c-b)/2;return d/3*(a(b)+4*a(b+d)+a(c))}static aq(a,b,c,d,e){const f=(b+c)/2,g=mpl$lab$util$Calculus.simp(a,b,f),h=mpl$lab$util$Calculus.simp(a,f,c);return Math.abs(e-g-h)<d?g+h:mpl$lab$util$Calculus.aq(a,b,f,d/2,g)+mpl$lab$util$Calculus.aq(a,f,c,d/2,h)}static adaptQuad(a,b,c,d){if(b>c)throw"adaptQuad a > b"+
b+" "+c;if(b==c)return 0;const e=mpl$lab$util$Calculus.simp(a,b,c);return mpl$lab$util$Calculus.aq(a,b,c,10*d,e)}};const module$contents$myphysicslab$lab$util$test$CalculusTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$CalculusTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$CalculusTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$CalculusTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$CalculusTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$CalculusTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$CalculusTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$CalculusTest{static test(){module$contents$myphysicslab$lab$util$test$CalculusTest_schedule(mpl$lab$util$test$CalculusTest.testCalculus)}static testFn(a){return 100*Math.sin(10/a)/(a*a)}static testCalculus(){module$contents$myphysicslab$lab$util$test$CalculusTest_startTest(mpl$lab$util$test$CalculusTest.groupName+"testCalculus");module$contents$myphysicslab$lab$util$test$CalculusTest_assertRoughlyEquals(-54.40211,
mpl$lab$util$test$CalculusTest.testFn(1),1E-4);module$contents$myphysicslab$lab$util$test$CalculusTest_assertRoughlyEquals(-1.426014,mpl$lab$util$Calculus.adaptQuad(mpl$lab$util$test$CalculusTest.testFn,1,3,1E-4),1E-5)}}mpl$lab$util$test$CalculusTest.groupName="CalculusTest.";class mpl$lab$util$HistoryIterator{getIndex(){}getValue(){}hasNext(){}hasPrevious(){}nextValue(){}previousValue(){}};class mpl$lab$util$HistoryList{getEndIndex(){}getEndValue(){}getIterator(a){}getSize(){}getStartIndex(){}getValue(a){}reset(){}store(a){}};class mpl$lab$util$CircularList{constructor(a){this.capacity_=a||3E3;if(2>this.capacity_)throw"";this.nextPtr_=this.cycles_=this.size_=0;this.lastPtr_=-1;this.values_=Array(this.capacity_);this.lastValue_=null}toString(){return mpl$lab$util$Util.ADVANCED?"":"CircularList{capacity_: "+this.capacity_+", size_: "+this.size_+", cycles_: "+this.cycles_+", nextPtr_: "+this.nextPtr_+", lastPtr_: "+this.lastPtr_+"}"}causeMaxIntError(){this.size_=this.capacity_;
this.cycles_=Math.floor(mpl$lab$util$Util.MAX_INTEGER/this.capacity_)-1}getEndIndex(){return 0==this.size_?-1:0==this.nextPtr_?this.pointerToIndex(this.size_-1):this.pointerToIndex(this.nextPtr_-1)}getEndValue(){const a=this.getEndIndex();return-1==a?null:this.values_[this.indexToPointer(a)]}getIterator(a){return new module$contents$myphysicslab$lab$util$CircularList_CircularListIterator(this,a)}getSize(){return this.size_}getStartIndex(){return this.size_<this.capacity_?0:
this.pointerToIndex(this.nextPtr_)}getValue(a){a=this.indexToPointer(a);return this.values_[a]}indexToPointer(a){return this.size_<this.capacity_?a:a-(this.cycles_-(a%this.capacity_<this.nextPtr_?0:1))*this.capacity_}pointerToIndex(a){if(this.size_<this.capacity_)return a;a+=(this.cycles_-(a<this.nextPtr_?0:1))*this.capacity_;if(a>=mpl$lab$util$Util.MAX_INTEGER)throw mpl$lab$util$CircularList.MAX_INDEX_ERROR;return a}reset(){this.cycles_=this.nextPtr_=
this.size_=0;this.lastPtr_=-1}store(a){this.lastPtr_=this.nextPtr_;this.values_[this.nextPtr_]=a;this.nextPtr_++;this.size_<this.capacity_&&this.size_++;this.nextPtr_>=this.capacity_&&(this.cycles_++,this.nextPtr_=0);return this.pointerToIndex(this.lastPtr_)}}mpl$lab$util$CircularList.MAX_INDEX_ERROR="exceeded max int";
class module$contents$myphysicslab$lab$util$CircularList_CircularListIterator{constructor(a,b){this.first_=0<a.size_;this.cList_=a;if(void 0===b||0>b)b=a.getStartIndex();if(0<a.size_&&(b<a.getStartIndex()||b>a.getEndIndex()))throw"out of range startIndex="+b;this.index_=b;this.pointer_=a.indexToPointer(b)}getIndex(){if(0==this.cList_.size_)throw"no data";return this.index_}getValue(){if(0==this.cList_.size_)throw"no data";return this.cList_.values_[this.pointer_]}hasNext(){return this.first_||this.index_<
this.cList_.getEndIndex()}hasPrevious(){return this.first_||this.index_>this.cList_.getStartIndex()}nextValue(){if(0===this.cList_.size_)throw"no data";if(this.first_)this.first_=!1;else{if(this.index_+1>this.cList_.getEndIndex())throw"cannot iterate past end of list";this.index_++;this.pointer_=this.cList_.indexToPointer(this.index_)}return this.cList_.values_[this.pointer_]}previousValue(){if(0===this.cList_.size_)throw"no data";if(this.first_)this.first_=!1;else{if(this.index_-1<this.cList_.getStartIndex())throw"cannot iterate prior to start of list";
this.index_--;this.pointer_=this.cList_.indexToPointer(this.index_)}return this.cList_.values_[this.pointer_]}};const module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$CircularListTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$CircularListTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$CircularListTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$CircularListTest_startTest=a=>mpl$test$TestRig.startTest(a),module$contents$myphysicslab$lab$util$test$CircularListTest_assertNotNull=
a=>mpl$test$TestRig.assertNotNull(a),module$contents$myphysicslab$lab$util$test$CircularListTest_assertNull=a=>mpl$test$TestRig.assertNull(a);
class mpl$lab$util$test$CircularListTest{static test(){module$contents$myphysicslab$lab$util$test$CircularListTest_schedule(mpl$lab$util$test$CircularListTest.testUtilCircularList1);module$contents$myphysicslab$lab$util$test$CircularListTest_schedule(mpl$lab$util$test$CircularListTest.testUtilCircularList2);module$contents$myphysicslab$lab$util$test$CircularListTest_schedule(mpl$lab$util$test$CircularListTest.testUtilCircularList3)}static testUtilCircularList1(){module$contents$myphysicslab$lab$util$test$CircularListTest_startTest(mpl$lab$util$test$CircularListTest.groupName+
"testUtilCircularList1");const a=new mpl$lab$util$CircularList(10);var b;let c;module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(-1,a.getEndIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertNull(a.getEndValue());let d=a.getIterator();module$contents$myphysicslab$lab$util$test$CircularListTest_assertFalse(d.hasNext());
module$contents$myphysicslab$lab$util$test$CircularListTest_assertFalse(d.hasPrevious());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>d.nextValue());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>d.previousValue());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>d.getIndex());c=a.store(new mpl$lab$util$Vector(0,1));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,
c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(1,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getEndIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertNotNull(b=a.getEndValue());b&&module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(b.equals(new mpl$lab$util$Vector(0,
1)));d=a.getIterator();module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.hasNext());d.nextValue();module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,d.getIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.getValue().equals(new mpl$lab$util$Vector(0,1)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertFalse(d.hasNext());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>
d.nextValue());c=a.store(new mpl$lab$util$Vector(.1,1.1));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(1,c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(2,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(1,a.getEndIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertNotNull(b=
a.getEndValue());b&&module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(b.equals(new mpl$lab$util$Vector(.1,1.1)));d=a.getIterator();module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.hasNext());d.nextValue();module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,d.getIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.getValue().equals(new mpl$lab$util$Vector(0,
1)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.hasNext());d.nextValue();module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(1,d.getIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.getValue().equals(new mpl$lab$util$Vector(.1,1.1)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertFalse(d.hasNext());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>
d.nextValue());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>a.getIterator(2));for(b=2;10>b;b++)c=a.store(new mpl$lab$util$Vector(.1*b,(5>b?1:10)+.1*b)),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(9,
a.getEndIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertNotNull(b=a.getEndValue());b&&module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(b.equals(new mpl$lab$util$Vector(.9,10.9)));d=a.getIterator();for(b=-1;d.hasNext();)b++,d.nextValue(),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,d.getIndex()),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.getValue().equals(new mpl$lab$util$Vector(.1*
b,(5>b?1:10)+.1*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(9,b);module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>d.nextValue());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(9,a.getEndIndex());c=a.store(new mpl$lab$util$Vector(1,
11));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(1,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,a.getEndIndex());d=a.getIterator();for(b=0;d.hasNext();)b++,d.nextValue(),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,d.getIndex()),
module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.getValue().equals(new mpl$lab$util$Vector(.1*b,(5>b?1:10)+.1*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,b);module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>d.nextValue());for(b=11;20>b;b++)c=a.store(new mpl$lab$util$Vector(.1*b,(5>b?1:10)+.1*b)),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,
c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(19,a.getEndIndex());d=a.getIterator();for(b=9;d.hasNext();)b++,d.nextValue(),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,d.getIndex()),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.getValue().equals(new mpl$lab$util$Vector(.1*
b,(5>b?1:10)+.1*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(19,b);module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>d.nextValue());c=a.store(new mpl$lab$util$Vector(2,12));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(20,c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(11,
a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(20,a.getEndIndex());d=a.getIterator();for(b=10;d.hasNext();)b++,d.nextValue(),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,d.getIndex()),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.getValue().equals(new mpl$lab$util$Vector(.1*b,(5>b?1:10)+.1*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(20,b);
module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>d.nextValue())}static testUtilCircularList2(){module$contents$myphysicslab$lab$util$test$CircularListTest_startTest(mpl$lab$util$test$CircularListTest.groupName+"testUtilCircularList2");var a=new mpl$lab$util$CircularList(1E3);a.causeMaxIntError();var b,c=-1,d=module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>{for(b=0;3E3>b;b++)c=a.store(new mpl$lab$util$Vector(.1*
b,10*b))});module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(mpl$lab$util$CircularList.MAX_INDEX_ERROR,d);module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(c>=mpl$lab$util$Util.MAX_INTEGER-2);a.reset();module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getSize());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(-1,
a.getEndIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertNull(a.getEndValue());for(b=0;3E3>b;b++)c=a.store(new mpl$lab$util$Vector(.1*b,10*b));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(2999,c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(2E3,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(2999,a.getEndIndex());var e=a.getIterator(2500);for(b=2499;e.hasNext();)b++,
e.nextValue(),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,e.getIndex()),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(e.getValue().equals(new mpl$lab$util$Vector(.1*b,10*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(2999,b);module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>e.nextValue())}static testUtilCircularList3(){module$contents$myphysicslab$lab$util$test$CircularListTest_startTest(mpl$lab$util$test$CircularListTest.groupName+
"testUtilCircularList3");var a=new mpl$lab$util$CircularList(100),b;for(b=0;90>b;b++){var c=a.store(new mpl$lab$util$Vector(.1*b,10*b));var d=a.getValue(c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.equals(new mpl$lab$util$Vector(.1*b,10*b)))}module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(89,c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,a.getStartIndex());
module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(89,a.getEndIndex());var e=a.getIterator(a.getEndIndex());for(b=90;e.hasPrevious();)b--,module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(0<=b),e.previousValue(),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,e.getIndex()),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(e.getValue().equals(new mpl$lab$util$Vector(.1*b,10*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,
b);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(0,e.getIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertFalse(e.hasPrevious());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>e.previousValue());for(b=90;110>b;b++)c=a.store(new mpl$lab$util$Vector(.1*b,10*b)),d=a.getValue(c),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(d.equals(new mpl$lab$util$Vector(.1*
b,10*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(109,c);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,a.getStartIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(109,a.getEndIndex());e=a.getIterator(a.getEndIndex());for(b=110;e.hasPrevious();)b--,module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(10<=b),e.previousValue(),module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(b,
e.getIndex()),module$contents$myphysicslab$lab$util$test$CircularListTest_assertTrue(e.getValue().equals(new mpl$lab$util$Vector(.1*b,10*b)));module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,b);module$contents$myphysicslab$lab$util$test$CircularListTest_assertEquals(10,e.getIndex());module$contents$myphysicslab$lab$util$test$CircularListTest_assertThrows(()=>e.previousValue())}}
mpl$lab$util$test$CircularListTest.groupName="CircularListTest.";goog.disposable={};goog.disposable.IDisposable=function(){};goog.disposable.IDisposable.prototype.dispose=goog.abstractMethod;goog.disposable.IDisposable.prototype.isDisposed=goog.abstractMethod;function module$contents$goog$dispose_dispose(a){a&&"function"==typeof a.dispose&&a.dispose()}goog.dispose=module$contents$goog$dispose_dispose;function module$contents$goog$disposeAll_disposeAll(a){for(let b=0,c=arguments.length;b<c;++b){const d=arguments[b];goog.isArrayLike(d)?module$contents$goog$disposeAll_disposeAll.apply(null,d):module$contents$goog$dispose_dispose(d)}}goog.disposeAll=module$contents$goog$disposeAll_disposeAll;goog.Disposable=function(){goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF&&(goog.Disposable.INCLUDE_STACK_ON_CREATION&&(this.creationStack=Error().stack),goog.Disposable.instances_[goog.getUid(this)]=this);this.disposed_=this.disposed_;this.onDisposeCallbacks_=this.onDisposeCallbacks_};goog.Disposable.MonitoringMode={OFF:0,PERMANENT:1,INTERACTIVE:2};goog.Disposable.MONITORING_MODE=0;goog.Disposable.INCLUDE_STACK_ON_CREATION=!0;goog.Disposable.instances_={};
goog.Disposable.getUndisposedObjects=function(){var a=[],b;for(b in goog.Disposable.instances_)goog.Disposable.instances_.hasOwnProperty(b)&&a.push(goog.Disposable.instances_[Number(b)]);return a};goog.Disposable.clearUndisposedObjects=function(){goog.Disposable.instances_={}};goog.Disposable.prototype.disposed_=!1;goog.Disposable.prototype.isDisposed=function(){return this.disposed_};goog.Disposable.prototype.getDisposed=goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose=function(){if(!this.disposed_&&(this.disposed_=!0,this.disposeInternal(),goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF)){var a=goog.getUid(this);if(goog.Disposable.MONITORING_MODE==goog.Disposable.MonitoringMode.PERMANENT&&!goog.Disposable.instances_.hasOwnProperty(a))throw Error(this+" did not call the goog.Disposable base constructor or was disposed of after a clearUndisposedObjects call");if(goog.Disposable.MONITORING_MODE!=goog.Disposable.MonitoringMode.OFF&&
this.onDisposeCallbacks_&&0<this.onDisposeCallbacks_.length)throw Error(this+" did not empty its onDisposeCallbacks queue. This probably means it overrode dispose() or disposeInternal() without calling the superclass' method.");delete goog.Disposable.instances_[a]}};goog.Disposable.prototype.registerDisposable=function(a){this.addOnDisposeCallback(goog.partial(module$contents$goog$dispose_dispose,a))};
goog.Disposable.prototype.addOnDisposeCallback=function(a,b){this.disposed_?void 0!==b?a.call(b):a():(this.onDisposeCallbacks_||(this.onDisposeCallbacks_=[]),this.onDisposeCallbacks_.push(void 0!==b?goog.bind(a,b):a))};goog.Disposable.prototype.disposeInternal=function(){if(this.onDisposeCallbacks_)for(;this.onDisposeCallbacks_.length;)this.onDisposeCallbacks_.shift()()};goog.Disposable.isDisposed=function(a){return a&&"function"==typeof a.isDisposed?a.isDisposed():!1};goog.Thenable=function(){};goog.Thenable.prototype.then=function(a,b,c){};goog.Thenable.IMPLEMENTED_BY_PROP="$goog_Thenable";goog.Thenable.addImplementation=function(a){COMPILED?a.prototype[goog.Thenable.IMPLEMENTED_BY_PROP]=!0:a.prototype.$goog_Thenable=!0};goog.Thenable.isImplementedBy=function(a){if(!a)return!1;try{return COMPILED?!!a[goog.Thenable.IMPLEMENTED_BY_PROP]:!!a.$goog_Thenable}catch(b){return!1}};goog.async={};goog.async.FreeList=class{constructor(a,b,c){this.limit_=c;this.create_=a;this.reset_=b;this.occupants_=0;this.head_=null}get(){let a;0<this.occupants_?(this.occupants_--,a=this.head_,this.head_=a.next,a.next=null):a=this.create_();return a}put(a){this.reset_(a);this.occupants_<this.limit_&&(this.occupants_++,a.next=this.head_,this.head_=a)}occupants(){return this.occupants_}};class module$contents$goog$async$WorkQueue_WorkQueue{constructor(){this.workTail_=this.workHead_=null}add(a,b){const c=this.getUnusedItem_();c.set(a,b);this.workTail_?this.workTail_.next=c:((0,goog.asserts.assert)(!this.workHead_),this.workHead_=c);this.workTail_=c}remove(){let a=null;this.workHead_&&(a=this.workHead_,this.workHead_=this.workHead_.next,this.workHead_||(this.workTail_=null),a.next=null);return a}returnUnused(a){module$contents$goog$async$WorkQueue_WorkQueue.freelist_.put(a)}getUnusedItem_(){return module$contents$goog$async$WorkQueue_WorkQueue.freelist_.get()}}
module$contents$goog$async$WorkQueue_WorkQueue.DEFAULT_MAX_UNUSED=100;module$contents$goog$async$WorkQueue_WorkQueue.freelist_=new goog.async.FreeList(()=>new module$contents$goog$async$WorkQueue_WorkItem,a=>a.reset(),module$contents$goog$async$WorkQueue_WorkQueue.DEFAULT_MAX_UNUSED);class module$contents$goog$async$WorkQueue_WorkItem{constructor(){this.next=this.scope=this.fn=null}set(a,b){this.fn=a;this.scope=b;this.next=null}reset(){this.next=this.scope=this.fn=null}}goog.async.WorkQueue=module$contents$goog$async$WorkQueue_WorkQueue;goog.debug.entryPointRegistry={};goog.debug.EntryPointMonitor=function(){};goog.debug.entryPointRegistry.refList_=[];goog.debug.entryPointRegistry.monitors_=[];goog.debug.entryPointRegistry.monitorsMayExist_=!1;goog.debug.entryPointRegistry.register=function(a){goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length]=a;if(goog.debug.entryPointRegistry.monitorsMayExist_)for(var b=goog.debug.entryPointRegistry.monitors_,c=0;c<b.length;c++)a(goog.bind(b[c].wrap,b[c]))};
goog.debug.entryPointRegistry.monitorAll=function(a){goog.debug.entryPointRegistry.monitorsMayExist_=!0;for(var b=goog.bind(a.wrap,a),c=0;c<goog.debug.entryPointRegistry.refList_.length;c++)goog.debug.entryPointRegistry.refList_[c](b);goog.debug.entryPointRegistry.monitors_.push(a)};
goog.debug.entryPointRegistry.unmonitorAllIfPossible=function(a){var b=goog.debug.entryPointRegistry.monitors_;goog.asserts.assert(a==b[b.length-1],"Only the most recent monitor can be unwrapped.");a=goog.bind(a.unwrap,a);for(var c=0;c<goog.debug.entryPointRegistry.refList_.length;c++)goog.debug.entryPointRegistry.refList_[c](a);b.length--};goog.string={};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){const c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};
goog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return/^[\s\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};
goog.string.internal.newLineToBr=function(a,b){return a.replace(/(\r\n|\r|\n)/g,b?"<br />":"<br>")};
goog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else{if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.internal.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.internal.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.internal.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.internal.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\x00")&&(a=a.replace(goog.string.internal.NULL_RE_,"&#0;"))}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;
goog.string.internal.NULL_RE_=/\x00/g;goog.string.internal.ALL_RE_=/[\x00&<>"']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g," &#160;"),b)};goog.string.internal.contains=function(a,b){return-1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};
goog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(".");b=goog.string.internal.trim(String(b)).split(".");const d=Math.max(a.length,b.length);for(let g=0;0==c&&g<d;g++){var e=a[g]||"",f=b[g]||"";do{e=/(\d*)(\D*)(.*)/.exec(e)||["","","",""];f=/(\d*)(\D*)(.*)/.exec(f)||["","","",""];if(0==e[0].length&&0==f[0].length)break;c=0==e[1].length?0:parseInt(e[1],10);const h=0==f[1].length?0:parseInt(f[1],10);c=goog.string.internal.compareElements_(c,h)||
goog.string.internal.compareElements_(0==e[2].length,0==f[2].length)||goog.string.internal.compareElements_(e[2],f[2]);e=e[3];f=f[3]}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_()};
goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.caseInsensitiveContains(b,a)};
goog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=/(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g,c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.object={};goog.object.forEach=function(a,b,c){for(const d in a)b.call(c,a[d],d,a)};goog.object.filter=function(a,b,c){const d={};for(const e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){const d={};for(const e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return!0;return!1};goog.object.every=function(a,b,c){for(const d in a)if(!b.call(c,a[d],d,a))return!1;return!0};
goog.object.getCount=function(a){let b=0;for(const c in a)b++;return b};goog.object.getAnyKey=function(a){for(const b in a)return b};goog.object.getAnyValue=function(a){for(const b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){const b=[];let c=0;for(const d in a)b[c++]=a[d];return b};goog.object.getKeys=function(a){const b=[];let c=0;for(const d in a)b[c++]=d;return b};
goog.object.getValueByKeys=function(a,b){var c=goog.isArrayLike(b);const d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]]}return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(const c in a)if(a[c]==b)return!0;return!1};goog.object.findKey=function(a,b,c){for(const d in a)if(b.call(c,a[d],d,a))return d};goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]};
goog.object.isEmpty=function(a){for(const b in a)return!1;return!0};goog.object.clear=function(a){for(const b in a)delete a[b]};goog.object.remove=function(a,b){let c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key "'+b+'"');goog.object.set(a,b,c)};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};goog.object.set=function(a,b,c){a[b]=c};
goog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(const c in a)if(!(c in b)||a[c]!==b[c])return!1;for(const c in b)if(!(c in a))return!1;return!0};goog.object.clone=function(a){const b={};for(const c in a)b[c]=a[c];return b};
goog.object.unsafeClone=function(a){if(!a||"object"!==typeof a)return a;if("function"===typeof a.clone)return a.clone();const b=Array.isArray(a)?[]:"function"!==typeof ArrayBuffer||"function"!==typeof ArrayBuffer.isView||!ArrayBuffer.isView(a)||a instanceof DataView?{}:new a.constructor(a.length);for(const c in a)b[c]=goog.object.unsafeClone(a[c]);return b};goog.object.transpose=function(a){const b={};for(const c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend=function(a,b){let c,d;for(let e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(let f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};
goog.object.create=function(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");const c={};for(let d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){const b=arguments.length;if(1==b&&Array.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);const c={};for(let d=0;d<b;d++)c[arguments[d]]=!0;return c};
goog.object.createImmutableView=function(a){let b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)};
goog.object.getAllPropertyNames=function(a,b,c){if(!a)return[];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(a);const d={};for(;a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){const e=Object.getOwnPropertyNames(a);for(let f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a)}return goog.object.getKeys(d)};goog.object.getSuperClass=function(a){return(a=Object.getPrototypeOf(a.prototype))&&a.constructor};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdgeHtml_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.browser.matchEdgeChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("Edg/")};
goog.labs.userAgent.browser.matchOperaChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("OPR")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")||goog.labs.userAgent.util.matchUserAgent("FxiOS")};
goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdgeHtml_()||goog.labs.userAgent.browser.matchEdgeChromium_()||goog.labs.userAgent.browser.matchOperaChromium_()||goog.labs.userAgent.browser.matchFirefox_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};
goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&!goog.labs.userAgent.browser.matchFirefox_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};
goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchEdgeHtml_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};
goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdgeHtml_;goog.labs.userAgent.browser.isEdgeChromium=goog.labs.userAgent.browser.matchEdgeChromium_;goog.labs.userAgent.browser.isOperaChromium=goog.labs.userAgent.browser.matchOperaChromium_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};
goog.labs.userAgent.browser.getVersion=function(){function a(e){e=module$contents$goog$array_find(e,d);return c[e]||""}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);b=goog.labs.userAgent.util.extractVersionTuples(b);var c={};module$contents$goog$array_forEach(b,function(e){c[e[0]]=e[1]});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a(["Version","Opera"]):goog.labs.userAgent.browser.isEdge()?
a(["Edge"]):goog.labs.userAgent.browser.isEdgeChromium()?a(["Edg"]):goog.labs.userAgent.browser.isChrome()?a(["Chrome","CriOS","HeadlessChrome"]):(b=b[2])&&b[1]||""};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};
goog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\d\.]*)/.exec(a);if(b&&b[1])return b[1];b="";var c=/MSIE +([\d\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\/(\d.\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0"}else b="7.0";else b=c[1];return b};goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(a))}return a};
goog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&"undefined"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",b,goog.dom.asserts.debugStringForType_(a)))}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAnchorElement")};
goog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAudioElement")};
goog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLCanvasElement")};
goog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLIFrameElement")};
goog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLScriptElement")};
goog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return"<object could not be stringified>"}else return void 0===a?"undefined":null===a?"null":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return!1};goog.functions.TRUE=function(){return!0};goog.functions.NULL=function(){return null};goog.functions.UNDEFINED=function(){};goog.functions.EMPTY=goog.functions.UNDEFINED;goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};
goog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){const c=Array.prototype.slice.call(arguments,1);return function(){let d=this;d===goog.global&&(d=void 0);const e=Array.prototype.slice.call(arguments);e.push.apply(e,c);return a.apply(d,e)}};
goog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){const c=arguments,d=c.length;return function(){let e;d&&(e=c[d-1].apply(this,arguments));for(let f=d-2;0<=f;f--)e=c[f].call(this,e);return e}};
goog.functions.sequence=function(a){const b=arguments,c=b.length;return function(){let d;for(let e=0;e<c;e++)d=b[e].apply(this,arguments);return d}};goog.functions.and=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(!b[d].apply(this,arguments))return!1;return!0}};goog.functions.or=function(a){const b=arguments,c=b.length;return function(){for(let d=0;d<c;d++)if(b[d].apply(this,arguments))return!0;return!1}};
goog.functions.not=function(a){return function(){return!a.apply(this,arguments)}};goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){let b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){let b=a;return function(){if(b){const c=b;b=null;c()}}};
goog.functions.debounce=function(a,b,c){let d=0;return function(e){goog.global.clearTimeout(d);const f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f)},b)}};goog.functions.throttle=function(a,b,c){let d=0,e=!1,f=[];const g=function(){d=0;e&&(e=!1,h())},h=function(){d=goog.global.setTimeout(g,b);let k=f;f=[];a.apply(c,k)};return function(k){f=arguments;d?e=!0:h()}};
goog.functions.rateLimit=function(a,b,c){let d=0;const e=function(){d=0};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments))}};goog.functions.isFunction=a=>"function"===typeof a;goog.dom.HtmlElement=function(){};goog.dom.TagName=class{static cast(a,b){return a}constructor(){}toString(){}};goog.dom.TagName.A="A";goog.dom.TagName.ABBR="ABBR";goog.dom.TagName.ACRONYM="ACRONYM";goog.dom.TagName.ADDRESS="ADDRESS";goog.dom.TagName.APPLET="APPLET";goog.dom.TagName.AREA="AREA";goog.dom.TagName.ARTICLE="ARTICLE";goog.dom.TagName.ASIDE="ASIDE";goog.dom.TagName.AUDIO="AUDIO";goog.dom.TagName.B="B";goog.dom.TagName.BASE="BASE";goog.dom.TagName.BASEFONT="BASEFONT";goog.dom.TagName.BDI="BDI";goog.dom.TagName.BDO="BDO";
goog.dom.TagName.BIG="BIG";goog.dom.TagName.BLOCKQUOTE="BLOCKQUOTE";goog.dom.TagName.BODY="BODY";goog.dom.TagName.BR="BR";goog.dom.TagName.BUTTON="BUTTON";goog.dom.TagName.CANVAS="CANVAS";goog.dom.TagName.CAPTION="CAPTION";goog.dom.TagName.CENTER="CENTER";goog.dom.TagName.CITE="CITE";goog.dom.TagName.CODE="CODE";goog.dom.TagName.COL="COL";goog.dom.TagName.COLGROUP="COLGROUP";goog.dom.TagName.COMMAND="COMMAND";goog.dom.TagName.DATA="DATA";goog.dom.TagName.DATALIST="DATALIST";goog.dom.TagName.DD="DD";
goog.dom.TagName.DEL="DEL";goog.dom.TagName.DETAILS="DETAILS";goog.dom.TagName.DFN="DFN";goog.dom.TagName.DIALOG="DIALOG";goog.dom.TagName.DIR="DIR";goog.dom.TagName.DIV="DIV";goog.dom.TagName.DL="DL";goog.dom.TagName.DT="DT";goog.dom.TagName.EM="EM";goog.dom.TagName.EMBED="EMBED";goog.dom.TagName.FIELDSET="FIELDSET";goog.dom.TagName.FIGCAPTION="FIGCAPTION";goog.dom.TagName.FIGURE="FIGURE";goog.dom.TagName.FONT="FONT";goog.dom.TagName.FOOTER="FOOTER";goog.dom.TagName.FORM="FORM";
goog.dom.TagName.FRAME="FRAME";goog.dom.TagName.FRAMESET="FRAMESET";goog.dom.TagName.H1="H1";goog.dom.TagName.H2="H2";goog.dom.TagName.H3="H3";goog.dom.TagName.H4="H4";goog.dom.TagName.H5="H5";goog.dom.TagName.H6="H6";goog.dom.TagName.HEAD="HEAD";goog.dom.TagName.HEADER="HEADER";goog.dom.TagName.HGROUP="HGROUP";goog.dom.TagName.HR="HR";goog.dom.TagName.HTML="HTML";goog.dom.TagName.I="I";goog.dom.TagName.IFRAME="IFRAME";goog.dom.TagName.IMG="IMG";goog.dom.TagName.INPUT="INPUT";
goog.dom.TagName.INS="INS";goog.dom.TagName.ISINDEX="ISINDEX";goog.dom.TagName.KBD="KBD";goog.dom.TagName.KEYGEN="KEYGEN";goog.dom.TagName.LABEL="LABEL";goog.dom.TagName.LEGEND="LEGEND";goog.dom.TagName.LI="LI";goog.dom.TagName.LINK="LINK";goog.dom.TagName.MAIN="MAIN";goog.dom.TagName.MAP="MAP";goog.dom.TagName.MARK="MARK";goog.dom.TagName.MATH="MATH";goog.dom.TagName.MENU="MENU";goog.dom.TagName.MENUITEM="MENUITEM";goog.dom.TagName.META="META";goog.dom.TagName.METER="METER";
goog.dom.TagName.NAV="NAV";goog.dom.TagName.NOFRAMES="NOFRAMES";goog.dom.TagName.NOSCRIPT="NOSCRIPT";goog.dom.TagName.OBJECT="OBJECT";goog.dom.TagName.OL="OL";goog.dom.TagName.OPTGROUP="OPTGROUP";goog.dom.TagName.OPTION="OPTION";goog.dom.TagName.OUTPUT="OUTPUT";goog.dom.TagName.P="P";goog.dom.TagName.PARAM="PARAM";goog.dom.TagName.PICTURE="PICTURE";goog.dom.TagName.PRE="PRE";goog.dom.TagName.PROGRESS="PROGRESS";goog.dom.TagName.Q="Q";goog.dom.TagName.RP="RP";goog.dom.TagName.RT="RT";
goog.dom.TagName.RTC="RTC";goog.dom.TagName.RUBY="RUBY";goog.dom.TagName.S="S";goog.dom.TagName.SAMP="SAMP";goog.dom.TagName.SCRIPT="SCRIPT";goog.dom.TagName.SECTION="SECTION";goog.dom.TagName.SELECT="SELECT";goog.dom.TagName.SMALL="SMALL";goog.dom.TagName.SOURCE="SOURCE";goog.dom.TagName.SPAN="SPAN";goog.dom.TagName.STRIKE="STRIKE";goog.dom.TagName.STRONG="STRONG";goog.dom.TagName.STYLE="STYLE";goog.dom.TagName.SUB="SUB";goog.dom.TagName.SUMMARY="SUMMARY";goog.dom.TagName.SUP="SUP";
goog.dom.TagName.SVG="SVG";goog.dom.TagName.TABLE="TABLE";goog.dom.TagName.TBODY="TBODY";goog.dom.TagName.TD="TD";goog.dom.TagName.TEMPLATE="TEMPLATE";goog.dom.TagName.TEXTAREA="TEXTAREA";goog.dom.TagName.TFOOT="TFOOT";goog.dom.TagName.TH="TH";goog.dom.TagName.THEAD="THEAD";goog.dom.TagName.TIME="TIME";goog.dom.TagName.TITLE="TITLE";goog.dom.TagName.TR="TR";goog.dom.TagName.TRACK="TRACK";goog.dom.TagName.TT="TT";goog.dom.TagName.U="U";goog.dom.TagName.UL="UL";goog.dom.TagName.VAR="VAR";
goog.dom.TagName.VIDEO="VIDEO";goog.dom.TagName.WBR="WBR";goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return!0===goog.dom.tags.VOID_TAGS_[a]};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||"";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.DEBUG&&(goog.string.Const.prototype.toString=function(){return"Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"});goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail("expected object of type Const, got '"+a+"'");return"type_error:Const"};
goog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse=function(){if(!goog.TRUSTED_TYPES_POLICY_NAME)return null;void 0===goog.html.trustedtypes.cachedPolicy_&&(goog.html.trustedtypes.cachedPolicy_=goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#html"));return goog.html.trustedtypes.cachedPolicy_};const module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeScript_SafeScript{constructor(a,b){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=b===module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}static fromConstant(a){a=goog.string.Const.unwrap(a);return 0===a.length?module$contents$goog$html$SafeScript_SafeScript.EMPTY:module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)}static fromConstantAndArgs(a,b){const c=
[];for(let d=1;d<arguments.length;d++)c.push(module$contents$goog$html$SafeScript_SafeScript.stringify_(arguments[d]));return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("("+goog.string.Const.unwrap(a)+")("+c.join(", ")+");")}static fromJson(a){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(module$contents$goog$html$SafeScript_SafeScript.stringify_(a))}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()}static unwrap(a){return module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(a).toString()}static unwrapTrustedScript(a){if(a instanceof
module$contents$goog$html$SafeScript_SafeScript&&a.constructor===module$contents$goog$html$SafeScript_SafeScript)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;(0,goog.asserts.fail)("expected object of type SafeScript, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeScript"}static stringify_(a){return JSON.stringify(a).replace(/</g,"\\x3c")}static createSafeScriptSecurityPrivateDoNotAccessOrElse(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScript(a):
a;return new module$contents$goog$html$SafeScript_SafeScript(a,module$contents$goog$html$SafeScript_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeScript_SafeScript.prototype.toString=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()};module$contents$goog$html$SafeScript_SafeScript.EMPTY=function(){return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("")}();goog.html.SafeScript=module$contents$goog$html$SafeScript_SafeScript;goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a)};goog.fs.url.UrlObject_=function(){};goog.fs.url.UrlObject_.prototype.createObjectURL=function(a){};goog.fs.url.UrlObject_.prototype.revokeObjectURL=function(a){};
goog.fs.url.getUrlObject_=function(){const a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error("This browser doesn't seem to support blob URLs");};goog.fs.url.findUrlObject_=function(){return void 0!==goog.global.URL&&void 0!==goog.global.URL.createObjectURL?goog.global.URL:void 0!==goog.global.createObjectURL?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.fs.blob={};goog.fs.blob.getBlob=function(a){var b=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==b){b=new b;for(var c=0;c<arguments.length;c++)b.append(arguments[c]);return b.getBlob()}return goog.fs.blob.getBlobWithProperties(module$contents$goog$array_toArray(arguments))};
goog.fs.blob.getBlobWithProperties=function(a,b,c){var d=goog.global.BlobBuilder||goog.global.WebKitBlobBuilder;if(void 0!==d){d=new d;for(var e=0;e<a.length;e++)d.append(a[e],c);return d.getBlob(b)}if(void 0!==goog.global.Blob)return d={},b&&(d.type=b),c&&(d.endings=c),new Blob(a,d);throw Error("This browser doesn't seem to support creating Blobs");};goog.i18n={};goog.i18n.bidi={};goog.i18n.bidi.FORCE_RTL=!1;
goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||("ar"==goog.LOCALE.substring(0,2).toLowerCase()||"fa"==goog.LOCALE.substring(0,2).toLowerCase()||"he"==goog.LOCALE.substring(0,2).toLowerCase()||"iw"==goog.LOCALE.substring(0,2).toLowerCase()||"ps"==goog.LOCALE.substring(0,2).toLowerCase()||"sd"==goog.LOCALE.substring(0,2).toLowerCase()||"ug"==goog.LOCALE.substring(0,2).toLowerCase()||"ur"==goog.LOCALE.substring(0,2).toLowerCase()||"yi"==goog.LOCALE.substring(0,2).toLowerCase())&&(2==goog.LOCALE.length||
"-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))||3<=goog.LOCALE.length&&"ckb"==goog.LOCALE.substring(0,3).toLowerCase()&&(3==goog.LOCALE.length||"-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))||7<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))&&("adlm"==goog.LOCALE.substring(3,7).toLowerCase()||"arab"==goog.LOCALE.substring(3,7).toLowerCase()||"hebr"==goog.LOCALE.substring(3,7).toLowerCase()||"nkoo"==goog.LOCALE.substring(3,
7).toLowerCase()||"rohg"==goog.LOCALE.substring(3,7).toLowerCase()||"thaa"==goog.LOCALE.substring(3,7).toLowerCase())||8<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))&&("adlm"==goog.LOCALE.substring(4,8).toLowerCase()||"arab"==goog.LOCALE.substring(4,8).toLowerCase()||"hebr"==goog.LOCALE.substring(4,8).toLowerCase()||"nkoo"==goog.LOCALE.substring(4,8).toLowerCase()||"rohg"==goog.LOCALE.substring(4,8).toLowerCase()||"thaa"==goog.LOCALE.substring(4,8).toLowerCase());
goog.i18n.bidi.Format={LRE:"\u202a",RLE:"\u202b",PDF:"\u202c",LRM:"\u200e",RLM:"\u200f"};goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0};goog.i18n.bidi.RIGHT="right";goog.i18n.bidi.LEFT="left";goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT;goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir=function(a,b){return"number"==typeof a?0<a?goog.i18n.bidi.Dir.LTR:0>a?goog.i18n.bidi.Dir.RTL:b?null:goog.i18n.bidi.Dir.NEUTRAL:null==a?null:a?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.ltrChars_="A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0900-\u1fff\u200e\u2c00-\ud801\ud804-\ud839\ud83c-\udbff\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";goog.i18n.bidi.rtlChars_="\u0591-\u06ef\u06fa-\u08ff\u200f\ud802-\ud803\ud83a-\ud83b\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g;goog.i18n.bidi.stripHtmlIfNeeded_=function(a,b){return b?a.replace(goog.i18n.bidi.htmlSkipReg_,""):a};goog.i18n.bidi.rtlCharReg_=new RegExp("["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.ltrCharReg_=new RegExp("["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.hasAnyRtl=function(a,b){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr=function(a,b){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.ltrRe_=new RegExp("^["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlRe_=new RegExp("^["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.isRtlChar=function(a){return goog.i18n.bidi.rtlRe_.test(a)};goog.i18n.bidi.isLtrChar=function(a){return goog.i18n.bidi.ltrRe_.test(a)};goog.i18n.bidi.isNeutralChar=function(a){return!goog.i18n.bidi.isLtrChar(a)&&!goog.i18n.bidi.isRtlChar(a)};
goog.i18n.bidi.ltrDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.rtlChars_+"]*["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.ltrChars_+"]*["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.startsWithRtl=function(a,b){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr=function(a,b){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr;goog.i18n.bidi.isRequiredLtrRe_=/^http:\/\/.*/;goog.i18n.bidi.isNeutralText=function(a,b){a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b);return goog.i18n.bidi.isRequiredLtrRe_.test(a)||!goog.i18n.bidi.hasAnyLtr(a)&&!goog.i18n.bidi.hasAnyRtl(a)};
goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.ltrChars_+"][^"+goog.i18n.bidi.rtlChars_+"]*$");goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.rtlChars_+"][^"+goog.i18n.bidi.ltrChars_+"]*$");goog.i18n.bidi.endsWithLtr=function(a,b){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl=function(a,b){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl;goog.i18n.bidi.rtlLocalesRe_=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;goog.i18n.bidi.isRtlLanguage=function(a){return goog.i18n.bidi.rtlLocalesRe_.test(a)};goog.i18n.bidi.bracketGuardTextRe_=/(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText=function(a,b){b=(void 0===b?goog.i18n.bidi.hasAnyRtl(a):b)?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM;return a.replace(goog.i18n.bidi.bracketGuardTextRe_,b+"$&"+b)};goog.i18n.bidi.enforceRtlInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=rtl"):"\n<span dir=rtl>"+a+"</span>"};goog.i18n.bidi.enforceRtlInText=function(a){return goog.i18n.bidi.Format.RLE+a+goog.i18n.bidi.Format.PDF};
goog.i18n.bidi.enforceLtrInHtml=function(a){return"<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=ltr"):"\n<span dir=ltr>"+a+"</span>"};goog.i18n.bidi.enforceLtrInText=function(a){return goog.i18n.bidi.Format.LRE+a+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.dimensionsRe_=/:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;goog.i18n.bidi.leftRe_=/left/gi;goog.i18n.bidi.rightRe_=/right/gi;goog.i18n.bidi.tempRe_=/%%%%/g;
goog.i18n.bidi.mirrorCSS=function(a){return a.replace(goog.i18n.bidi.dimensionsRe_,":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_,"%%%%").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)};goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\u0591-\u05f2])"/g;goog.i18n.bidi.singleQuoteSubstituteRe_=/([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote=function(a){return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,"$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,"$1\u05f3")};goog.i18n.bidi.wordSeparatorRe_=/\s+/;goog.i18n.bidi.hasNumeralsRe_=/[\d\u06f0-\u06f9]/;goog.i18n.bidi.rtlDetectionThreshold_=.4;
goog.i18n.bidi.estimateDirection=function(a,b){let c=0,d=0,e=!1;a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b).split(goog.i18n.bidi.wordSeparatorRe_);for(b=0;b<a.length;b++){const f=a[b];goog.i18n.bidi.startsWithRtl(f)?(c++,d++):goog.i18n.bidi.isRequiredLtrRe_.test(f)?e=!0:goog.i18n.bidi.hasAnyLtr(f)?d++:goog.i18n.bidi.hasNumeralsRe_.test(f)&&(e=!0)}return 0==d?e?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:c/d>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};
goog.i18n.bidi.detectRtlDirectionality=function(a,b){return goog.i18n.bidi.estimateDirection(a,b)==goog.i18n.bidi.Dir.RTL};goog.i18n.bidi.setElementDirAndAlign=function(a,b){a&&(b=goog.i18n.bidi.toDir(b))&&(a.style.textAlign=b==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,a.dir=b==goog.i18n.bidi.Dir.RTL?"rtl":"ltr")};
goog.i18n.bidi.setElementDirByTextDirectionality=function(a,b){switch(goog.i18n.bidi.estimateDirection(b)){case goog.i18n.bidi.Dir.LTR:"ltr"!==a.dir&&(a.dir="ltr");break;case goog.i18n.bidi.Dir.RTL:"rtl"!==a.dir&&(a.dir="rtl");break;default:a.removeAttribute("dir")}};goog.i18n.bidi.DirectionalString=function(){};goog.html.TrustedResourceUrl=class{constructor(a,b){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=b===goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:""}};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;
goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",c[2]||"",a)+goog.html.TrustedResourceUrl.stringifyParams_("#",d,b))};
goog.html.TrustedResourceUrl.prototype.toString=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+""};goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:TrustedResourceUrl"};
goog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(d,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));d=b[e];return d instanceof goog.string.Const?goog.string.Const.unwrap(d):
encodeURIComponent(String(d))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b="",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.TrustedResourceUrl.fromSafeScript=function(a){a=goog.fs.blob.getBlobWithProperties([module$contents$goog$html$SafeScript_SafeScript.unwrap(a)],"text/javascript");a=goog.fs.url.createObjectUrl(a);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){const b=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=b?b.createScriptURL(a):a;return new goog.html.TrustedResourceUrl(a,goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};
goog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if("string"===typeof c)return c?a+encodeURIComponent(c):"";for(var d in c)if(Object.prototype.hasOwnProperty.call(c,d)){var e=c[d];e=Array.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?"&":"")+encodeURIComponent(d)+"="+encodeURIComponent(String(g)))}}return b};goog.html.SafeUrl=class{constructor(a,b){this.privateDoNotAccessOrElseSafeUrlWrappedValue_=b===goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_?a:""}};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;
goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.html.SafeUrl.prototype.toString=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};goog.html.SafeUrl.unwrap=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail("expected object of type SafeUrl, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeUrl"};
goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.SAFE_MIME_TYPE_PATTERN_=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font\/\w+|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|video\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\w+=(?:\w+|"[\w;,= ]+"))*$/i;goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};
goog.html.SafeUrl.fromBlob=function(a){a=goog.html.SafeUrl.isSafeMimeType(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.revokeObjectUrl=function(a){a=a.getTypedStringValue();a!==goog.html.SafeUrl.INNOCUOUS_STRING&&goog.fs.url.revokeObjectUrl(a)};
goog.html.SafeUrl.fromMediaSource=function(a){goog.asserts.assert("MediaSource"in goog.global,"No support for MediaSource");a=a instanceof MediaSource?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.DATA_URL_PATTERN_=/^data:(.*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.tryFromDataUrl=function(a){a=String(a);a=a.replace(/(%0A|%0D)/g,"");var b=a.match(goog.html.DATA_URL_PATTERN_);return b&&goog.html.SafeUrl.isSafeMimeType(b[1])?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):null};goog.html.SafeUrl.fromDataUrl=function(a){return goog.html.SafeUrl.tryFromDataUrl(a)||goog.html.SafeUrl.INNOCUOUS_URL};
goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"tel:")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SIP_URL_PATTERN_=/^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"fb-messenger://share")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"whatsapp://send")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf("#");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return!0;if(1<b.length)return!1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return!0;try{decodeURIComponent(a)}catch(c){return!1}return/^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a)};
goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"ssh://")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//,a,b)};
goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//,a,b)};
goog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(d){return goog.string.Const.unwrap(d)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};
goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.trySanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SAFE_URL_PATTERN_.test(a)?goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a):goog.html.SafeUrl.tryFromDataUrl(a)};
goog.html.SafeUrl.sanitize=function(a){return goog.html.SafeUrl.trySanitize(a)||goog.html.SafeUrl.INNOCUOUS_URL};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),"%s does not match the safe URL pattern",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){return new goog.html.SafeUrl(a,goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_)};goog.html.SafeUrl.INNOCUOUS_URL=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");goog.html.SafeStyle=class{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=b===goog.html.SafeStyle.CONSTRUCTOR_TOKEN_PRIVATE_?a:""}};goog.html.SafeStyle.prototype.implementsGoogStringTypedString=!0;
goog.html.SafeStyle.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyle.EMPTY;goog.asserts.assert(goog.string.internal.endsWith(a,";"),"Last character of style string is not ';': "+a);goog.asserts.assert(goog.string.internal.contains(a,":"),"Style string must contain at least one ':', to specify a \"name: value\" pair: "+a);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_};goog.html.SafeStyle.prototype.toString=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString()};
goog.html.SafeStyle.unwrap=function(a){if(a instanceof goog.html.SafeStyle&&a.constructor===goog.html.SafeStyle)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;goog.asserts.fail("expected object of type SafeStyle, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyle"};goog.html.SafeStyle.CONSTRUCTOR_TOKEN_PRIVATE_={};goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(a){return new goog.html.SafeStyle(a,goog.html.SafeStyle.CONSTRUCTOR_TOKEN_PRIVATE_)};
goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyle.INNOCUOUS_STRING="zClosurez";
goog.html.SafeStyle.create=function(a){var b="",c;for(c in a)if(Object.prototype.hasOwnProperty.call(a,c)){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error("Name allows only [-_a-zA-Z0-9], got: "+c);var d=a[c];null!=d&&(d=Array.isArray(d)?module$contents$goog$array_map(d,goog.html.SafeStyle.sanitizePropertyValue_).join(" "):goog.html.SafeStyle.sanitizePropertyValue_(d),b+=c+":"+d+";")}return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};
goog.html.SafeStyle.sanitizePropertyValue_=function(a){if(a instanceof goog.html.SafeUrl)return'url("'+goog.html.SafeUrl.unwrap(a).replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):goog.html.SafeStyle.sanitizePropertyValueString_(String(a));if(/[{;}]/.test(a))throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.",[a]);return a};
goog.html.SafeStyle.sanitizePropertyValueString_=function(a){var b=a.replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.URL_RE_,"url");if(goog.html.SafeStyle.VALUE_RE_.test(b)){if(goog.html.SafeStyle.COMMENT_RE_.test(a))return goog.asserts.fail("String value disallows comments, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedQuotes_(a))return goog.asserts.fail("String value requires balanced quotes, got: "+
a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedSquareBrackets_(a))return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING}else return goog.asserts.fail("String value allows only "+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+" and simple functions, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;return goog.html.SafeStyle.sanitizeUrl_(a)};
goog.html.SafeStyle.hasBalancedQuotes_=function(a){for(var b=!0,c=!0,d=0;d<a.length;d++){var e=a.charAt(d);"'"==e&&c?b=!b:'"'==e&&b&&(c=!c)}return b&&c};goog.html.SafeStyle.hasBalancedSquareBrackets_=function(a){for(var b=!0,c=/^[-_a-zA-Z0-9]$/,d=0;d<a.length;d++){var e=a.charAt(d);if("]"==e){if(b)return!1;b=!0}else if("["==e){if(!b)return!1;b=!1}else if(!b&&!c.test(e))return!1}return b};goog.html.SafeStyle.VALUE_ALLOWED_CHARS_="[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
goog.html.SafeStyle.VALUE_RE_=new RegExp("^"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+"+$");goog.html.SafeStyle.URL_RE_=/\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;goog.html.SafeStyle.ALLOWED_FUNCTIONS_="calc cubic-bezier fit-content hsl hsla linear-gradient matrix minmax repeat rgb rgba (rotate|scale|translate)(X|Y|Z|3d)?".split(" ");
goog.html.SafeStyle.FUNCTIONS_RE_=new RegExp("\\b("+goog.html.SafeStyle.ALLOWED_FUNCTIONS_.join("|")+")\\([-+*/0-9a-z.%\\[\\], ]+\\)","g");goog.html.SafeStyle.COMMENT_RE_=/\/\*/;goog.html.SafeStyle.sanitizeUrl_=function(a){return a.replace(goog.html.SafeStyle.URL_RE_,function(b,c,d,e){var f="";d=d.replace(/^(['"])(.*)\1$/,function(g,h,k){f=h;return k});b=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+f+b+f+e})};
goog.html.SafeStyle.concat=function(a){var b="",c=function(d){Array.isArray(d)?module$contents$goog$array_forEach(d,c):b+=goog.html.SafeStyle.unwrap(d)};module$contents$goog$array_forEach(arguments,c);return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};const module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE={};
class module$contents$goog$html$SafeStyleSheet_SafeStyleSheet{constructor(a,b){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=b===module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE?a:"";this.implementsGoogStringTypedString=!0}static createRule(a,b){if((0,goog.string.internal.contains)(a,"<"))throw Error(`Selector does not allow '<', got: ${a}`);const c=a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: "+
a);if(!module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+a);b instanceof goog.html.SafeStyle||(b=goog.html.SafeStyle.create(b));a=`${a}{`+goog.html.SafeStyle.unwrap(b).replace(/</g,"\\3C ")+"}";return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}static hasBalancedBrackets_(a){const b={"(":")","[":"]"},c=[];for(let d=0;d<a.length;d++){const e=
a[d];if(b[e])c.push(b[e]);else if(goog.object.contains(b,e)&&c.pop()!=e)return!1}return 0==c.length}static concat(a){let b="";const c=d=>{Array.isArray(d)?module$contents$goog$array_forEach(d,c):b+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(d)};module$contents$goog$array_forEach(arguments,c);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)}static fromConstant(a){a=goog.string.Const.unwrap(a);if(0===a.length)return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY;
(0,goog.asserts.assert)(!(0,goog.string.internal.contains)(a,"<"),`Forbidden '<' character in style sheet string: ${a}`);return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)}getTypedStringValue(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_}static unwrap(a){if(a instanceof module$contents$goog$html$SafeStyleSheet_SafeStyleSheet&&a.constructor===module$contents$goog$html$SafeStyleSheet_SafeStyleSheet)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
(0,goog.asserts.fail)("expected object of type SafeStyleSheet, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeStyleSheet"}static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a){return new module$contents$goog$html$SafeStyleSheet_SafeStyleSheet(a,module$contents$goog$html$SafeStyleSheet_CONSTRUCTOR_TOKEN_PRIVATE)}}module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.prototype.toString=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString()};
module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.EMPTY=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyleSheet=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet;goog.html.SafeHtml=class{constructor(a,b,c){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=c===goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_?a:"";this.dir_=b}};goog.html.SafeHtml.ENABLE_ERROR_MESSAGES=goog.DEBUG;goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE=!0;goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_};goog.html.SafeHtml.prototype.implementsGoogStringTypedString=!0;
goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()};goog.html.SafeHtml.prototype.toString=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()};goog.html.SafeHtml.unwrap=function(a){return goog.html.SafeHtml.unwrapTrustedHTML(a).toString()};
goog.html.SafeHtml.unwrapTrustedHTML=function(a){if(a instanceof goog.html.SafeHtml&&a.constructor===goog.html.SafeHtml)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail("expected object of type SafeHtml, got '"+a+"' of type "+goog.typeOf(a));return"type_error:SafeHtml"};
goog.html.SafeHtml.htmlEscape=function(a){if(a instanceof goog.html.SafeHtml)return a;var b="object"==typeof a,c=null;b&&a.implementsGoogI18nBidiDirectionalString&&(c=a.getDirection());a=b&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a),c)};
goog.html.SafeHtml.htmlEscapePreservingNewlines=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(a)),a.getDirection())};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(a)),a.getDirection())};goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.comment=function(a){return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!--"+goog.string.internal.htmlEscape(a)+"--\x3e",null)};goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/;goog.html.SafeHtml.URL_ATTRIBUTES_={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0};
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_={[goog.dom.TagName.APPLET]:!0,[goog.dom.TagName.BASE]:!0,[goog.dom.TagName.EMBED]:!0,[goog.dom.TagName.IFRAME]:!0,[goog.dom.TagName.LINK]:!0,[goog.dom.TagName.MATH]:!0,[goog.dom.TagName.META]:!0,[goog.dom.TagName.OBJECT]:!0,[goog.dom.TagName.SCRIPT]:!0,[goog.dom.TagName.STYLE]:!0,[goog.dom.TagName.SVG]:!0,[goog.dom.TagName.TEMPLATE]:!0};
goog.html.SafeHtml.create=function(a,b,c){goog.html.SafeHtml.verifyTagName(String(a));return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)};
goog.html.SafeHtml.verifyTagName=function(a){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a))throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?"Invalid tag name <"+a+">.":"");if(a.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?"Tag name <"+a+"> is not allowed for SafeHtml.":"");};
goog.html.SafeHtml.createIframe=function(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);var e={};e.src=a||null;e.srcdoc=b&&goog.html.SafeHtml.unwrap(b);a=goog.html.SafeHtml.combineAttributes(e,{sandbox:""},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.createSandboxIframe=function(a,b,c,d){if(!goog.html.SafeHtml.canUseSandboxIframe())throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?"The browser does not support sandboxed iframes.":"");var e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox="";a=goog.html.SafeHtml.combineAttributes(e,{},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype};goog.html.SafeHtml.createScriptSrc=function(a,b){goog.html.TrustedResourceUrl.unwrap(a);a=goog.html.SafeHtml.combineAttributes({src:a},{},b);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",a)};
goog.html.SafeHtml.createScript=function(a,b){for(var c in b)if(Object.prototype.hasOwnProperty.call(b,c)){var d=c.toLowerCase();if("language"==d||"src"==d||"text"==d||"type"==d)throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?'Cannot set "'+d+'" attribute':"");}c="";a=module$contents$goog$array_concat(a);for(d=0;d<a.length;d++)c+=module$contents$goog$html$SafeScript_SafeScript.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",
b,a)};goog.html.SafeHtml.createStyle=function(a,b){b=goog.html.SafeHtml.combineAttributes({type:"text/css"},{},b);var c="";a=module$contents$goog$array_concat(a);for(var d=0;d<a.length;d++)c+=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",b,a)};
goog.html.SafeHtml.createMetaRefresh=function(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())&&goog.string.internal.contains(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'");return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",{"http-equiv":"refresh",content:(b||0)+"; url="+a})};
goog.html.SafeHtml.getAttrNameAndValue_=function(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if("style"==b.toLowerCase())if(goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE)c=goog.html.SafeHtml.getStyleValue_(c);else throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?'Attribute "style" not supported.':"");else{if(/^on/i.test(b))throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?'Attribute "'+b+'" requires goog.string.Const value, "'+c+'" given.':"");if(b.toLowerCase()in
goog.html.SafeHtml.URL_ATTRIBUTES_)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);else if("string"===typeof c)c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?'Attribute "'+b+'" on tag "'+a+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+c+'" given.':"");}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());
goog.asserts.assert("string"===typeof c||"number"===typeof c,"String or number value expected, got "+typeof c+" with value: "+c);return b+'="'+goog.string.internal.htmlEscape(String(c))+'"'};goog.html.SafeHtml.getStyleValue_=function(a){if(!goog.isObject(a))throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?'The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+" given: "+a:"");a instanceof goog.html.SafeStyle||(a=goog.html.SafeStyle.create(a));return goog.html.SafeStyle.unwrap(a)};
goog.html.SafeHtml.createWithDir=function(a,b,c,d){b=goog.html.SafeHtml.create(b,c,d);b.dir_=a;return b};
goog.html.SafeHtml.join=function(a,b){a=goog.html.SafeHtml.htmlEscape(a);var c=a.getDirection(),d=[],e=function(f){Array.isArray(f)?module$contents$goog$array_forEach(f,e):(f=goog.html.SafeHtml.htmlEscape(f),d.push(goog.html.SafeHtml.unwrap(f)),f=f.getDirection(),c==goog.i18n.bidi.Dir.NEUTRAL?c=f:f!=goog.i18n.bidi.Dir.NEUTRAL&&c!=f&&(c=null))};module$contents$goog$array_forEach(b,e);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d.join(goog.html.SafeHtml.unwrap(a)),c)};
goog.html.SafeHtml.concat=function(a){return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY,Array.prototype.slice.call(arguments))};goog.html.SafeHtml.concatWithDir=function(a,b){var c=goog.html.SafeHtml.concat(module$contents$goog$array_slice(arguments,1));c.dir_=a;return c};goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_={};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(a,b){const c=goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();a=c?c.createHTML(a):a;return new goog.html.SafeHtml(a,b,goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_)};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(a,b,c){var d=null;var e="<"+a+goog.html.SafeHtml.stringifyAttributes(a,b);null==c?c=[]:Array.isArray(c)||(c=[c]);goog.dom.tags.isVoidTag(a.toLowerCase())?(goog.asserts.assert(!c.length,"Void tag <"+a+"> does not allow content."),e+=">"):(d=goog.html.SafeHtml.concat(c),e+=">"+goog.html.SafeHtml.unwrap(d)+"</"+a+">",d=d.getDirection());(a=b&&b.dir)&&(d=/^(ltr|rtl|auto)$/i.test(a)?goog.i18n.bidi.Dir.NEUTRAL:null);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e,
d)};goog.html.SafeHtml.stringifyAttributes=function(a,b){var c="";if(b)for(var d in b)if(Object.prototype.hasOwnProperty.call(b,d)){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d))throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?'Invalid attribute name "'+d+'".':"");var e=b[d];null!=e&&(c+=" "+goog.html.SafeHtml.getAttrNameAndValue_(a,d,e))}return c};
goog.html.SafeHtml.combineAttributes=function(a,b,c){var d={},e;for(e in a)Object.prototype.hasOwnProperty.call(a,e)&&(goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=a[e]);for(e in b)Object.prototype.hasOwnProperty.call(b,e)&&(goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=b[e]);if(c)for(e in c)if(Object.prototype.hasOwnProperty.call(c,e)){var f=e.toLowerCase();if(f in a)throw Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES?'Cannot override "'+f+'" attribute, got "'+
e+'" with value "'+c[e]+'"':"");f in b&&delete d[f];d[e]=c[e]}return d};goog.html.SafeHtml.DOCTYPE_HTML=function(){return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>",goog.i18n.bidi.Dir.NEUTRAL)}();goog.html.SafeHtml.EMPTY=new goog.html.SafeHtml(goog.global.trustedTypes&&goog.global.trustedTypes.emptyHTML||"",goog.i18n.bidi.Dir.NEUTRAL,goog.html.SafeHtml.CONSTRUCTOR_TOKEN_PRIVATE_);
goog.html.SafeHtml.BR=function(){return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>",goog.i18n.bidi.Dir.NEUTRAL)}();goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b,c){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b,c||null)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeScript_SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,goog.html.SafeHtml.unwrapTrustedHTML(c))};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&"undefined"===typeof document)return!1;var a=document.createElement("div"),b=document.createElement("div");b.appendChild(document.createElement("div"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return!1;b=a.firstChild.firstChild;a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);return!b.parentElement});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS&&a.tagName){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+a.tagName+".");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b)};
goog.dom.safe.setInnerHtmlFromConstant=function(a,b){goog.dom.safe.setInnerHtml(a,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML to be immediatelly used."),goog.string.Const.unwrap(b)))};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setStyle=function(a,b){a.style.cssText=goog.html.SafeStyle.unwrap(b)};goog.dom.safe.documentWrite=function(a,b){a.write(goog.html.SafeHtml.unwrapTrustedHTML(b))};
goog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setImageSrc=function(a,b){goog.dom.asserts.assertIsHTMLImageElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:image\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c)}a.src=goog.html.SafeUrl.unwrap(b)};
goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};goog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrap(b)};
goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=goog.html.SafeHtml.unwrapTrustedHTML(b)};
goog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,"stylesheet")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),a.href=goog.html.TrustedResourceUrl.unwrap(b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrap(b):b instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrap(b):goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(b))};
goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b)};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);goog.dom.safe.setNonceForScriptElement_(a)};
goog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.textContent=module$contents$goog$html$SafeScript_SafeScript.unwrapTrustedScript(b);goog.dom.safe.setNonceForScriptElement_(a)};goog.dom.safe.setNonceForScriptElement_=function(a){var b=goog.getScriptNonce(a.ownerDocument&&a.ownerDocument.defaultView);b&&a.setAttribute("nonce",b)};
goog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrap(b)};goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrap(b))};
goog.dom.safe.replaceLocation=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrap(b))};goog.dom.safe.openInWindow=function(a,b,c,d,e){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);b=b||goog.global;c=c instanceof goog.string.Const?goog.string.Const.unwrap(c):c||"";return void 0!==d||void 0!==e?b.open(goog.html.SafeUrl.unwrap(a),c,d,e):b.open(goog.html.SafeUrl.unwrap(a),c)};
goog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,"text/html")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(b),c)};
goog.dom.safe.createImageFromBlob=function(a){if(!/^image\/.*/g.test(a.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b)};goog.dom.safe.setImageSrc(a,goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."),b));return a};goog.dom.safe.createContextualFragment=function(a,b){return a.createContextualFragment(goog.html.SafeHtml.unwrapTrustedHTML(b))};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;
goog.string.subs=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};
goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\t\n\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return" "==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\u0080"<=a&&"\ufffd">=a};
goog.string.stripNewlines=function(a){return a.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\r\n|\r|\n)/g,"\n")};goog.string.normalizeWhitespace=function(a){return a.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;
goog.string.trimLeft=function(a){return a.replace(/^[\s\xa0]+/,"")};goog.string.trimRight=function(a){return a.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;
goog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){var c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};var d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,f){var g=c[e];if(g)return g;"#"==f.charAt(0)&&(f=Number("0"+f.substr(1)),isNaN(f)||(g=String.fromCharCode(f)));g||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),
e+" ")),g=d.firstChild.nodeValue.slice(0,-1));return c[e]=g})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(b,c){switch(c){case "amp":return"&";case "lt":return"<";case "gt":return">";case "quot":return'"';default:return"#"!=c.charAt(0)||(c=Number("0"+c.substr(1)),isNaN(c))?b:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","<":"\\u003C"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(a){a=String(a);for(var b=['"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('"');return b.join("")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b=a.charCodeAt(0);if(31<b&&127>b)var c=a;else{if(256>b){if(c="\\x",16>b||256<b)c+="0"}else c="\\u",4096>b&&(c+="0");c+=b.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=c};goog.string.contains=goog.string.internal.contains;goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;
goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){return a.replace(b,"")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,"")};goog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,c.replace(/\$/g,"$$$$"))};
goog.string.regExpEscape=function(a){return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};goog.string.padNumber=function(a,b,c){a=void 0!==c?a.toFixed(c):String(a);c=a.indexOf(".");-1==c&&(c=a.length);return goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};
goog.string.buildString=function(a){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;
goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\-([a-z])/g,function(b,c){return c.toUpperCase()})};
goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(a,b){b="string"===typeof b?goog.string.regExpEscape(b):"\\s";return a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(c,d,e){return d+e.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};
goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return"string"===typeof a?/^\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.lastComponent=function(a,b){if(b)"string"==typeof b&&(b=[b]);else return a;for(var c=-1,d=0;d<b.length;d++)if(""!=b[d]){var e=a.lastIndexOf(b[d]);e>c&&(c=e)}return-1==c?a:a.slice(c+1)};
goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};
goog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){a=goog.labs.userAgent.util.extractVersionTuples(a);var b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return"Gecko"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,"Firefox"):b[1];a=a[0];var c;if(a&&(c=a[2])&&(c=/Trident\/([^\s;]+)/.exec(c)))return c[1]}return""};
goog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if("Edge"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){return(a=module$contents$goog$array_find(a,function(c){return b==c[0]}))&&a[1]||""};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};
goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};
goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};goog.labs.userAgent.platform.isChromecast=function(){return goog.labs.userAgent.util.matchUserAgent("CrKey")};goog.labs.userAgent.platform.isKaiOS=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS")};
goog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b="";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:"0.0"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,".")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,"."):"10"):goog.labs.userAgent.platform.isKaiOS()?(b=/(?:KaiOS)\/(\S+)/i,
b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isAndroid()?(b=/Android\s+([^\);]+)(\)|;)/,b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||""};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.reflect={};goog.reflect.object=function(a,b){return b};goog.reflect.objectProperty=function(a,b){return a};goog.reflect.sinkValue=function(a){goog.reflect.sinkValue[" "](a);return a};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(a,b){try{return goog.reflect.sinkValue(a[b]),!0}catch(c){}return!1};goog.reflect.cache=function(a,b,c,d){d=d?d(b):b;return Object.prototype.hasOwnProperty.call(a,d)?a[d]:a[d]=c(b)};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};
goog.userAgent.getNavigatorTyped=function(){return goog.global.navigator||null};goog.userAgent.getNavigator=function(){return goog.userAgent.getNavigatorTyped()};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};
goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;goog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigatorTyped();return a&&a.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;
goog.userAgent.ASSUME_IPAD=!1;goog.userAgent.ASSUME_IPOD=!1;goog.userAgent.ASSUME_KAIOS=!1;goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigatorTyped();return!!a&&goog.string.contains(a.appVersion||"","X11")};
goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod();goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos();goog.userAgent.KAIOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_KAIOS:goog.labs.userAgent.platform.isKaiOS();
goog.userAgent.determineVersion_=function(){var a="",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:"");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),null!=b&&b>parseFloat(a))?String(b):a};
goog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv:([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.EDGE)return/Edge\/([\d\.]+)/.exec(a);if(goog.userAgent.IE)return/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return/WebKit\/(\S+)/.exec(a);if(goog.userAgent.OPERA)return/(?:Version)[ \/]?(\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};
goog.userAgent.VERSION=goog.userAgent.determineVersion_();goog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,a,function(){return 0<=goog.string.compareVersions(goog.userAgent.VERSION,a)})};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){if(goog.global.document&&goog.userAgent.IE){var a=goog.userAgent.getDocumentMode_();return a?a:parseInt(goog.userAgent.VERSION,10)||void 0}}();goog.dom.BrowserFeature={};goog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS=!1;goog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS=!1;goog.dom.BrowserFeature.detectOffscreenCanvas_=function(a){try{return!!(new self.OffscreenCanvas(0,0)).getContext(a)}catch(b){}return!1};goog.dom.BrowserFeature.OFFSCREEN_CANVAS_2D=!goog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS&&(goog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS||goog.dom.BrowserFeature.detectOffscreenCanvas_("2d"));
goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES=!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9);goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE=!goog.userAgent.GECKO&&!goog.userAgent.IE||goog.userAgent.IE&&goog.userAgent.isDocumentModeOrHigher(9)||goog.userAgent.GECKO&&goog.userAgent.isVersionOrHigher("1.9.1");goog.dom.BrowserFeature.CAN_USE_INNER_TEXT=goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9");
goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY=goog.userAgent.IE||goog.userAgent.OPERA||goog.userAgent.WEBKIT;goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT=goog.userAgent.IE;goog.dom.BrowserFeature.LEGACY_IE_RANGES=goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9);goog.math={};goog.math.randomInt=function(a){return Math.floor(Math.random()*a)};goog.math.uniformRandom=function(a,b){return a+Math.random()*(b-a)};goog.math.clamp=function(a,b,c){return Math.min(Math.max(a,b),c)};goog.math.modulo=function(a,b){a%=b;return 0>a*b?a+b:a};goog.math.lerp=function(a,b,c){return a+c*(b-a)};goog.math.nearlyEquals=function(a,b,c){return Math.abs(a-b)<=(c||1E-6)};goog.math.standardAngle=function(a){return goog.math.modulo(a,360)};
goog.math.standardAngleInRadians=function(a){return goog.math.modulo(a,2*Math.PI)};goog.math.toRadians=function(a){return a*Math.PI/180};goog.math.toDegrees=function(a){return 180*a/Math.PI};goog.math.angleDx=function(a,b){return b*Math.cos(goog.math.toRadians(a))};goog.math.angleDy=function(a,b){return b*Math.sin(goog.math.toRadians(a))};goog.math.angle=function(a,b,c,d){return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(d-b,c-a)))};
goog.math.angleDifference=function(a,b){a=goog.math.standardAngle(b)-goog.math.standardAngle(a);180<a?a-=360:-180>=a&&(a=360+a);return a};goog.math.sign=function(a){return 0<a?1:0>a?-1:a};
goog.math.longestCommonSubsequence=function(a,b,c,d){c=c||function(m,p){return m==p};d=d||function(m,p){return a[m]};for(var e=a.length,f=b.length,g=[],h=0;h<e+1;h++)g[h]=[],g[h][0]=0;for(var k=0;k<f+1;k++)g[0][k]=0;for(h=1;h<=e;h++)for(k=1;k<=f;k++)c(a[h-1],b[k-1])?g[h][k]=g[h-1][k-1]+1:g[h][k]=Math.max(g[h-1][k],g[h][k-1]);var l=[];h=e;for(k=f;0<h&&0<k;)c(a[h-1],b[k-1])?(l.unshift(d(h-1,k-1)),h--,k--):g[h-1][k]>g[h][k-1]?h--:k--;return l};
goog.math.sum=function(a){return module$contents$goog$array_reduce(arguments,function(b,c){return b+c},0)};goog.math.average=function(a){return goog.math.sum.apply(null,arguments)/arguments.length};goog.math.sampleVariance=function(a){var b=arguments.length;if(2>b)return 0;var c=goog.math.average.apply(null,arguments);return goog.math.sum.apply(null,module$contents$goog$array_map(arguments,function(d){return Math.pow(d-c,2)}))/(b-1)};
goog.math.standardDeviation=function(a){return Math.sqrt(goog.math.sampleVariance.apply(null,arguments))};goog.math.isInt=function(a){return isFinite(a)&&0==a%1};goog.math.isFiniteNumber=function(a){return isFinite(a)};goog.math.isNegativeZero=function(a){return 0==a&&0>1/a};goog.math.log10Floor=function(a){if(0<a){var b=Math.round(Math.log(a)*Math.LOG10E);return b-(parseFloat("1e"+b)>a?1:0)}return 0==a?-Infinity:NaN};
goog.math.safeFloor=function(a,b){goog.asserts.assert(void 0===b||0<b);return Math.floor(a+(b||2E-15))};goog.math.safeCeil=function(a,b){goog.asserts.assert(void 0===b||0<b);return Math.ceil(a-(b||2E-15))};goog.math.Coordinate=function(a,b){this.x=void 0!==a?a:0;this.y=void 0!==b?b:0};goog.math.Coordinate.prototype.clone=function(){return new goog.math.Coordinate(this.x,this.y)};goog.DEBUG&&(goog.math.Coordinate.prototype.toString=function(){return"("+this.x+", "+this.y+")"});goog.math.Coordinate.prototype.equals=function(a){return a instanceof goog.math.Coordinate&&goog.math.Coordinate.equals(this,a)};goog.math.Coordinate.equals=function(a,b){return a==b?!0:a&&b?a.x==b.x&&a.y==b.y:!1};
goog.math.Coordinate.distance=function(a,b){var c=a.x-b.x;a=a.y-b.y;return Math.sqrt(c*c+a*a)};goog.math.Coordinate.magnitude=function(a){return Math.sqrt(a.x*a.x+a.y*a.y)};goog.math.Coordinate.azimuth=function(a){return goog.math.angle(0,0,a.x,a.y)};goog.math.Coordinate.squaredDistance=function(a,b){var c=a.x-b.x;a=a.y-b.y;return c*c+a*a};goog.math.Coordinate.difference=function(a,b){return new goog.math.Coordinate(a.x-b.x,a.y-b.y)};
goog.math.Coordinate.sum=function(a,b){return new goog.math.Coordinate(a.x+b.x,a.y+b.y)};goog.math.Coordinate.prototype.ceil=function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this};goog.math.Coordinate.prototype.floor=function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this};goog.math.Coordinate.prototype.round=function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this};
goog.math.Coordinate.prototype.translate=function(a,b){a instanceof goog.math.Coordinate?(this.x+=a.x,this.y+=a.y):(this.x+=Number(a),"number"===typeof b&&(this.y+=b));return this};goog.math.Coordinate.prototype.scale=function(a,b){this.x*=a;this.y*="number"===typeof b?b:a;return this};goog.math.Coordinate.prototype.rotateRadians=function(a,b){b=b||new goog.math.Coordinate(0,0);var c=this.x,d=this.y,e=Math.cos(a);a=Math.sin(a);this.x=(c-b.x)*e-(d-b.y)*a+b.x;this.y=(c-b.x)*a+(d-b.y)*e+b.y};
goog.math.Coordinate.prototype.rotateDegrees=function(a,b){this.rotateRadians(goog.math.toRadians(a),b)};goog.math.Size=function(a,b){this.width=a;this.height=b};goog.math.Size.equals=function(a,b){return a==b?!0:a&&b?a.width==b.width&&a.height==b.height:!1};goog.math.Size.prototype.clone=function(){return new goog.math.Size(this.width,this.height)};goog.DEBUG&&(goog.math.Size.prototype.toString=function(){return"("+this.width+" x "+this.height+")"});goog.math.Size.prototype.getLongest=function(){return Math.max(this.width,this.height)};
goog.math.Size.prototype.getShortest=function(){return Math.min(this.width,this.height)};goog.math.Size.prototype.area=function(){return this.width*this.height};goog.math.Size.prototype.perimeter=function(){return 2*(this.width+this.height)};goog.math.Size.prototype.aspectRatio=function(){return this.width/this.height};goog.math.Size.prototype.isEmpty=function(){return!this.area()};goog.math.Size.prototype.ceil=function(){this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};
goog.math.Size.prototype.fitsInside=function(a){return this.width<=a.width&&this.height<=a.height};goog.math.Size.prototype.floor=function(){this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};goog.math.Size.prototype.round=function(){this.width=Math.round(this.width);this.height=Math.round(this.height);return this};goog.math.Size.prototype.scale=function(a,b){this.width*=a;this.height*="number"===typeof b?b:a;return this};
goog.math.Size.prototype.scaleToCover=function(a){a=this.aspectRatio()<=a.aspectRatio()?a.width/this.width:a.height/this.height;return this.scale(a)};goog.math.Size.prototype.scaleToFit=function(a){a=this.aspectRatio()>a.aspectRatio()?a.width/this.width:a.height/this.height;return this.scale(a)};goog.dom.ASSUME_QUIRKS_MODE=!1;goog.dom.ASSUME_STANDARDS_MODE=!1;goog.dom.COMPAT_MODE_KNOWN_=goog.dom.ASSUME_QUIRKS_MODE||goog.dom.ASSUME_STANDARDS_MODE;goog.dom.getDomHelper=function(a){return a?new goog.dom.DomHelper(goog.dom.getOwnerDocument(a)):goog.dom.defaultDomHelper_||(goog.dom.defaultDomHelper_=new goog.dom.DomHelper)};goog.dom.getDocument=function(){return document};goog.dom.getElement=function(a){return goog.dom.getElementHelper_(document,a)};
goog.dom.getElementHelper_=function(a,b){return"string"===typeof b?a.getElementById(b):b};goog.dom.getRequiredElement=function(a){return goog.dom.getRequiredElementHelper_(document,a)};goog.dom.getRequiredElementHelper_=function(a,b){goog.asserts.assertString(b);a=goog.dom.getElementHelper_(a,b);return a=goog.asserts.assertElement(a,"No element found with id: "+b)};goog.dom.$=goog.dom.getElement;goog.dom.getElementsByTagName=function(a,b){return(b||document).getElementsByTagName(String(a))};
goog.dom.getElementsByTagNameAndClass=function(a,b,c){return goog.dom.getElementsByTagNameAndClass_(document,a,b,c)};goog.dom.getElementByTagNameAndClass=function(a,b,c){return goog.dom.getElementByTagNameAndClass_(document,a,b,c)};goog.dom.getElementsByClass=function(a,b){var c=b||document;return goog.dom.canUseQuerySelector_(c)?c.querySelectorAll("."+a):goog.dom.getElementsByTagNameAndClass_(document,"*",a,b)};
goog.dom.getElementByClass=function(a,b){var c=b||document;return(c.getElementsByClassName?c.getElementsByClassName(a)[0]:goog.dom.getElementByTagNameAndClass_(document,"*",a,b))||null};goog.dom.getRequiredElementByClass=function(a,b){b=goog.dom.getElementByClass(a,b);return goog.asserts.assert(b,"No element found with className: "+a)};goog.dom.canUseQuerySelector_=function(a){return!(!a.querySelectorAll||!a.querySelector)};
goog.dom.getElementsByTagNameAndClass_=function(a,b,c,d){a=d||a;b=b&&"*"!=b?String(b).toUpperCase():"";if(goog.dom.canUseQuerySelector_(a)&&(b||c))return a.querySelectorAll(b+(c?"."+c:""));if(c&&a.getElementsByClassName){a=a.getElementsByClassName(c);if(b){d={};for(var e=0,f=0,g;g=a[f];f++)b==g.nodeName&&(d[e++]=g);d.length=e;return d}return a}a=a.getElementsByTagName(b||"*");if(c){d={};for(f=e=0;g=a[f];f++)b=g.className,"function"==typeof b.split&&module$contents$goog$array_contains(b.split(/\s+/),
c)&&(d[e++]=g);d.length=e;return d}return a};goog.dom.getElementByTagNameAndClass_=function(a,b,c,d){var e=d||a,f=b&&"*"!=b?String(b).toUpperCase():"";return goog.dom.canUseQuerySelector_(e)&&(f||c)?e.querySelector(f+(c?"."+c:"")):goog.dom.getElementsByTagNameAndClass_(a,b,c,d)[0]||null};goog.dom.$$=goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties=function(a,b){goog.object.forEach(b,function(c,d){c&&"object"==typeof c&&c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());"style"==d?a.style.cssText=c:"class"==d?a.className=c:"for"==d?a.htmlFor=c:goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(d)?a.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[d],c):goog.string.startsWith(d,"aria-")||goog.string.startsWith(d,"data-")?a.setAttribute(d,c):a[d]=c})};
goog.dom.DIRECT_ATTRIBUTE_MAP_={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};goog.dom.getViewportSize=function(a){return goog.dom.getViewportSize_(a||window)};goog.dom.getViewportSize_=function(a){a=a.document;a=goog.dom.isCss1CompatMode_(a)?a.documentElement:a.body;return new goog.math.Size(a.clientWidth,a.clientHeight)};
goog.dom.getDocumentHeight=function(){return goog.dom.getDocumentHeight_(window)};goog.dom.getDocumentHeightForWindow=function(a){return goog.dom.getDocumentHeight_(a)};
goog.dom.getDocumentHeight_=function(a){var b=a.document,c=0;if(b){c=b.body;var d=b.documentElement;if(!d||!c)return 0;a=goog.dom.getViewportSize_(a).height;if(goog.dom.isCss1CompatMode_(b)&&d.scrollHeight)c=d.scrollHeight!=a?d.scrollHeight:d.offsetHeight;else{b=d.scrollHeight;var e=d.offsetHeight;d.clientHeight!=e&&(b=c.scrollHeight,e=c.offsetHeight);c=b>a?b>e?b:e:b<e?b:e}}return c};goog.dom.getPageScroll=function(a){return goog.dom.getDomHelper((a||goog.global||window).document).getDocumentScroll()};
goog.dom.getDocumentScroll=function(){return goog.dom.getDocumentScroll_(document)};goog.dom.getDocumentScroll_=function(a){var b=goog.dom.getDocumentScrollElement_(a);a=goog.dom.getWindow_(a);return goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("10")&&a.pageYOffset!=b.scrollTop?new goog.math.Coordinate(b.scrollLeft,b.scrollTop):new goog.math.Coordinate(a.pageXOffset||b.scrollLeft,a.pageYOffset||b.scrollTop)};goog.dom.getDocumentScrollElement=function(){return goog.dom.getDocumentScrollElement_(document)};
goog.dom.getDocumentScrollElement_=function(a){return a.scrollingElement?a.scrollingElement:!goog.userAgent.WEBKIT&&goog.dom.isCss1CompatMode_(a)?a.documentElement:a.body||a.documentElement};goog.dom.getWindow=function(a){return a?goog.dom.getWindow_(a):window};goog.dom.getWindow_=function(a){return a.parentWindow||a.defaultView};goog.dom.createDom=function(a,b,c){return goog.dom.createDom_(document,arguments)};
goog.dom.createDom_=function(a,b){var c=String(b[0]),d=b[1];if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES&&d&&(d.name||d.type)){c=["<",c];d.name&&c.push(' name="',goog.string.htmlEscape(d.name),'"');if(d.type){c.push(' type="',goog.string.htmlEscape(d.type),'"');var e={};goog.object.extend(e,d);delete e.type;d=e}c.push(">");c=c.join("")}c=goog.dom.createElement_(a,c);d&&("string"===typeof d?c.className=d:Array.isArray(d)?c.className=d.join(" "):goog.dom.setProperties(c,d));2<b.length&&
goog.dom.append_(a,c,b,2);return c};goog.dom.append_=function(a,b,c,d){function e(g){g&&b.appendChild("string"===typeof g?a.createTextNode(g):g)}for(;d<c.length;d++){var f=c[d];goog.isArrayLike(f)&&!goog.dom.isNodeLike(f)?module$contents$goog$array_forEach(goog.dom.isNodeList(f)?module$contents$goog$array_toArray(f):f,e):e(f)}};goog.dom.$dom=goog.dom.createDom;goog.dom.createElement=function(a){return goog.dom.createElement_(document,a)};
goog.dom.createElement_=function(a,b){b=String(b);"application/xhtml+xml"===a.contentType&&(b=b.toLowerCase());return a.createElement(b)};goog.dom.createTextNode=function(a){return document.createTextNode(String(a))};goog.dom.createTable=function(a,b,c){return goog.dom.createTable_(document,a,b,!!c)};
goog.dom.createTable_=function(a,b,c,d){for(var e=goog.dom.createElement_(a,goog.dom.TagName.TABLE),f=e.appendChild(goog.dom.createElement_(a,goog.dom.TagName.TBODY)),g=0;g<b;g++){for(var h=goog.dom.createElement_(a,goog.dom.TagName.TR),k=0;k<c;k++){var l=goog.dom.createElement_(a,goog.dom.TagName.TD);d&&goog.dom.setTextContent(l,goog.string.Unicode.NBSP);h.appendChild(l)}f.appendChild(h)}return e};
goog.dom.constHtmlToNode=function(a){var b=module$contents$goog$array_map(arguments,goog.string.Const.unwrap);b=goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a Node later, so it will be automatically balanced."),b.join(""));return goog.dom.safeHtmlToNode(b)};goog.dom.safeHtmlToNode=function(a){return goog.dom.safeHtmlToNode_(document,a)};
goog.dom.safeHtmlToNode_=function(a,b){var c=goog.dom.createElement_(a,goog.dom.TagName.DIV);goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT?(goog.dom.safe.setInnerHtml(c,goog.html.SafeHtml.concat(goog.html.SafeHtml.BR,b)),c.removeChild(goog.asserts.assert(c.firstChild))):goog.dom.safe.setInnerHtml(c,b);return goog.dom.childrenToNode_(a,c)};
goog.dom.childrenToNode_=function(a,b){if(1==b.childNodes.length)return b.removeChild(goog.asserts.assert(b.firstChild));for(a=a.createDocumentFragment();b.firstChild;)a.appendChild(b.firstChild);return a};goog.dom.isCss1CompatMode=function(){return goog.dom.isCss1CompatMode_(document)};goog.dom.isCss1CompatMode_=function(a){return goog.dom.COMPAT_MODE_KNOWN_?goog.dom.ASSUME_STANDARDS_MODE:"CSS1Compat"==a.compatMode};
goog.dom.canHaveChildren=function(a){if(a.nodeType!=goog.dom.NodeType.ELEMENT)return!1;switch(a.tagName){case String(goog.dom.TagName.APPLET):case String(goog.dom.TagName.AREA):case String(goog.dom.TagName.BASE):case String(goog.dom.TagName.BR):case String(goog.dom.TagName.COL):case String(goog.dom.TagName.COMMAND):case String(goog.dom.TagName.EMBED):case String(goog.dom.TagName.FRAME):case String(goog.dom.TagName.HR):case String(goog.dom.TagName.IMG):case String(goog.dom.TagName.INPUT):case String(goog.dom.TagName.IFRAME):case String(goog.dom.TagName.ISINDEX):case String(goog.dom.TagName.KEYGEN):case String(goog.dom.TagName.LINK):case String(goog.dom.TagName.NOFRAMES):case String(goog.dom.TagName.NOSCRIPT):case String(goog.dom.TagName.META):case String(goog.dom.TagName.OBJECT):case String(goog.dom.TagName.PARAM):case String(goog.dom.TagName.SCRIPT):case String(goog.dom.TagName.SOURCE):case String(goog.dom.TagName.STYLE):case String(goog.dom.TagName.TRACK):case String(goog.dom.TagName.WBR):return!1}return!0};
goog.dom.appendChild=function(a,b){goog.asserts.assert(null!=a&&null!=b,"goog.dom.appendChild expects non-null arguments");a.appendChild(b)};goog.dom.append=function(a,b){goog.dom.append_(goog.dom.getOwnerDocument(a),a,arguments,1)};goog.dom.removeChildren=function(a){for(var b;b=a.firstChild;)a.removeChild(b)};goog.dom.insertSiblingBefore=function(a,b){goog.asserts.assert(null!=a&&null!=b,"goog.dom.insertSiblingBefore expects non-null arguments");b.parentNode&&b.parentNode.insertBefore(a,b)};
goog.dom.insertSiblingAfter=function(a,b){goog.asserts.assert(null!=a&&null!=b,"goog.dom.insertSiblingAfter expects non-null arguments");b.parentNode&&b.parentNode.insertBefore(a,b.nextSibling)};goog.dom.insertChildAt=function(a,b,c){goog.asserts.assert(null!=a,"goog.dom.insertChildAt expects a non-null parent");a.insertBefore(b,a.childNodes[c]||null)};goog.dom.removeNode=function(a){return a&&a.parentNode?a.parentNode.removeChild(a):null};
goog.dom.replaceNode=function(a,b){goog.asserts.assert(null!=a&&null!=b,"goog.dom.replaceNode expects non-null arguments");var c=b.parentNode;c&&c.replaceChild(a,b)};goog.dom.copyContents=function(a,b){goog.asserts.assert(null!=a&&null!=b,"goog.dom.copyContents expects non-null arguments");b=b.cloneNode(!0).childNodes;for(goog.dom.removeChildren(a);b.length;)a.appendChild(b[0])};
goog.dom.flattenElement=function(a){var b,c=a.parentNode;if(c&&c.nodeType!=goog.dom.NodeType.DOCUMENT_FRAGMENT){if(a.removeNode)return a.removeNode(!1);for(;b=a.firstChild;)c.insertBefore(b,a);return goog.dom.removeNode(a)}};goog.dom.getChildren=function(a){return goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE&&void 0!=a.children?a.children:module$contents$goog$array_filter(a.childNodes,function(b){return b.nodeType==goog.dom.NodeType.ELEMENT})};
goog.dom.getFirstElementChild=function(a){return void 0!==a.firstElementChild?a.firstElementChild:goog.dom.getNextElementNode_(a.firstChild,!0)};goog.dom.getLastElementChild=function(a){return void 0!==a.lastElementChild?a.lastElementChild:goog.dom.getNextElementNode_(a.lastChild,!1)};goog.dom.getNextElementSibling=function(a){return void 0!==a.nextElementSibling?a.nextElementSibling:goog.dom.getNextElementNode_(a.nextSibling,!0)};
goog.dom.getPreviousElementSibling=function(a){return void 0!==a.previousElementSibling?a.previousElementSibling:goog.dom.getNextElementNode_(a.previousSibling,!1)};goog.dom.getNextElementNode_=function(a,b){for(;a&&a.nodeType!=goog.dom.NodeType.ELEMENT;)a=b?a.nextSibling:a.previousSibling;return a};goog.dom.getNextNode=function(a){if(!a)return null;if(a.firstChild)return a.firstChild;for(;a&&!a.nextSibling;)a=a.parentNode;return a?a.nextSibling:null};
goog.dom.getPreviousNode=function(a){if(!a)return null;if(!a.previousSibling)return a.parentNode;for(a=a.previousSibling;a&&a.lastChild;)a=a.lastChild;return a};goog.dom.isNodeLike=function(a){return goog.isObject(a)&&0<a.nodeType};goog.dom.isElement=function(a){return goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT};goog.dom.isWindow=function(a){return goog.isObject(a)&&a.window==a};
goog.dom.getParentElement=function(a){var b;if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY&&!(goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("9")&&!goog.userAgent.isVersionOrHigher("10")&&goog.global.SVGElement&&a instanceof goog.global.SVGElement)&&(b=a.parentElement))return b;b=a.parentNode;return goog.dom.isElement(b)?b:null};
goog.dom.contains=function(a,b){if(!a||!b)return!1;if(a.contains&&b.nodeType==goog.dom.NodeType.ELEMENT)return a==b||a.contains(b);if("undefined"!=typeof a.compareDocumentPosition)return a==b||!!(a.compareDocumentPosition(b)&16);for(;b&&a!=b;)b=b.parentNode;return b==a};
goog.dom.compareNodeOrder=function(a,b){if(a==b)return 0;if(a.compareDocumentPosition)return a.compareDocumentPosition(b)&2?1:-1;if(goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9)){if(a.nodeType==goog.dom.NodeType.DOCUMENT)return-1;if(b.nodeType==goog.dom.NodeType.DOCUMENT)return 1}if("sourceIndex"in a||a.parentNode&&"sourceIndex"in a.parentNode){var c=a.nodeType==goog.dom.NodeType.ELEMENT,d=b.nodeType==goog.dom.NodeType.ELEMENT;if(c&&d)return a.sourceIndex-b.sourceIndex;var e=a.parentNode,
f=b.parentNode;return e==f?goog.dom.compareSiblingOrder_(a,b):!c&&goog.dom.contains(e,b)?-1*goog.dom.compareParentsDescendantNodeIe_(a,b):!d&&goog.dom.contains(f,a)?goog.dom.compareParentsDescendantNodeIe_(b,a):(c?a.sourceIndex:e.sourceIndex)-(d?b.sourceIndex:f.sourceIndex)}d=goog.dom.getOwnerDocument(a);c=d.createRange();c.selectNode(a);c.collapse(!0);a=d.createRange();a.selectNode(b);a.collapse(!0);return c.compareBoundaryPoints(goog.global.Range.START_TO_END,a)};
goog.dom.compareParentsDescendantNodeIe_=function(a,b){var c=a.parentNode;if(c==b)return-1;for(;b.parentNode!=c;)b=b.parentNode;return goog.dom.compareSiblingOrder_(b,a)};goog.dom.compareSiblingOrder_=function(a,b){for(;b=b.previousSibling;)if(b==a)return-1;return 1};
goog.dom.findCommonAncestor=function(a){var b,c=arguments.length;if(!c)return null;if(1==c)return arguments[0];var d=[],e=Infinity;for(b=0;b<c;b++){for(var f=[],g=arguments[b];g;)f.unshift(g),g=g.parentNode;d.push(f);e=Math.min(e,f.length)}f=null;for(b=0;b<e;b++){g=d[0][b];for(var h=1;h<c;h++)if(g!=d[h][b])return f;f=g}return f};goog.dom.isInDocument=function(a){return 16==(a.ownerDocument.compareDocumentPosition(a)&16)};
goog.dom.getOwnerDocument=function(a){goog.asserts.assert(a,"Node cannot be null or undefined.");return a.nodeType==goog.dom.NodeType.DOCUMENT?a:a.ownerDocument||a.document};goog.dom.getFrameContentDocument=function(a){return a.contentDocument||a.contentWindow.document};goog.dom.getFrameContentWindow=function(a){try{return a.contentWindow||(a.contentDocument?goog.dom.getWindow(a.contentDocument):null)}catch(b){}return null};
goog.dom.setTextContent=function(a,b){goog.asserts.assert(null!=a,"goog.dom.setTextContent expects a non-null value for node");if("textContent"in a)a.textContent=b;else if(a.nodeType==goog.dom.NodeType.TEXT)a.data=String(b);else if(a.firstChild&&a.firstChild.nodeType==goog.dom.NodeType.TEXT){for(;a.lastChild!=a.firstChild;)a.removeChild(goog.asserts.assert(a.lastChild));a.firstChild.data=String(b)}else{goog.dom.removeChildren(a);var c=goog.dom.getOwnerDocument(a);a.appendChild(c.createTextNode(String(b)))}};
goog.dom.getOuterHtml=function(a){goog.asserts.assert(null!==a,"goog.dom.getOuterHtml expects a non-null value for element");if("outerHTML"in a)return a.outerHTML;var b=goog.dom.getOwnerDocument(a);b=goog.dom.createElement_(b,goog.dom.TagName.DIV);b.appendChild(a.cloneNode(!0));return b.innerHTML};goog.dom.findNode=function(a,b){var c=[];return goog.dom.findNodes_(a,b,c,!0)?c[0]:void 0};goog.dom.findNodes=function(a,b){var c=[];goog.dom.findNodes_(a,b,c,!1);return c};
goog.dom.findNodes_=function(a,b,c,d){if(null!=a)for(a=a.firstChild;a;){if(b(a)&&(c.push(a),d)||goog.dom.findNodes_(a,b,c,d))return!0;a=a.nextSibling}return!1};goog.dom.findElement=function(a,b){for(a=goog.dom.getChildrenReverse_(a);0<a.length;){var c=a.pop();if(b(c))return c;for(c=c.lastElementChild;c;c=c.previousElementSibling)a.push(c)}return null};
goog.dom.findElements=function(a,b){var c=[];for(a=goog.dom.getChildrenReverse_(a);0<a.length;){var d=a.pop();b(d)&&c.push(d);for(d=d.lastElementChild;d;d=d.previousElementSibling)a.push(d)}return c};goog.dom.getChildrenReverse_=function(a){if(a.nodeType==goog.dom.NodeType.DOCUMENT)return[a.documentElement];var b=[];for(a=a.lastElementChild;a;a=a.previousElementSibling)b.push(a);return b};goog.dom.TAGS_TO_IGNORE_={SCRIPT:1,STYLE:1,HEAD:1,IFRAME:1,OBJECT:1};
goog.dom.PREDEFINED_TAG_VALUES_={IMG:" ",BR:"\n"};goog.dom.isFocusableTabIndex=function(a){return goog.dom.hasSpecifiedTabIndex_(a)&&goog.dom.isTabIndexFocusable_(a)};goog.dom.setFocusableTabIndex=function(a,b){b?a.tabIndex=0:(a.tabIndex=-1,a.removeAttribute("tabIndex"))};
goog.dom.isFocusable=function(a){var b;return(b=goog.dom.nativelySupportsFocus_(a)?!a.disabled&&(!goog.dom.hasSpecifiedTabIndex_(a)||goog.dom.isTabIndexFocusable_(a)):goog.dom.isFocusableTabIndex(a))&&goog.userAgent.IE?goog.dom.hasNonZeroBoundingRect_(a):b};goog.dom.hasSpecifiedTabIndex_=function(a){return goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("9")?(a=a.getAttributeNode("tabindex"),null!=a&&a.specified):a.hasAttribute("tabindex")};
goog.dom.isTabIndexFocusable_=function(a){a=a.tabIndex;return"number"===typeof a&&0<=a&&32768>a};goog.dom.nativelySupportsFocus_=function(a){return a.tagName==goog.dom.TagName.A&&a.hasAttribute("href")||a.tagName==goog.dom.TagName.INPUT||a.tagName==goog.dom.TagName.TEXTAREA||a.tagName==goog.dom.TagName.SELECT||a.tagName==goog.dom.TagName.BUTTON};
goog.dom.hasNonZeroBoundingRect_=function(a){a="function"!==typeof a.getBoundingClientRect||goog.userAgent.IE&&null==a.parentElement?{height:a.offsetHeight,width:a.offsetWidth}:a.getBoundingClientRect();return null!=a&&0<a.height&&0<a.width};
goog.dom.getTextContent=function(a){if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT&&null!==a&&"innerText"in a)a=goog.string.canonicalizeNewlines(a.innerText);else{var b=[];goog.dom.getTextContent_(a,b,!0);a=b.join("")}a=a.replace(/ \xAD /g," ").replace(/\xAD/g,"");a=a.replace(/\u200B/g,"");goog.dom.BrowserFeature.CAN_USE_INNER_TEXT||(a=a.replace(/ +/g," "));" "!=a&&(a=a.replace(/^\s*/,""));return a};goog.dom.getRawTextContent=function(a){var b=[];goog.dom.getTextContent_(a,b,!1);return b.join("")};
goog.dom.getTextContent_=function(a,b,c){if(!(a.nodeName in goog.dom.TAGS_TO_IGNORE_))if(a.nodeType==goog.dom.NodeType.TEXT)c?b.push(String(a.nodeValue).replace(/(\r\n|\r|\n)/g,"")):b.push(a.nodeValue);else if(a.nodeName in goog.dom.PREDEFINED_TAG_VALUES_)b.push(goog.dom.PREDEFINED_TAG_VALUES_[a.nodeName]);else for(a=a.firstChild;a;)goog.dom.getTextContent_(a,b,c),a=a.nextSibling};goog.dom.getNodeTextLength=function(a){return goog.dom.getTextContent(a).length};
goog.dom.getNodeTextOffset=function(a,b){b=b||goog.dom.getOwnerDocument(a).body;for(var c=[];a&&a!=b;){for(var d=a;d=d.previousSibling;)c.unshift(goog.dom.getTextContent(d));a=a.parentNode}return goog.string.trimLeft(c.join("")).replace(/ +/g," ").length};
goog.dom.getNodeAtOffset=function(a,b,c){a=[a];for(var d=0,e=null;0<a.length&&d<b;)if(e=a.pop(),!(e.nodeName in goog.dom.TAGS_TO_IGNORE_))if(e.nodeType==goog.dom.NodeType.TEXT){var f=e.nodeValue.replace(/(\r\n|\r|\n)/g,"").replace(/ +/g," ");d+=f.length}else if(e.nodeName in goog.dom.PREDEFINED_TAG_VALUES_)d+=goog.dom.PREDEFINED_TAG_VALUES_[e.nodeName].length;else for(f=e.childNodes.length-1;0<=f;f--)a.push(e.childNodes[f]);goog.isObject(c)&&(c.remainder=e?e.nodeValue.length+b-d-1:0,c.node=e);return e};
goog.dom.isNodeList=function(a){if(a&&"number"==typeof a.length){if(goog.isObject(a))return"function"==typeof a.item||"string"==typeof a.item;if("function"===typeof a)return"function"==typeof a.item}return!1};goog.dom.getAncestorByTagNameAndClass=function(a,b,c,d){if(!b&&!c)return null;var e=b?String(b).toUpperCase():null;return goog.dom.getAncestor(a,function(f){return(!e||f.nodeName==e)&&(!c||"string"===typeof f.className&&module$contents$goog$array_contains(f.className.split(/\s+/),c))},!0,d)};
goog.dom.getAncestorByClass=function(a,b,c){return goog.dom.getAncestorByTagNameAndClass(a,null,b,c)};goog.dom.getAncestor=function(a,b,c,d){a&&!c&&(a=a.parentNode);for(c=0;a&&(null==d||c<=d);){goog.asserts.assert("parentNode"!=a.name);if(b(a))return a;a=a.parentNode;c++}return null};goog.dom.getActiveElement=function(a){try{var b=a&&a.activeElement;return b&&b.nodeName?b:null}catch(c){return null}};
goog.dom.getPixelRatio=function(){var a=goog.dom.getWindow();return void 0!==a.devicePixelRatio?a.devicePixelRatio:a.matchMedia?goog.dom.matchesPixelRatio_(3)||goog.dom.matchesPixelRatio_(2)||goog.dom.matchesPixelRatio_(1.5)||goog.dom.matchesPixelRatio_(1)||.75:1};goog.dom.matchesPixelRatio_=function(a){return goog.dom.getWindow().matchMedia("(min-resolution: "+a+"dppx),(min--moz-device-pixel-ratio: "+a+"),(min-resolution: "+96*a+"dpi)").matches?a:0};goog.dom.getCanvasContext2D=function(a){return a.getContext("2d")};
goog.dom.DomHelper=function(a){this.document_=a||goog.global.document||document};goog.dom.DomHelper.prototype.getDomHelper=goog.dom.getDomHelper;goog.dom.DomHelper.prototype.setDocument=function(a){this.document_=a};goog.dom.DomHelper.prototype.getDocument=function(){return this.document_};goog.dom.DomHelper.prototype.getElement=function(a){return goog.dom.getElementHelper_(this.document_,a)};
goog.dom.DomHelper.prototype.getRequiredElement=function(a){return goog.dom.getRequiredElementHelper_(this.document_,a)};goog.dom.DomHelper.prototype.$=goog.dom.DomHelper.prototype.getElement;goog.dom.DomHelper.prototype.getElementsByTagName=function(a,b){return(b||this.document_).getElementsByTagName(String(a))};goog.dom.DomHelper.prototype.getElementsByTagNameAndClass=function(a,b,c){return goog.dom.getElementsByTagNameAndClass_(this.document_,a,b,c)};
goog.dom.DomHelper.prototype.getElementByTagNameAndClass=function(a,b,c){return goog.dom.getElementByTagNameAndClass_(this.document_,a,b,c)};goog.dom.DomHelper.prototype.getElementsByClass=function(a,b){return goog.dom.getElementsByClass(a,b||this.document_)};goog.dom.DomHelper.prototype.getElementByClass=function(a,b){return goog.dom.getElementByClass(a,b||this.document_)};goog.dom.DomHelper.prototype.getRequiredElementByClass=function(a,b){return goog.dom.getRequiredElementByClass(a,b||this.document_)};
goog.dom.DomHelper.prototype.$$=goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;goog.dom.DomHelper.prototype.setProperties=goog.dom.setProperties;goog.dom.DomHelper.prototype.getViewportSize=function(a){return goog.dom.getViewportSize(a||this.getWindow())};goog.dom.DomHelper.prototype.getDocumentHeight=function(){return goog.dom.getDocumentHeight_(this.getWindow())};goog.dom.DomHelper.prototype.createDom=function(a,b,c){return goog.dom.createDom_(this.document_,arguments)};
goog.dom.DomHelper.prototype.$dom=goog.dom.DomHelper.prototype.createDom;goog.dom.DomHelper.prototype.createElement=function(a){return goog.dom.createElement_(this.document_,a)};goog.dom.DomHelper.prototype.createTextNode=function(a){return this.document_.createTextNode(String(a))};goog.dom.DomHelper.prototype.createTable=function(a,b,c){return goog.dom.createTable_(this.document_,a,b,!!c)};goog.dom.DomHelper.prototype.safeHtmlToNode=function(a){return goog.dom.safeHtmlToNode_(this.document_,a)};
goog.dom.DomHelper.prototype.isCss1CompatMode=function(){return goog.dom.isCss1CompatMode_(this.document_)};goog.dom.DomHelper.prototype.getWindow=function(){return goog.dom.getWindow_(this.document_)};goog.dom.DomHelper.prototype.getDocumentScrollElement=function(){return goog.dom.getDocumentScrollElement_(this.document_)};goog.dom.DomHelper.prototype.getDocumentScroll=function(){return goog.dom.getDocumentScroll_(this.document_)};
goog.dom.DomHelper.prototype.getActiveElement=function(a){return goog.dom.getActiveElement(a||this.document_)};goog.dom.DomHelper.prototype.appendChild=goog.dom.appendChild;goog.dom.DomHelper.prototype.append=goog.dom.append;goog.dom.DomHelper.prototype.canHaveChildren=goog.dom.canHaveChildren;goog.dom.DomHelper.prototype.removeChildren=goog.dom.removeChildren;goog.dom.DomHelper.prototype.insertSiblingBefore=goog.dom.insertSiblingBefore;goog.dom.DomHelper.prototype.insertSiblingAfter=goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt=goog.dom.insertChildAt;goog.dom.DomHelper.prototype.removeNode=goog.dom.removeNode;goog.dom.DomHelper.prototype.replaceNode=goog.dom.replaceNode;goog.dom.DomHelper.prototype.copyContents=goog.dom.copyContents;goog.dom.DomHelper.prototype.flattenElement=goog.dom.flattenElement;goog.dom.DomHelper.prototype.getChildren=goog.dom.getChildren;goog.dom.DomHelper.prototype.getFirstElementChild=goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild=goog.dom.getLastElementChild;goog.dom.DomHelper.prototype.getNextElementSibling=goog.dom.getNextElementSibling;goog.dom.DomHelper.prototype.getPreviousElementSibling=goog.dom.getPreviousElementSibling;goog.dom.DomHelper.prototype.getNextNode=goog.dom.getNextNode;goog.dom.DomHelper.prototype.getPreviousNode=goog.dom.getPreviousNode;goog.dom.DomHelper.prototype.isNodeLike=goog.dom.isNodeLike;goog.dom.DomHelper.prototype.isElement=goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow=goog.dom.isWindow;goog.dom.DomHelper.prototype.getParentElement=goog.dom.getParentElement;goog.dom.DomHelper.prototype.contains=goog.dom.contains;goog.dom.DomHelper.prototype.compareNodeOrder=goog.dom.compareNodeOrder;goog.dom.DomHelper.prototype.findCommonAncestor=goog.dom.findCommonAncestor;goog.dom.DomHelper.prototype.getOwnerDocument=goog.dom.getOwnerDocument;goog.dom.DomHelper.prototype.getFrameContentDocument=goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow=goog.dom.getFrameContentWindow;goog.dom.DomHelper.prototype.setTextContent=goog.dom.setTextContent;goog.dom.DomHelper.prototype.getOuterHtml=goog.dom.getOuterHtml;goog.dom.DomHelper.prototype.findNode=goog.dom.findNode;goog.dom.DomHelper.prototype.findNodes=goog.dom.findNodes;goog.dom.DomHelper.prototype.isFocusableTabIndex=goog.dom.isFocusableTabIndex;goog.dom.DomHelper.prototype.setFocusableTabIndex=goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable=goog.dom.isFocusable;goog.dom.DomHelper.prototype.getTextContent=goog.dom.getTextContent;goog.dom.DomHelper.prototype.getNodeTextLength=goog.dom.getNodeTextLength;goog.dom.DomHelper.prototype.getNodeTextOffset=goog.dom.getNodeTextOffset;goog.dom.DomHelper.prototype.getNodeAtOffset=goog.dom.getNodeAtOffset;goog.dom.DomHelper.prototype.isNodeList=goog.dom.isNodeList;goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass=goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass=goog.dom.getAncestorByClass;goog.dom.DomHelper.prototype.getAncestor=goog.dom.getAncestor;goog.dom.DomHelper.prototype.getCanvasContext2D=goog.dom.getCanvasContext2D;goog.async.nextTick=function(a,b,c){var d=a;b&&(d=goog.bind(a,b));d=goog.async.nextTick.wrapCallback_(d);"function"===typeof goog.global.setImmediate&&(c||goog.async.nextTick.useSetImmediate_())?goog.global.setImmediate(d):(goog.async.nextTick.setImmediate_||(goog.async.nextTick.setImmediate_=goog.async.nextTick.getSetImmediateEmulator_()),goog.async.nextTick.setImmediate_(d))};
goog.async.nextTick.useSetImmediate_=function(){return goog.global.Window&&goog.global.Window.prototype&&!goog.labs.userAgent.browser.isEdge()&&goog.global.Window.prototype.setImmediate==goog.global.setImmediate?!1:!0};
goog.async.nextTick.getSetImmediateEmulator_=function(){var a=goog.global.MessageChannel;"undefined"===typeof a&&"undefined"!==typeof window&&window.postMessage&&window.addEventListener&&!goog.labs.userAgent.engine.isPresto()&&(a=function(){var e=goog.dom.createElement(goog.dom.TagName.IFRAME);e.style.display="none";document.documentElement.appendChild(e);var f=e.contentWindow;e=f.document;e.open();e.close();var g="callImmediate"+Math.random(),h="file:"==f.location.protocol?"*":f.location.protocol+
"//"+f.location.host;e=goog.bind(function(k){if(("*"==h||k.origin==h)&&k.data==g)this.port1.onmessage()},this);f.addEventListener("message",e,!1);this.port1={};this.port2={postMessage:function(){f.postMessage(g,h)}}});if("undefined"!==typeof a&&!goog.labs.userAgent.browser.isIE()){var b=new a,c={},d=c;b.port1.onmessage=function(){if(void 0!==c.next){c=c.next;var e=c.cb;c.cb=null;e()}};return function(e){d.next={cb:e};d=d.next;b.port2.postMessage(0)}}return function(e){goog.global.setTimeout(e,0)}};
goog.async.nextTick.wrapCallback_=goog.functions.identity;goog.debug.entryPointRegistry.register(function(a){goog.async.nextTick.wrapCallback_=a});function module$contents$goog$async$throwException_throwException(a){goog.global.setTimeout(()=>{throw a;},0)}goog.async.throwException=module$contents$goog$async$throwException_throwException;goog.ASSUME_NATIVE_PROMISE=!1;goog.async.run=function(a,b){goog.async.run.schedule_||goog.async.run.initializeRunner_();goog.async.run.workQueueScheduled_||(goog.async.run.schedule_(),goog.async.run.workQueueScheduled_=!0);goog.async.run.workQueue_.add(a,b)};
goog.async.run.initializeRunner_=function(){if(goog.ASSUME_NATIVE_PROMISE||goog.global.Promise&&goog.global.Promise.resolve){var a=goog.global.Promise.resolve(void 0);goog.async.run.schedule_=function(){a.then(goog.async.run.processWorkQueue)}}else goog.async.run.schedule_=function(){goog.async.nextTick(goog.async.run.processWorkQueue)}};goog.async.run.forceNextTick=function(a){goog.async.run.schedule_=function(){goog.async.nextTick(goog.async.run.processWorkQueue);a&&a(goog.async.run.processWorkQueue)}};
goog.async.run.workQueueScheduled_=!1;goog.async.run.workQueue_=new module$contents$goog$async$WorkQueue_WorkQueue;goog.DEBUG&&(goog.async.run.resetQueue=function(){goog.async.run.workQueueScheduled_=!1;goog.async.run.workQueue_=new module$contents$goog$async$WorkQueue_WorkQueue});
goog.async.run.processWorkQueue=function(){for(var a;a=goog.async.run.workQueue_.remove();){try{a.fn.call(a.scope)}catch(b){module$contents$goog$async$throwException_throwException(b)}goog.async.run.workQueue_.returnUnused(a)}goog.async.run.workQueueScheduled_=!1};goog.promise={};goog.promise.Resolver=function(){};goog.Promise=function(a,b){this.state_=goog.Promise.State_.PENDING;this.result_=void 0;this.callbackEntriesTail_=this.callbackEntries_=this.parent_=null;this.executing_=!1;0<goog.Promise.UNHANDLED_REJECTION_DELAY?this.unhandledRejectionId_=0:0==goog.Promise.UNHANDLED_REJECTION_DELAY&&(this.hadUnhandledRejection_=!1);goog.Promise.LONG_STACK_TRACES&&(this.stack_=[],this.addStackTrace_(Error("created")),this.currentStep_=0);if(a!=goog.nullFunction)try{var c=this;a.call(b,function(d){c.resolve_(goog.Promise.State_.FULFILLED,
d)},function(d){if(goog.DEBUG&&!(d instanceof goog.Promise.CancellationError))try{if(d instanceof Error)throw d;throw Error("Promise rejected.");}catch(e){}c.resolve_(goog.Promise.State_.REJECTED,d)})}catch(d){this.resolve_(goog.Promise.State_.REJECTED,d)}};goog.Promise.LONG_STACK_TRACES=!1;goog.Promise.UNHANDLED_REJECTION_DELAY=0;goog.Promise.State_={PENDING:0,BLOCKED:1,FULFILLED:2,REJECTED:3};
goog.Promise.CallbackEntry_=function(){this.next=this.context=this.onRejected=this.onFulfilled=this.child=null;this.always=!1};goog.Promise.CallbackEntry_.prototype.reset=function(){this.context=this.onRejected=this.onFulfilled=this.child=null;this.always=!1};goog.Promise.DEFAULT_MAX_UNUSED=100;goog.Promise.freelist_=new goog.async.FreeList(function(){return new goog.Promise.CallbackEntry_},function(a){a.reset()},goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_=function(a,b,c){var d=goog.Promise.freelist_.get();d.onFulfilled=a;d.onRejected=b;d.context=c;return d};goog.Promise.returnEntry_=function(a){goog.Promise.freelist_.put(a)};goog.Promise.resolve=function(a){if(a instanceof goog.Promise)return a;var b=new goog.Promise(goog.nullFunction);b.resolve_(goog.Promise.State_.FULFILLED,a);return b};goog.Promise.reject=function(a){return new goog.Promise(function(b,c){c(a)})};
goog.Promise.resolveThen_=function(a,b,c){goog.Promise.maybeThen_(a,b,c,null)||goog.async.run(goog.partial(b,a))};goog.Promise.race=function(a){return new goog.Promise(function(b,c){a.length||b(void 0);for(var d=0,e;d<a.length;d++)e=a[d],goog.Promise.resolveThen_(e,b,c)})};
goog.Promise.all=function(a){return new goog.Promise(function(b,c){var d=a.length,e=[];if(d)for(var f=function(l,m){d--;e[l]=m;0==d&&b(e)},g=function(l){c(l)},h=0,k;h<a.length;h++)k=a[h],goog.Promise.resolveThen_(k,goog.partial(f,h),g);else b(e)})};
goog.Promise.allSettled=function(a){return new goog.Promise(function(b,c){var d=a.length,e=[];if(d){c=function(h,k,l){d--;e[h]=k?{fulfilled:!0,value:l}:{fulfilled:!1,reason:l};0==d&&b(e)};for(var f=0,g;f<a.length;f++)g=a[f],goog.Promise.resolveThen_(g,goog.partial(c,f,!0),goog.partial(c,f,!1))}else b(e)})};
goog.Promise.firstFulfilled=function(a){return new goog.Promise(function(b,c){var d=a.length,e=[];if(d)for(var f=function(l){b(l)},g=function(l,m){d--;e[l]=m;0==d&&c(e)},h=0,k;h<a.length;h++)k=a[h],goog.Promise.resolveThen_(k,f,goog.partial(g,h));else b(void 0)})};goog.Promise.withResolver=function(){var a,b,c=new goog.Promise(function(d,e){a=d;b=e});return new goog.Promise.Resolver_(c,a,b)};
goog.Promise.prototype.then=function(a,b,c){null!=a&&goog.asserts.assertFunction(a,"opt_onFulfilled should be a function.");null!=b&&goog.asserts.assertFunction(b,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("then"));return this.addChildPromise_("function"===typeof a?a:null,"function"===typeof b?b:null,c)};goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid=function(a,b,c){null!=a&&goog.asserts.assertFunction(a,"opt_onFulfilled should be a function.");null!=b&&goog.asserts.assertFunction(b,"opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("then"));this.addCallbackEntry_(goog.Promise.getCallbackEntry_(a||goog.nullFunction,b||null,c))};
goog.Promise.prototype.thenAlways=function(a,b){goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("thenAlways"));a=goog.Promise.getCallbackEntry_(a,a,b);a.always=!0;this.addCallbackEntry_(a);return this};goog.Promise.prototype.thenCatch=function(a,b){goog.Promise.LONG_STACK_TRACES&&this.addStackTrace_(Error("thenCatch"));return this.addChildPromise_(null,a,b)};
goog.Promise.prototype.cancel=function(a){if(this.state_==goog.Promise.State_.PENDING){var b=new goog.Promise.CancellationError(a);goog.async.run(function(){this.cancelInternal_(b)},this)}};goog.Promise.prototype.cancelInternal_=function(a){this.state_==goog.Promise.State_.PENDING&&(this.parent_?(this.parent_.cancelChild_(this,a),this.parent_=null):this.resolve_(goog.Promise.State_.REJECTED,a))};
goog.Promise.prototype.cancelChild_=function(a,b){if(this.callbackEntries_){for(var c=0,d=null,e=null,f=this.callbackEntries_;f&&(f.always||(c++,f.child==a&&(d=f),!(d&&1<c)));f=f.next)d||(e=f);d&&(this.state_==goog.Promise.State_.PENDING&&1==c?this.cancelInternal_(b):(e?this.removeEntryAfter_(e):this.popEntry_(),this.executeCallback_(d,goog.Promise.State_.REJECTED,b)))}};
goog.Promise.prototype.addCallbackEntry_=function(a){this.hasEntry_()||this.state_!=goog.Promise.State_.FULFILLED&&this.state_!=goog.Promise.State_.REJECTED||this.scheduleCallbacks_();this.queueEntry_(a)};
goog.Promise.prototype.addChildPromise_=function(a,b,c){var d=goog.Promise.getCallbackEntry_(null,null,null);d.child=new goog.Promise(function(e,f){d.onFulfilled=a?function(g){try{var h=a.call(c,g);e(h)}catch(k){f(k)}}:e;d.onRejected=b?function(g){try{var h=b.call(c,g);void 0===h&&g instanceof goog.Promise.CancellationError?f(g):e(h)}catch(k){f(k)}}:f});d.child.parent_=this;this.addCallbackEntry_(d);return d.child};
goog.Promise.prototype.unblockAndFulfill_=function(a){goog.asserts.assert(this.state_==goog.Promise.State_.BLOCKED);this.state_=goog.Promise.State_.PENDING;this.resolve_(goog.Promise.State_.FULFILLED,a)};goog.Promise.prototype.unblockAndReject_=function(a){goog.asserts.assert(this.state_==goog.Promise.State_.BLOCKED);this.state_=goog.Promise.State_.PENDING;this.resolve_(goog.Promise.State_.REJECTED,a)};
goog.Promise.prototype.resolve_=function(a,b){this.state_==goog.Promise.State_.PENDING&&(this===b&&(a=goog.Promise.State_.REJECTED,b=new TypeError("Promise cannot resolve to itself")),this.state_=goog.Promise.State_.BLOCKED,goog.Promise.maybeThen_(b,this.unblockAndFulfill_,this.unblockAndReject_,this)||(this.result_=b,this.state_=a,this.parent_=null,this.scheduleCallbacks_(),a!=goog.Promise.State_.REJECTED||b instanceof goog.Promise.CancellationError||goog.Promise.addUnhandledRejection_(this,b)))};
goog.Promise.maybeThen_=function(a,b,c,d){if(a instanceof goog.Promise)return a.thenVoid(b,c,d),!0;if(goog.Thenable.isImplementedBy(a))return a.then(b,c,d),!0;if(goog.isObject(a))try{var e=a.then;if("function"===typeof e)return goog.Promise.tryThen_(a,e,b,c,d),!0}catch(f){return c.call(d,f),!0}return!1};goog.Promise.tryThen_=function(a,b,c,d,e){var f=!1,g=function(k){f||(f=!0,c.call(e,k))},h=function(k){f||(f=!0,d.call(e,k))};try{b.call(a,g,h)}catch(k){h(k)}};
goog.Promise.prototype.scheduleCallbacks_=function(){this.executing_||(this.executing_=!0,goog.async.run(this.executeCallbacks_,this))};goog.Promise.prototype.hasEntry_=function(){return!!this.callbackEntries_};goog.Promise.prototype.queueEntry_=function(a){goog.asserts.assert(null!=a.onFulfilled);this.callbackEntriesTail_?this.callbackEntriesTail_.next=a:this.callbackEntries_=a;this.callbackEntriesTail_=a};
goog.Promise.prototype.popEntry_=function(){var a=null;this.callbackEntries_&&(a=this.callbackEntries_,this.callbackEntries_=a.next,a.next=null);this.callbackEntries_||(this.callbackEntriesTail_=null);null!=a&&goog.asserts.assert(null!=a.onFulfilled);return a};goog.Promise.prototype.removeEntryAfter_=function(a){goog.asserts.assert(this.callbackEntries_);goog.asserts.assert(null!=a);a.next==this.callbackEntriesTail_&&(this.callbackEntriesTail_=a);a.next=a.next.next};
goog.Promise.prototype.executeCallbacks_=function(){for(var a;a=this.popEntry_();)goog.Promise.LONG_STACK_TRACES&&this.currentStep_++,this.executeCallback_(a,this.state_,this.result_);this.executing_=!1};
goog.Promise.prototype.executeCallback_=function(a,b,c){b==goog.Promise.State_.REJECTED&&a.onRejected&&!a.always&&this.removeUnhandledRejection_();if(a.child)a.child.parent_=null,goog.Promise.invokeCallback_(a,b,c);else try{a.always?a.onFulfilled.call(a.context):goog.Promise.invokeCallback_(a,b,c)}catch(d){goog.Promise.handleRejection_.call(null,d)}goog.Promise.returnEntry_(a)};
goog.Promise.invokeCallback_=function(a,b,c){b==goog.Promise.State_.FULFILLED?a.onFulfilled.call(a.context,c):a.onRejected&&a.onRejected.call(a.context,c)};goog.Promise.prototype.addStackTrace_=function(a){if(goog.Promise.LONG_STACK_TRACES&&"string"===typeof a.stack){var b=a.stack.split("\n",4)[3];a=a.message;a+=Array(11-a.length).join(" ");this.stack_.push(a+b)}};
goog.Promise.prototype.appendLongStack_=function(a){if(goog.Promise.LONG_STACK_TRACES&&a&&"string"===typeof a.stack&&this.stack_.length){for(var b=["Promise trace:"],c=this;c;c=c.parent_){for(var d=this.currentStep_;0<=d;d--)b.push(c.stack_[d]);b.push("Value: ["+(c.state_==goog.Promise.State_.REJECTED?"REJECTED":"FULFILLED")+"] <"+String(c.result_)+">")}a.stack+="\n\n"+b.join("\n")}};
goog.Promise.prototype.removeUnhandledRejection_=function(){if(0<goog.Promise.UNHANDLED_REJECTION_DELAY)for(var a=this;a&&a.unhandledRejectionId_;a=a.parent_)goog.global.clearTimeout(a.unhandledRejectionId_),a.unhandledRejectionId_=0;else if(0==goog.Promise.UNHANDLED_REJECTION_DELAY)for(a=this;a&&a.hadUnhandledRejection_;a=a.parent_)a.hadUnhandledRejection_=!1};
goog.Promise.addUnhandledRejection_=function(a,b){0<goog.Promise.UNHANDLED_REJECTION_DELAY?a.unhandledRejectionId_=goog.global.setTimeout(function(){a.appendLongStack_(b);goog.Promise.handleRejection_.call(null,b)},goog.Promise.UNHANDLED_REJECTION_DELAY):0==goog.Promise.UNHANDLED_REJECTION_DELAY&&(a.hadUnhandledRejection_=!0,goog.async.run(function(){a.hadUnhandledRejection_&&(a.appendLongStack_(b),goog.Promise.handleRejection_.call(null,b))}))};goog.Promise.handleRejection_=module$contents$goog$async$throwException_throwException;
goog.Promise.setUnhandledRejectionHandler=function(a){goog.Promise.handleRejection_=a};goog.Promise.CancellationError=function(a){module$contents$goog$debug$Error_DebugError.call(this,a);this.reportErrorToServer=!1};goog.inherits(goog.Promise.CancellationError,module$contents$goog$debug$Error_DebugError);goog.Promise.CancellationError.prototype.name="cancel";goog.Promise.Resolver_=function(a,b,c){this.promise=a;this.resolve=b;this.reject=c};goog.setTestOnly("goog.testing.PropertyReplacer");goog.testing={};goog.testing.PropertyReplacer=function(){this.original_=[]};goog.testing.PropertyReplacer.NO_SUCH_KEY_={};goog.testing.PropertyReplacer.hasKey_=function(a,b){return b in a?Object.prototype.hasOwnProperty.call(a,b)?!0:a.constructor!=Object||goog.userAgent.OPERA&&"[object Object]"!=Object.prototype.toString.call(a)?!(b in a.constructor.prototype):!1:!1};
goog.testing.PropertyReplacer.deleteKey_=function(a,b){try{if(delete a[b],!goog.testing.PropertyReplacer.hasKey_(a,b))return}catch(c){}a[b]=void 0;"undefined"==a[b]&&(a[b]="");if(a[b])throw Error('Cannot delete non configurable property "'+b+'" in '+a);};goog.testing.PropertyReplacer.restoreOriginal_=function(a){a.value==goog.testing.PropertyReplacer.NO_SUCH_KEY_?goog.testing.PropertyReplacer.deleteKey_(a.object,a.key):a.object[a.key]=a.value};
goog.testing.PropertyReplacer.prototype.set=function(a,b,c){goog.asserts.assert(a);var d=goog.testing.PropertyReplacer.hasKey_(a,b)?a[b]:goog.testing.PropertyReplacer.NO_SUCH_KEY_;this.original_.push({object:a,key:b,value:d});a[b]=c;if(a[b]!=c&&c+"px"!=a[b])throw Error('Cannot overwrite read-only property "'+b+'" in '+a);};
goog.testing.PropertyReplacer.prototype.replace=function(a,b,c,d){if(!(b in a))throw Error('Cannot replace missing property "'+b+'" in '+a);if(!d||null!=a[b]&&null!=c){d=goog.typeOf(a[b]);var e=goog.typeOf(c);if(d!=e)throw Error('Cannot replace property "'+b+'" in '+a+" with a value of different type (expected "+d+", found "+e+")");}this.set(a,b,c)};
goog.testing.PropertyReplacer.prototype.setPath=function(a,b){a=a.split(".");for(var c=goog.global,d=0;d<a.length-1;d++){var e=a[d];if("prototype"==e&&!c[e])throw Error("Cannot set the prototype of "+a.slice(0,d).join("."));goog.isObject(c[e])||"function"===typeof c[e]||this.set(c,e,{});c=c[e]}this.set(c,a[a.length-1],b)};
goog.testing.PropertyReplacer.prototype.remove=function(a,b){a&&goog.testing.PropertyReplacer.hasKey_(a,b)&&(this.original_.push({object:a,key:b,value:a[b]}),goog.testing.PropertyReplacer.deleteKey_(a,b))};
goog.testing.PropertyReplacer.prototype.restore=function(a,b){for(var c=this.original_.length-1;0<=c;c--){var d=this.original_[c];if(d.object===a&&d.key==b){goog.testing.PropertyReplacer.restoreOriginal_(d);this.original_.splice(c,1);return}}throw Error('Cannot restore unmodified property "'+b+'" of '+a);};
goog.testing.PropertyReplacer.prototype.reset=function(){for(var a=this.original_.length-1;0<=a;a--)goog.testing.PropertyReplacer.restoreOriginal_(this.original_[a]),delete this.original_[a];this.original_.length=0};goog.debug.errorcontext={};goog.debug.errorcontext.addErrorContext=function(a,b,c){a[goog.debug.errorcontext.CONTEXT_KEY_]||(a[goog.debug.errorcontext.CONTEXT_KEY_]={});a[goog.debug.errorcontext.CONTEXT_KEY_][b]=c};goog.debug.errorcontext.getErrorContext=function(a){return a[goog.debug.errorcontext.CONTEXT_KEY_]||{}};goog.debug.errorcontext.CONTEXT_KEY_="__closure__error__context__984382";goog.debug.LOGGING_ENABLED=goog.DEBUG;goog.debug.FORCE_SLOPPY_STACKS=!1;goog.debug.CHECK_FOR_THROWN_EVENT=!1;goog.debug.catchErrors=function(a,b,c){c=c||goog.global;var d=c.onerror,e=!!b;goog.userAgent.WEBKIT&&!goog.userAgent.isVersionOrHigher("535.3")&&(e=!e);c.onerror=function(f,g,h,k,l){d&&d(f,g,h,k,l);a({message:f,fileName:g,line:h,lineNumber:h,col:k,error:l});return e}};
goog.debug.expose=function(a,b){if("undefined"==typeof a)return"undefined";if(null==a)return"NULL";var c=[],d;for(d in a)if(b||"function"!==typeof a[d]){var e=d+" = ";try{e+=a[d]}catch(f){e+="*** "+f+" ***"}c.push(e)}return c.join("\n")};
goog.debug.deepExpose=function(a,b){var c=[],d=[],e={},f=function(g,h){var k=h+"  ";try{if(void 0===g)c.push("undefined");else if(null===g)c.push("NULL");else if("string"===typeof g)c.push('"'+g.replace(/\n/g,"\n"+h)+'"');else if("function"===typeof g)c.push(String(g).replace(/\n/g,"\n"+h));else if(goog.isObject(g)){goog.hasUid(g)||d.push(g);var l=goog.getUid(g);if(e[l])c.push("*** reference loop detected (id="+l+") ***");else{e[l]=!0;c.push("{");for(var m in g)if(b||"function"!==typeof g[m])c.push("\n"),
c.push(k),c.push(m+" = "),f(g[m],k);c.push("\n"+h+"}");delete e[l]}}else c.push(g)}catch(p){c.push("*** "+p+" ***")}};f(a,"");for(a=0;a<d.length;a++)goog.removeUid(d[a]);return c.join("")};goog.debug.exposeArray=function(a){for(var b=[],c=0;c<a.length;c++)Array.isArray(a[c])?b.push(goog.debug.exposeArray(a[c])):b.push(a[c]);return"[ "+b.join(", ")+" ]"};
goog.debug.normalizeErrorObject=function(a){var b=goog.getObjectByName("window.location.href");null==a&&(a='Unknown Error of type "null/undefined"');if("string"===typeof a)return{message:a,name:"Unknown error",lineNumber:"Not available",fileName:b,stack:"Not available"};var c=!1;try{var d=a.lineNumber||a.line||"Not available"}catch(g){d="Not available",c=!0}try{var e=a.fileName||a.filename||a.sourceURL||goog.global.$googDebugFname||b}catch(g){e="Not available",c=!0}b=goog.debug.serializeErrorStack_(a);
if(!(!c&&a.lineNumber&&a.fileName&&a.stack&&a.message&&a.name)){c=a.message;if(null==c){if(a.constructor&&a.constructor instanceof Function){var f=a.constructor.name?a.constructor.name:goog.debug.getFunctionName(a.constructor);c='Unknown Error of type "'+f+'"';if(goog.debug.CHECK_FOR_THROWN_EVENT&&"Event"==f)try{c=c+' with Event.type "'+(a.type||"")+'"'}catch(g){}}else c="Unknown Error of unknown type";"function"===typeof a.toString&&Object.prototype.toString!==a.toString&&(c+=": "+a.toString())}return{message:c,
name:a.name||"UnknownError",lineNumber:d,fileName:e,stack:b||"Not available"}}a.stack=b;return a};goog.debug.serializeErrorStack_=function(a,b){b||(b={});b[goog.debug.serializeErrorAsKey_(a)]=!0;var c=a.stack||"";(a=a.cause)&&!b[goog.debug.serializeErrorAsKey_(a)]&&(c+="\nCaused by: ",a.stack&&0==a.stack.indexOf(a.toString())||(c+="string"===typeof a?a:a.message+"\n"),c+=goog.debug.serializeErrorStack_(a,b));return c};
goog.debug.serializeErrorAsKey_=function(a){var b="";"function"===typeof a.toString&&(b=""+a);return b+a.stack};goog.debug.enhanceError=function(a,b){a instanceof Error||(a=Error(a),Error.captureStackTrace&&Error.captureStackTrace(a,goog.debug.enhanceError));a.stack||(a.stack=goog.debug.getStacktrace(goog.debug.enhanceError));if(b){for(var c=0;a["message"+c];)++c;a["message"+c]=String(b)}return a};
goog.debug.enhanceErrorWithContext=function(a,b){a=goog.debug.enhanceError(a);if(b)for(var c in b)goog.debug.errorcontext.addErrorContext(a,c,b[c]);return a};
goog.debug.getStacktraceSimple=function(a){if(!goog.debug.FORCE_SLOPPY_STACKS){var b=goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);if(b)return b}b=[];for(var c=arguments.callee.caller,d=0;c&&(!a||d<a);){b.push(goog.debug.getFunctionName(c));b.push("()\n");try{c=c.caller}catch(e){b.push("[exception trying to get caller]\n");break}d++;if(d>=goog.debug.MAX_STACK_DEPTH){b.push("[...long stack...]");break}}a&&d>=a?b.push("[...reached max depth limit...]"):b.push("[end]");return b.join("")};
goog.debug.MAX_STACK_DEPTH=50;goog.debug.getNativeStackTrace_=function(a){var b=Error();if(Error.captureStackTrace)return Error.captureStackTrace(b,a),String(b.stack);try{throw b;}catch(c){b=c}return(a=b.stack)?String(a):null};goog.debug.getStacktrace=function(a){var b;goog.debug.FORCE_SLOPPY_STACKS||(b=goog.debug.getNativeStackTrace_(a||goog.debug.getStacktrace));b||(b=goog.debug.getStacktraceHelper_(a||arguments.callee.caller,[]));return b};
goog.debug.getStacktraceHelper_=function(a,b){var c=[];if(module$contents$goog$array_contains(b,a))c.push("[...circular reference...]");else if(a&&b.length<goog.debug.MAX_STACK_DEPTH){c.push(goog.debug.getFunctionName(a)+"(");for(var d=a.arguments,e=0;d&&e<d.length;e++){0<e&&c.push(", ");var f=d[e];switch(typeof f){case "object":f=f?"object":"null";break;case "string":break;case "number":f=String(f);break;case "boolean":f=f?"true":"false";break;case "function":f=(f=goog.debug.getFunctionName(f))?
f:"[fn]";break;default:f=typeof f}40<f.length&&(f=f.substr(0,40)+"...");c.push(f)}b.push(a);c.push(")\n");try{c.push(goog.debug.getStacktraceHelper_(a.caller,b))}catch(g){c.push("[exception trying to get caller]\n")}}else a?c.push("[...long stack...]"):c.push("[end]");return c.join("")};
goog.debug.getFunctionName=function(a){if(goog.debug.fnNameCache_[a])return goog.debug.fnNameCache_[a];a=String(a);if(!goog.debug.fnNameCache_[a]){var b=/function\s+([^\(]+)/m.exec(a);goog.debug.fnNameCache_[a]=b?b[1]:"[Anonymous]"}return goog.debug.fnNameCache_[a]};goog.debug.makeWhitespaceVisible=function(a){return a.replace(/ /g,"[_]").replace(/\f/g,"[f]").replace(/\n/g,"[n]\n").replace(/\r/g,"[r]").replace(/\t/g,"[t]")};
goog.debug.runtimeType=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};goog.debug.fnNameCache_={};goog.debug.freezeInternal_=goog.DEBUG&&Object.freeze||function(a){return a};goog.debug.freeze=function(a){return goog.debug.freezeInternal_(a)};goog.events={};const module$contents$goog$events$BrowserFeature_purify=a=>({valueOf:a}).valueOf();
goog.events.BrowserFeature={HAS_W3C_BUTTON:!0,HAS_W3C_EVENT_SUPPORT:!0,SET_KEY_CODE_TO_PREVENT_DEFAULT:!1,HAS_NAVIGATOR_ONLINE_PROPERTY:!0,HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO&&goog.userAgent.isVersionOrHigher("1.9b")||goog.userAgent.IE&&goog.userAgent.isVersionOrHigher("8")||goog.userAgent.OPERA&&goog.userAgent.isVersionOrHigher("9.5")||goog.userAgent.WEBKIT&&goog.userAgent.isVersionOrHigher("528"),HTML5_NETWORK_EVENTS_FIRE_ON_BODY:!1,TOUCH_ENABLED:"ontouchstart"in goog.global||!!(goog.global.document&&
document.documentElement&&"ontouchstart"in document.documentElement)||!(!goog.global.navigator||!goog.global.navigator.maxTouchPoints&&!goog.global.navigator.msMaxTouchPoints),POINTER_EVENTS:"PointerEvent"in goog.global,MSPOINTER_EVENTS:"MSPointerEvent"in goog.global&&!(!goog.global.navigator||!goog.global.navigator.msPointerEnabled),PASSIVE_EVENTS:module$contents$goog$events$BrowserFeature_purify(function(){if(!goog.global.addEventListener||!Object.defineProperty)return!1;var a=!1,b=Object.defineProperty({},
"passive",{get:function(){a=!0}});try{goog.global.addEventListener("test",goog.nullFunction,b),goog.global.removeEventListener("test",goog.nullFunction,b)}catch(c){}return a})};goog.events.EventId=function(a){this.id=a};goog.events.EventId.prototype.toString=function(){return this.id};goog.events.Event=function(a,b){this.type=a instanceof goog.events.EventId?String(a):a;this.currentTarget=this.target=b;this.defaultPrevented=this.propagationStopped_=!1};goog.events.Event.prototype.hasPropagationStopped=function(){return this.propagationStopped_};goog.events.Event.prototype.stopPropagation=function(){this.propagationStopped_=!0};goog.events.Event.prototype.preventDefault=function(){this.defaultPrevented=!0};goog.events.Event.stopPropagation=function(a){a.stopPropagation()};
goog.events.Event.preventDefault=function(a){a.preventDefault()};goog.events.getVendorPrefixedName_=function(a){return goog.userAgent.WEBKIT?"webkit"+a:goog.userAgent.OPERA?"o"+a.toLowerCase():a.toLowerCase()};
goog.events.EventType={CLICK:"click",RIGHTCLICK:"rightclick",DBLCLICK:"dblclick",AUXCLICK:"auxclick",MOUSEDOWN:"mousedown",MOUSEUP:"mouseup",MOUSEOVER:"mouseover",MOUSEOUT:"mouseout",MOUSEMOVE:"mousemove",MOUSEENTER:"mouseenter",MOUSELEAVE:"mouseleave",MOUSECANCEL:"mousecancel",SELECTIONCHANGE:"selectionchange",SELECTSTART:"selectstart",WHEEL:"wheel",KEYPRESS:"keypress",KEYDOWN:"keydown",KEYUP:"keyup",BLUR:"blur",FOCUS:"focus",DEACTIVATE:"deactivate",FOCUSIN:"focusin",FOCUSOUT:"focusout",CHANGE:"change",
RESET:"reset",SELECT:"select",SUBMIT:"submit",INPUT:"input",PROPERTYCHANGE:"propertychange",DRAGSTART:"dragstart",DRAG:"drag",DRAGENTER:"dragenter",DRAGOVER:"dragover",DRAGLEAVE:"dragleave",DROP:"drop",DRAGEND:"dragend",TOUCHSTART:"touchstart",TOUCHMOVE:"touchmove",TOUCHEND:"touchend",TOUCHCANCEL:"touchcancel",BEFOREUNLOAD:"beforeunload",CONSOLEMESSAGE:"consolemessage",CONTEXTMENU:"contextmenu",DEVICECHANGE:"devicechange",DEVICEMOTION:"devicemotion",DEVICEORIENTATION:"deviceorientation",DOMCONTENTLOADED:"DOMContentLoaded",
ERROR:"error",HELP:"help",LOAD:"load",LOSECAPTURE:"losecapture",ORIENTATIONCHANGE:"orientationchange",READYSTATECHANGE:"readystatechange",RESIZE:"resize",SCROLL:"scroll",UNLOAD:"unload",CANPLAY:"canplay",CANPLAYTHROUGH:"canplaythrough",DURATIONCHANGE:"durationchange",EMPTIED:"emptied",ENDED:"ended",LOADEDDATA:"loadeddata",LOADEDMETADATA:"loadedmetadata",PAUSE:"pause",PLAY:"play",PLAYING:"playing",PROGRESS:"progress",RATECHANGE:"ratechange",SEEKED:"seeked",SEEKING:"seeking",STALLED:"stalled",SUSPEND:"suspend",
TIMEUPDATE:"timeupdate",VOLUMECHANGE:"volumechange",WAITING:"waiting",SOURCEOPEN:"sourceopen",SOURCEENDED:"sourceended",SOURCECLOSED:"sourceclosed",ABORT:"abort",UPDATE:"update",UPDATESTART:"updatestart",UPDATEEND:"updateend",HASHCHANGE:"hashchange",PAGEHIDE:"pagehide",PAGESHOW:"pageshow",POPSTATE:"popstate",COPY:"copy",PASTE:"paste",CUT:"cut",BEFORECOPY:"beforecopy",BEFORECUT:"beforecut",BEFOREPASTE:"beforepaste",ONLINE:"online",OFFLINE:"offline",MESSAGE:"message",CONNECT:"connect",INSTALL:"install",
ACTIVATE:"activate",FETCH:"fetch",FOREIGNFETCH:"foreignfetch",MESSAGEERROR:"messageerror",STATECHANGE:"statechange",UPDATEFOUND:"updatefound",CONTROLLERCHANGE:"controllerchange",ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"),ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"),ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"),TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"),POINTERDOWN:"pointerdown",POINTERUP:"pointerup",POINTERCANCEL:"pointercancel",
POINTERMOVE:"pointermove",POINTEROVER:"pointerover",POINTEROUT:"pointerout",POINTERENTER:"pointerenter",POINTERLEAVE:"pointerleave",GOTPOINTERCAPTURE:"gotpointercapture",LOSTPOINTERCAPTURE:"lostpointercapture",MSGESTURECHANGE:"MSGestureChange",MSGESTUREEND:"MSGestureEnd",MSGESTUREHOLD:"MSGestureHold",MSGESTURESTART:"MSGestureStart",MSGESTURETAP:"MSGestureTap",MSGOTPOINTERCAPTURE:"MSGotPointerCapture",MSINERTIASTART:"MSInertiaStart",MSLOSTPOINTERCAPTURE:"MSLostPointerCapture",MSPOINTERCANCEL:"MSPointerCancel",
MSPOINTERDOWN:"MSPointerDown",MSPOINTERENTER:"MSPointerEnter",MSPOINTERHOVER:"MSPointerHover",MSPOINTERLEAVE:"MSPointerLeave",MSPOINTERMOVE:"MSPointerMove",MSPOINTEROUT:"MSPointerOut",MSPOINTEROVER:"MSPointerOver",MSPOINTERUP:"MSPointerUp",TEXT:"text",TEXTINPUT:goog.userAgent.IE?"textinput":"textInput",COMPOSITIONSTART:"compositionstart",COMPOSITIONUPDATE:"compositionupdate",COMPOSITIONEND:"compositionend",BEFOREINPUT:"beforeinput",EXIT:"exit",LOADABORT:"loadabort",LOADCOMMIT:"loadcommit",LOADREDIRECT:"loadredirect",
LOADSTART:"loadstart",LOADSTOP:"loadstop",RESPONSIVE:"responsive",SIZECHANGED:"sizechanged",UNRESPONSIVE:"unresponsive",VISIBILITYCHANGE:"visibilitychange",STORAGE:"storage",DOMSUBTREEMODIFIED:"DOMSubtreeModified",DOMNODEINSERTED:"DOMNodeInserted",DOMNODEREMOVED:"DOMNodeRemoved",DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument",DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument",DOMATTRMODIFIED:"DOMAttrModified",DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified",BEFOREPRINT:"beforeprint",
AFTERPRINT:"afterprint",BEFOREINSTALLPROMPT:"beforeinstallprompt",APPINSTALLED:"appinstalled"};goog.events.getPointerFallbackEventName_=function(a,b,c){return goog.events.BrowserFeature.POINTER_EVENTS?a:goog.events.BrowserFeature.MSPOINTER_EVENTS?b:c};
goog.events.PointerFallbackEventType={POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN,goog.events.EventType.MSPOINTERDOWN,goog.events.EventType.MOUSEDOWN),POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP,goog.events.EventType.MSPOINTERUP,goog.events.EventType.MOUSEUP),POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL,goog.events.EventType.MSPOINTERCANCEL,goog.events.EventType.MOUSECANCEL),
POINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE,goog.events.EventType.MSPOINTERMOVE,goog.events.EventType.MOUSEMOVE),POINTEROVER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROVER,goog.events.EventType.MSPOINTEROVER,goog.events.EventType.MOUSEOVER),POINTEROUT:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROUT,goog.events.EventType.MSPOINTEROUT,goog.events.EventType.MOUSEOUT),POINTERENTER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERENTER,
goog.events.EventType.MSPOINTERENTER,goog.events.EventType.MOUSEENTER),POINTERLEAVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERLEAVE,goog.events.EventType.MSPOINTERLEAVE,goog.events.EventType.MOUSELEAVE)};
goog.events.PointerTouchFallbackEventType={POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN,goog.events.EventType.MSPOINTERDOWN,goog.events.EventType.TOUCHSTART),POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP,goog.events.EventType.MSPOINTERUP,goog.events.EventType.TOUCHEND),POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL,goog.events.EventType.MSPOINTERCANCEL,goog.events.EventType.TOUCHCANCEL),
POINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE,goog.events.EventType.MSPOINTERMOVE,goog.events.EventType.TOUCHMOVE)};
goog.events.PointerAsMouseEventType={MOUSEDOWN:goog.events.PointerFallbackEventType.POINTERDOWN,MOUSEUP:goog.events.PointerFallbackEventType.POINTERUP,MOUSECANCEL:goog.events.PointerFallbackEventType.POINTERCANCEL,MOUSEMOVE:goog.events.PointerFallbackEventType.POINTERMOVE,MOUSEOVER:goog.events.PointerFallbackEventType.POINTEROVER,MOUSEOUT:goog.events.PointerFallbackEventType.POINTEROUT,MOUSEENTER:goog.events.PointerFallbackEventType.POINTERENTER,MOUSELEAVE:goog.events.PointerFallbackEventType.POINTERLEAVE};
goog.events.MouseAsMouseEventType={MOUSEDOWN:goog.events.EventType.MOUSEDOWN,MOUSEUP:goog.events.EventType.MOUSEUP,MOUSECANCEL:goog.events.EventType.MOUSECANCEL,MOUSEMOVE:goog.events.EventType.MOUSEMOVE,MOUSEOVER:goog.events.EventType.MOUSEOVER,MOUSEOUT:goog.events.EventType.MOUSEOUT,MOUSEENTER:goog.events.EventType.MOUSEENTER,MOUSELEAVE:goog.events.EventType.MOUSELEAVE};
goog.events.PointerAsTouchEventType={TOUCHCANCEL:goog.events.PointerTouchFallbackEventType.POINTERCANCEL,TOUCHEND:goog.events.PointerTouchFallbackEventType.POINTERUP,TOUCHMOVE:goog.events.PointerTouchFallbackEventType.POINTERMOVE,TOUCHSTART:goog.events.PointerTouchFallbackEventType.POINTERDOWN};goog.events.USE_LAYER_XY_AS_OFFSET_XY=!1;goog.events.BrowserEvent=function(a,b){goog.events.Event.call(this,a?a.type:"");this.relatedTarget=this.currentTarget=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=this.offsetY=this.offsetX=0;this.key="";this.charCode=this.keyCode=0;this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.state=null;this.platformModifierKey=!1;this.pointerId=0;this.pointerType="";this.event_=null;a&&this.init(a,b)};
goog.inherits(goog.events.BrowserEvent,goog.events.Event);goog.events.BrowserEvent.MouseButton={LEFT:0,MIDDLE:1,RIGHT:2};goog.events.BrowserEvent.PointerType={MOUSE:"mouse",PEN:"pen",TOUCH:"touch"};goog.events.BrowserEvent.IEButtonMap=goog.debug.freeze([1,4,2]);goog.events.BrowserEvent.IE_BUTTON_MAP=goog.events.BrowserEvent.IEButtonMap;goog.events.BrowserEvent.IE_POINTER_TYPE_MAP=goog.debug.freeze({2:goog.events.BrowserEvent.PointerType.TOUCH,3:goog.events.BrowserEvent.PointerType.PEN,4:goog.events.BrowserEvent.PointerType.MOUSE});
goog.events.BrowserEvent.prototype.init=function(a,b){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.currentTarget=b;(b=a.relatedTarget)?goog.userAgent.GECKO&&(goog.reflect.canAccessProperty(b,"nodeName")||(b=null)):c==goog.events.EventType.MOUSEOVER?b=a.fromElement:c==goog.events.EventType.MOUSEOUT&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?
d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(goog.events.USE_LAYER_XY_AS_OFFSET_XY?(this.offsetX=void 0!==a.layerX?a.layerX:a.offsetX,this.offsetY=void 0!==a.layerY?a.layerY:a.offsetY):(this.offsetX=goog.userAgent.WEBKIT||void 0!==a.offsetX?a.offsetX:a.layerX,this.offsetY=goog.userAgent.WEBKIT||void 0!==a.offsetY?a.offsetY:a.layerY),this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=
a.screenY||0);this.button=a.button;this.keyCode=a.keyCode||0;this.key=a.key||"";this.charCode=a.charCode||("keypress"==c?a.keyCode:0);this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=a.metaKey;this.platformModifierKey=goog.userAgent.MAC?a.metaKey:a.ctrlKey;this.pointerId=a.pointerId||0;this.pointerType=goog.events.BrowserEvent.getPointerType_(a);this.state=a.state;this.event_=a;a.defaultPrevented&&goog.events.BrowserEvent.superClass_.preventDefault.call(this)};
goog.events.BrowserEvent.prototype.isButton=function(a){return goog.events.BrowserFeature.HAS_W3C_BUTTON?this.event_.button==a:"click"==this.type?a==goog.events.BrowserEvent.MouseButton.LEFT:!!(this.event_.button&goog.events.BrowserEvent.IE_BUTTON_MAP[a])};goog.events.BrowserEvent.prototype.isMouseActionButton=function(){return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT)&&!(goog.userAgent.MAC&&this.ctrlKey)};
goog.events.BrowserEvent.prototype.stopPropagation=function(){goog.events.BrowserEvent.superClass_.stopPropagation.call(this);this.event_.stopPropagation?this.event_.stopPropagation():this.event_.cancelBubble=!0};
goog.events.BrowserEvent.prototype.preventDefault=function(){goog.events.BrowserEvent.superClass_.preventDefault.call(this);var a=this.event_;if(a.preventDefault)a.preventDefault();else if(a.returnValue=!1,goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT)try{if(a.ctrlKey||112<=a.keyCode&&123>=a.keyCode)a.keyCode=-1}catch(b){}};goog.events.BrowserEvent.prototype.getBrowserEvent=function(){return this.event_};
goog.events.BrowserEvent.getPointerType_=function(a){return"string"===typeof a.pointerType?a.pointerType:goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[a.pointerType]||""};goog.events.Listenable=function(){};goog.events.Listenable.IMPLEMENTED_BY_PROP="closure_listenable_"+(1E6*Math.random()|0);goog.events.Listenable.addImplementation=function(a){a.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP]=!0};goog.events.Listenable.isImplementedBy=function(a){return!(!a||!a[goog.events.Listenable.IMPLEMENTED_BY_PROP])};goog.events.Listenable.prototype.listen=function(a,b,c,d){};goog.events.Listenable.prototype.listenOnce=function(a,b,c,d){};
goog.events.Listenable.prototype.unlisten=function(a,b,c,d){};goog.events.Listenable.prototype.unlistenByKey=function(a){};goog.events.Listenable.prototype.dispatchEvent=function(a){};goog.events.Listenable.prototype.removeAllListeners=function(a){};goog.events.Listenable.prototype.getParentEventTarget=function(){};goog.events.Listenable.prototype.fireListeners=function(a,b,c){};goog.events.Listenable.prototype.getListeners=function(a,b){};
goog.events.Listenable.prototype.getListener=function(a,b,c,d){};goog.events.Listenable.prototype.hasListener=function(a,b){};goog.events.ListenableKey=function(){};goog.events.ListenableKey.counter_=0;goog.events.ListenableKey.reserveKey=function(){return++goog.events.ListenableKey.counter_};goog.events.Listener=function(a,b,c,d,e,f){goog.events.Listener.ENABLE_MONITORING&&(this.creationStack=Error().stack);this.listener=a;this.proxy=b;this.src=c;this.type=d;this.capture=!!e;this.handler=f;this.key=goog.events.ListenableKey.reserveKey();this.removed=this.callOnce=!1};goog.events.Listener.ENABLE_MONITORING=!1;goog.events.Listener.prototype.markAsRemoved=function(){this.removed=!0;this.handler=this.src=this.proxy=this.listener=null};goog.events.ListenerMap=function(a){this.src=a;this.listeners={};this.typeCount_=0};goog.events.ListenerMap.prototype.getTypeCount=function(){return this.typeCount_};goog.events.ListenerMap.prototype.getListenerCount=function(){var a=0,b;for(b in this.listeners)a+=this.listeners[b].length;return a};
goog.events.ListenerMap.prototype.add=function(a,b,c,d,e){var f=a.toString();a=this.listeners[f];a||(a=this.listeners[f]=[],this.typeCount_++);var g=goog.events.ListenerMap.findListenerIndex_(a,b,d,e);-1<g?(b=a[g],c||(b.callOnce=!1)):(b=new goog.events.Listener(b,null,this.src,f,!!d,e),b.callOnce=c,a.push(b));return b};
goog.events.ListenerMap.prototype.remove=function(a,b,c,d){a=a.toString();if(!(a in this.listeners))return!1;var e=this.listeners[a];b=goog.events.ListenerMap.findListenerIndex_(e,b,c,d);return-1<b?(e[b].markAsRemoved(),module$contents$goog$array_removeAt(e,b),0==e.length&&(delete this.listeners[a],this.typeCount_--),!0):!1};
goog.events.ListenerMap.prototype.removeByKey=function(a){var b=a.type;if(!(b in this.listeners))return!1;var c=module$contents$goog$array_remove(this.listeners[b],a);c&&(a.markAsRemoved(),0==this.listeners[b].length&&(delete this.listeners[b],this.typeCount_--));return c};goog.events.ListenerMap.prototype.removeAll=function(a){a=a&&a.toString();var b=0,c;for(c in this.listeners)if(!a||c==a){for(var d=this.listeners[c],e=0;e<d.length;e++)++b,d[e].markAsRemoved();delete this.listeners[c];this.typeCount_--}return b};
goog.events.ListenerMap.prototype.getListeners=function(a,b){a=this.listeners[a.toString()];var c=[];if(a)for(var d=0;d<a.length;++d){var e=a[d];e.capture==b&&c.push(e)}return c};goog.events.ListenerMap.prototype.getListener=function(a,b,c,d){a=this.listeners[a.toString()];var e=-1;a&&(e=goog.events.ListenerMap.findListenerIndex_(a,b,c,d));return-1<e?a[e]:null};
goog.events.ListenerMap.prototype.hasListener=function(a,b){var c=void 0!==a,d=c?a.toString():"",e=void 0!==b;return goog.object.some(this.listeners,function(f,g){for(g=0;g<f.length;++g)if(!(c&&f[g].type!=d||e&&f[g].capture!=b))return!0;return!1})};goog.events.ListenerMap.findListenerIndex_=function(a,b,c,d){for(var e=0;e<a.length;++e){var f=a[e];if(!f.removed&&f.listener==b&&f.capture==!!c&&f.handler==d)return e}return-1};goog.events.LISTENER_MAP_PROP_="closure_lm_"+(1E6*Math.random()|0);goog.events.onString_="on";goog.events.onStringMap_={};goog.events.CaptureSimulationMode={OFF_AND_FAIL:0,OFF_AND_SILENT:1,ON:2};goog.events.CAPTURE_SIMULATION_MODE=2;goog.events.listenerCountEstimate_=0;
goog.events.listen=function(a,b,c,d,e){if(d&&d.once)return goog.events.listenOnce(a,b,c,d,e);if(Array.isArray(b)){for(var f=0;f<b.length;f++)goog.events.listen(a,b[f],c,d,e);return null}c=goog.events.wrapListener(c);return goog.events.Listenable.isImplementedBy(a)?(d=goog.isObject(d)?!!d.capture:!!d,a.listen(b,c,d,e)):goog.events.listen_(a,b,c,!1,d,e)};
goog.events.listen_=function(a,b,c,d,e,f){if(!b)throw Error("Invalid event type");var g=goog.isObject(e)?!!e.capture:!!e;if(g&&!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT){if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.OFF_AND_FAIL)return goog.asserts.fail("Can not register capture listener in IE8-."),null;if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.OFF_AND_SILENT)return null}var h=goog.events.getListenerMap_(a);h||(a[goog.events.LISTENER_MAP_PROP_]=
h=new goog.events.ListenerMap(a));c=h.add(b,c,d,g,f);if(c.proxy)return c;d=goog.events.getProxy();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)goog.events.BrowserFeature.PASSIVE_EVENTS||(e=g),void 0===e&&(e=!1),a.addEventListener(b.toString(),d,e);else if(a.attachEvent)a.attachEvent(goog.events.getOnString_(b.toString()),d);else if(a.addListener&&a.removeListener)goog.asserts.assert("change"===b,"MediaQueryList only has a change event"),a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");
goog.events.listenerCountEstimate_++;return c};goog.events.getProxy=function(){var a=goog.events.handleBrowserEvent_,b=goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT?function(c){return a.call(b.src,b.listener,c)}:function(c){c=a.call(b.src,b.listener,c);if(!c)return c};return b};
goog.events.listenOnce=function(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)goog.events.listenOnce(a,b[f],c,d,e);return null}c=goog.events.wrapListener(c);return goog.events.Listenable.isImplementedBy(a)?(d=goog.isObject(d)?!!d.capture:!!d,a.listenOnce(b,c,d,e)):goog.events.listen_(a,b,c,!0,d,e)};goog.events.listenWithWrapper=function(a,b,c,d,e){b.listen(a,c,d,e)};
goog.events.unlisten=function(a,b,c,d,e){if(Array.isArray(b)){for(var f=0;f<b.length;f++)goog.events.unlisten(a,b[f],c,d,e);return null}d=goog.isObject(d)?!!d.capture:!!d;c=goog.events.wrapListener(c);if(goog.events.Listenable.isImplementedBy(a))return a.unlisten(b,c,d,e);if(!a)return!1;if(a=goog.events.getListenerMap_(a))if(b=a.getListener(b,c,d,e))return goog.events.unlistenByKey(b);return!1};
goog.events.unlistenByKey=function(a){if("number"===typeof a||!a||a.removed)return!1;var b=a.src;if(goog.events.Listenable.isImplementedBy(b))return b.unlistenByKey(a);var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(goog.events.getOnString_(c),d):b.addListener&&b.removeListener&&b.removeListener(d);goog.events.listenerCountEstimate_--;(c=goog.events.getListenerMap_(b))?(c.removeByKey(a),0==c.getTypeCount()&&(c.src=null,b[goog.events.LISTENER_MAP_PROP_]=
null)):a.markAsRemoved();return!0};goog.events.unlistenWithWrapper=function(a,b,c,d,e){b.unlisten(a,c,d,e)};goog.events.removeAll=function(a,b){if(!a)return 0;if(goog.events.Listenable.isImplementedBy(a))return a.removeAllListeners(b);a=goog.events.getListenerMap_(a);if(!a)return 0;var c=0;b=b&&b.toString();for(var d in a.listeners)if(!b||d==b)for(var e=a.listeners[d].concat(),f=0;f<e.length;++f)goog.events.unlistenByKey(e[f])&&++c;return c};
goog.events.getListeners=function(a,b,c){return goog.events.Listenable.isImplementedBy(a)?a.getListeners(b,c):a?(a=goog.events.getListenerMap_(a))?a.getListeners(b,c):[]:[]};goog.events.getListener=function(a,b,c,d,e){c=goog.events.wrapListener(c);d=!!d;return goog.events.Listenable.isImplementedBy(a)?a.getListener(b,c,d,e):a?(a=goog.events.getListenerMap_(a))?a.getListener(b,c,d,e):null:null};
goog.events.hasListener=function(a,b,c){if(goog.events.Listenable.isImplementedBy(a))return a.hasListener(b,c);a=goog.events.getListenerMap_(a);return!!a&&a.hasListener(b,c)};goog.events.expose=function(a){var b=[],c;for(c in a)a[c]&&a[c].id?b.push(c+" = "+a[c]+" ("+a[c].id+")"):b.push(c+" = "+a[c]);return b.join("\n")};goog.events.getOnString_=function(a){return a in goog.events.onStringMap_?goog.events.onStringMap_[a]:goog.events.onStringMap_[a]=goog.events.onString_+a};
goog.events.fireListeners=function(a,b,c,d){return goog.events.Listenable.isImplementedBy(a)?a.fireListeners(b,c,d):goog.events.fireListeners_(a,b,c,d)};goog.events.fireListeners_=function(a,b,c,d){var e=!0;if(a=goog.events.getListenerMap_(a))if(b=a.listeners[b.toString()])for(b=b.concat(),a=0;a<b.length;a++){var f=b[a];f&&f.capture==c&&!f.removed&&(f=goog.events.fireListener(f,d),e=e&&!1!==f)}return e};
goog.events.fireListener=function(a,b){var c=a.listener,d=a.handler||a.src;a.callOnce&&goog.events.unlistenByKey(a);return c.call(d,b)};goog.events.getTotalListenerCount=function(){return goog.events.listenerCountEstimate_};goog.events.dispatchEvent=function(a,b){goog.asserts.assert(goog.events.Listenable.isImplementedBy(a),"Can not use goog.events.dispatchEvent with non-goog.events.Listenable instance.");return a.dispatchEvent(b)};
goog.events.protectBrowserEventEntryPoint=function(a){goog.events.handleBrowserEvent_=a.protectEntryPoint(goog.events.handleBrowserEvent_)};
goog.events.handleBrowserEvent_=function(a,b){if(a.removed)return!0;if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT){var c=b||goog.getObjectByName("window.event");b=new goog.events.BrowserEvent(c,this);var d=!0;if(goog.events.CAPTURE_SIMULATION_MODE==goog.events.CaptureSimulationMode.ON){if(!goog.events.isMarkedIeEvent_(c)){goog.events.markIeEvent_(c);c=[];for(var e=b.currentTarget;e;e=e.parentNode)c.push(e);a=a.type;for(e=c.length-1;!b.hasPropagationStopped()&&0<=e;e--){b.currentTarget=c[e];
var f=goog.events.fireListeners_(c[e],a,!0,b);d=d&&f}for(e=0;!b.hasPropagationStopped()&&e<c.length;e++)b.currentTarget=c[e],f=goog.events.fireListeners_(c[e],a,!1,b),d=d&&f}}else d=goog.events.fireListener(a,b);return d}return goog.events.fireListener(a,new goog.events.BrowserEvent(b,this))};goog.events.markIeEvent_=function(a){var b=!1;if(0==a.keyCode)try{a.keyCode=-1;return}catch(c){b=!0}if(b||void 0==a.returnValue)a.returnValue=!0};
goog.events.isMarkedIeEvent_=function(a){return 0>a.keyCode||void 0!=a.returnValue};goog.events.uniqueIdCounter_=0;goog.events.getUniqueId=function(a){return a+"_"+goog.events.uniqueIdCounter_++};goog.events.getListenerMap_=function(a){a=a[goog.events.LISTENER_MAP_PROP_];return a instanceof goog.events.ListenerMap?a:null};goog.events.LISTENER_WRAPPER_PROP_="__closure_events_fn_"+(1E9*Math.random()>>>0);
goog.events.wrapListener=function(a){goog.asserts.assert(a,"Listener can not be null.");if("function"===typeof a)return a;goog.asserts.assert(a.handleEvent,"An object listener must have handleEvent method.");a[goog.events.LISTENER_WRAPPER_PROP_]||(a[goog.events.LISTENER_WRAPPER_PROP_]=function(b){return a.handleEvent(b)});return a[goog.events.LISTENER_WRAPPER_PROP_]};goog.debug.entryPointRegistry.register(function(a){goog.events.handleBrowserEvent_=a(goog.events.handleBrowserEvent_)});goog.events.EventTarget=function(){goog.Disposable.call(this);this.eventTargetListeners_=new goog.events.ListenerMap(this);this.actualEventTarget_=this;this.parentEventTarget_=null};goog.inherits(goog.events.EventTarget,goog.Disposable);goog.events.Listenable.addImplementation(goog.events.EventTarget);goog.events.EventTarget.MAX_ANCESTORS_=1E3;goog.events.EventTarget.prototype.getParentEventTarget=function(){return this.parentEventTarget_};
goog.events.EventTarget.prototype.setParentEventTarget=function(a){this.parentEventTarget_=a};goog.events.EventTarget.prototype.addEventListener=function(a,b,c,d){goog.events.listen(this,a,b,c,d)};goog.events.EventTarget.prototype.removeEventListener=function(a,b,c,d){goog.events.unlisten(this,a,b,c,d)};
goog.events.EventTarget.prototype.dispatchEvent=function(a){this.assertInitialized_();var b=this.getParentEventTarget();if(b){var c=[];for(var d=1;b;b=b.getParentEventTarget())c.push(b),goog.asserts.assert(++d<goog.events.EventTarget.MAX_ANCESTORS_,"infinite loop")}return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_,a,c)};
goog.events.EventTarget.prototype.disposeInternal=function(){goog.events.EventTarget.superClass_.disposeInternal.call(this);this.removeAllListeners();this.parentEventTarget_=null};goog.events.EventTarget.prototype.listen=function(a,b,c,d){this.assertInitialized_();return this.eventTargetListeners_.add(String(a),b,!1,c,d)};goog.events.EventTarget.prototype.listenOnce=function(a,b,c,d){return this.eventTargetListeners_.add(String(a),b,!0,c,d)};
goog.events.EventTarget.prototype.unlisten=function(a,b,c,d){return this.eventTargetListeners_.remove(String(a),b,c,d)};goog.events.EventTarget.prototype.unlistenByKey=function(a){return this.eventTargetListeners_.removeByKey(a)};goog.events.EventTarget.prototype.removeAllListeners=function(a){return this.eventTargetListeners_?this.eventTargetListeners_.removeAll(a):0};
goog.events.EventTarget.prototype.fireListeners=function(a,b,c){a=this.eventTargetListeners_.listeners[String(a)];if(!a)return!0;a=a.concat();for(var d=!0,e=0;e<a.length;++e){var f=a[e];if(f&&!f.removed&&f.capture==b){var g=f.listener,h=f.handler||f.src;f.callOnce&&this.unlistenByKey(f);d=!1!==g.call(h,c)&&d}}return d&&!c.defaultPrevented};goog.events.EventTarget.prototype.getListeners=function(a,b){return this.eventTargetListeners_.getListeners(String(a),b)};
goog.events.EventTarget.prototype.getListener=function(a,b,c,d){return this.eventTargetListeners_.getListener(String(a),b,c,d)};goog.events.EventTarget.prototype.hasListener=function(a,b){return this.eventTargetListeners_.hasListener(void 0!==a?String(a):void 0,b)};goog.events.EventTarget.prototype.setTargetForTesting=function(a){this.actualEventTarget_=a};goog.events.EventTarget.prototype.assertInitialized_=function(){goog.asserts.assert(this.eventTargetListeners_,"Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?")};
goog.events.EventTarget.dispatchEventInternal_=function(a,b,c){var d=b.type||b;if("string"===typeof b)b=new goog.events.Event(b,a);else if(b instanceof goog.events.Event)b.target=b.target||a;else{var e=b;b=new goog.events.Event(d,a);goog.object.extend(b,e)}e=!0;if(c)for(var f=c.length-1;!b.hasPropagationStopped()&&0<=f;f--){var g=b.currentTarget=c[f];e=g.fireListeners(d,!0,b)&&e}b.hasPropagationStopped()||(g=b.currentTarget=a,e=g.fireListeners(d,!0,b)&&e,b.hasPropagationStopped()||(e=g.fireListeners(d,
!1,b)&&e));if(c)for(f=0;!b.hasPropagationStopped()&&f<c.length;f++)g=b.currentTarget=c[f],e=g.fireListeners(d,!1,b)&&e;return e};goog.events.KeyCodes={WIN_KEY_FF_LINUX:0,MAC_ENTER:3,BACKSPACE:8,TAB:9,NUM_CENTER:12,ENTER:13,SHIFT:16,CTRL:17,ALT:18,PAUSE:19,CAPS_LOCK:20,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,PLUS_SIGN:43,PRINT_SCREEN:44,INSERT:45,DELETE:46,ZERO:48,ONE:49,TWO:50,THREE:51,FOUR:52,FIVE:53,SIX:54,SEVEN:55,EIGHT:56,NINE:57,FF_SEMICOLON:59,FF_EQUALS:61,FF_DASH:173,FF_HASH:163,FF_JP_QUOTE:58,QUESTION_MARK:63,AT_SIGN:64,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,
K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,META:91,WIN_KEY_RIGHT:92,CONTEXT_MENU:93,NUM_ZERO:96,NUM_ONE:97,NUM_TWO:98,NUM_THREE:99,NUM_FOUR:100,NUM_FIVE:101,NUM_SIX:102,NUM_SEVEN:103,NUM_EIGHT:104,NUM_NINE:105,NUM_MULTIPLY:106,NUM_PLUS:107,NUM_MINUS:109,NUM_PERIOD:110,NUM_DIVISION:111,F1:112,F2:113,F3:114,F4:115,F5:116,F6:117,F7:118,F8:119,F9:120,F10:121,F11:122,F12:123,NUMLOCK:144,SCROLL_LOCK:145,FIRST_MEDIA_KEY:166,LAST_MEDIA_KEY:183,SEMICOLON:186,DASH:189,EQUALS:187,
COMMA:188,PERIOD:190,SLASH:191,APOSTROPHE:192,TILDE:192,SINGLE_QUOTE:222,OPEN_SQUARE_BRACKET:219,BACKSLASH:220,CLOSE_SQUARE_BRACKET:221,WIN_KEY:224,MAC_FF_META:224,MAC_WK_CMD_LEFT:91,MAC_WK_CMD_RIGHT:93,WIN_IME:229,VK_NONAME:252,PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent=function(a){if(a.altKey&&!a.ctrlKey||a.metaKey||a.keyCode>=goog.events.KeyCodes.F1&&a.keyCode<=goog.events.KeyCodes.F12)return!1;if(goog.events.KeyCodes.isCharacterKey(a.keyCode))return!0;switch(a.keyCode){case goog.events.KeyCodes.ALT:case goog.events.KeyCodes.CAPS_LOCK:case goog.events.KeyCodes.CONTEXT_MENU:case goog.events.KeyCodes.CTRL:case goog.events.KeyCodes.DOWN:case goog.events.KeyCodes.END:case goog.events.KeyCodes.ESC:case goog.events.KeyCodes.HOME:case goog.events.KeyCodes.INSERT:case goog.events.KeyCodes.LEFT:case goog.events.KeyCodes.MAC_FF_META:case goog.events.KeyCodes.META:case goog.events.KeyCodes.NUMLOCK:case goog.events.KeyCodes.NUM_CENTER:case goog.events.KeyCodes.PAGE_DOWN:case goog.events.KeyCodes.PAGE_UP:case goog.events.KeyCodes.PAUSE:case goog.events.KeyCodes.PHANTOM:case goog.events.KeyCodes.PRINT_SCREEN:case goog.events.KeyCodes.RIGHT:case goog.events.KeyCodes.SCROLL_LOCK:case goog.events.KeyCodes.SHIFT:case goog.events.KeyCodes.UP:case goog.events.KeyCodes.VK_NONAME:case goog.events.KeyCodes.WIN_KEY:case goog.events.KeyCodes.WIN_KEY_RIGHT:return!1;case goog.events.KeyCodes.WIN_KEY_FF_LINUX:return!goog.userAgent.GECKO;
default:return a.keyCode<goog.events.KeyCodes.FIRST_MEDIA_KEY||a.keyCode>goog.events.KeyCodes.LAST_MEDIA_KEY}};
goog.events.KeyCodes.firesKeyPressEvent=function(a,b,c,d,e,f){if(goog.userAgent.WEBKIT&&!goog.userAgent.isVersionOrHigher("525"))return!0;if(goog.userAgent.MAC&&e)return goog.events.KeyCodes.isCharacterKey(a);if(e&&!d)return!1;if(!goog.userAgent.GECKO){"number"===typeof b&&(b=goog.events.KeyCodes.normalizeKeyCode(b));var g=b==goog.events.KeyCodes.CTRL||b==goog.events.KeyCodes.ALT||goog.userAgent.MAC&&b==goog.events.KeyCodes.META,h=b==goog.events.KeyCodes.SHIFT&&(d||f);if((!c||goog.userAgent.MAC)&&
g||goog.userAgent.MAC&&h)return!1}if((goog.userAgent.WEBKIT||goog.userAgent.EDGE)&&d&&c)switch(a){case goog.events.KeyCodes.BACKSLASH:case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:case goog.events.KeyCodes.TILDE:case goog.events.KeyCodes.SEMICOLON:case goog.events.KeyCodes.DASH:case goog.events.KeyCodes.EQUALS:case goog.events.KeyCodes.COMMA:case goog.events.KeyCodes.PERIOD:case goog.events.KeyCodes.SLASH:case goog.events.KeyCodes.APOSTROPHE:case goog.events.KeyCodes.SINGLE_QUOTE:return!1}if(goog.userAgent.IE&&
d&&b==a)return!1;switch(a){case goog.events.KeyCodes.ENTER:return goog.userAgent.GECKO?f||e?!1:!(c&&d):!0;case goog.events.KeyCodes.ESC:return!(goog.userAgent.WEBKIT||goog.userAgent.EDGE||goog.userAgent.GECKO)}return goog.userAgent.GECKO&&(d||e||f)?!1:goog.events.KeyCodes.isCharacterKey(a)};
goog.events.KeyCodes.isCharacterKey=function(a){if(a>=goog.events.KeyCodes.ZERO&&a<=goog.events.KeyCodes.NINE||a>=goog.events.KeyCodes.NUM_ZERO&&a<=goog.events.KeyCodes.NUM_MULTIPLY||a>=goog.events.KeyCodes.A&&a<=goog.events.KeyCodes.Z||(goog.userAgent.WEBKIT||goog.userAgent.EDGE)&&0==a)return!0;switch(a){case goog.events.KeyCodes.SPACE:case goog.events.KeyCodes.PLUS_SIGN:case goog.events.KeyCodes.QUESTION_MARK:case goog.events.KeyCodes.AT_SIGN:case goog.events.KeyCodes.NUM_PLUS:case goog.events.KeyCodes.NUM_MINUS:case goog.events.KeyCodes.NUM_PERIOD:case goog.events.KeyCodes.NUM_DIVISION:case goog.events.KeyCodes.SEMICOLON:case goog.events.KeyCodes.FF_SEMICOLON:case goog.events.KeyCodes.DASH:case goog.events.KeyCodes.EQUALS:case goog.events.KeyCodes.FF_EQUALS:case goog.events.KeyCodes.COMMA:case goog.events.KeyCodes.PERIOD:case goog.events.KeyCodes.SLASH:case goog.events.KeyCodes.APOSTROPHE:case goog.events.KeyCodes.SINGLE_QUOTE:case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:case goog.events.KeyCodes.BACKSLASH:case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:case goog.events.KeyCodes.FF_HASH:case goog.events.KeyCodes.FF_JP_QUOTE:return!0;
case goog.events.KeyCodes.FF_DASH:return goog.userAgent.GECKO;default:return!1}};goog.events.KeyCodes.normalizeKeyCode=function(a){return goog.userAgent.GECKO?goog.events.KeyCodes.normalizeGeckoKeyCode(a):goog.userAgent.MAC&&goog.userAgent.WEBKIT?goog.events.KeyCodes.normalizeMacWebKitKeyCode(a):a};
goog.events.KeyCodes.normalizeGeckoKeyCode=function(a){switch(a){case goog.events.KeyCodes.FF_EQUALS:return goog.events.KeyCodes.EQUALS;case goog.events.KeyCodes.FF_SEMICOLON:return goog.events.KeyCodes.SEMICOLON;case goog.events.KeyCodes.FF_DASH:return goog.events.KeyCodes.DASH;case goog.events.KeyCodes.MAC_FF_META:return goog.events.KeyCodes.META;case goog.events.KeyCodes.WIN_KEY_FF_LINUX:return goog.events.KeyCodes.WIN_KEY;default:return a}};
goog.events.KeyCodes.normalizeMacWebKitKeyCode=function(a){switch(a){case goog.events.KeyCodes.MAC_WK_CMD_RIGHT:return goog.events.KeyCodes.META;default:return a}};goog.dom.vendor={};goog.dom.vendor.getVendorJsPrefix=function(){return goog.userAgent.WEBKIT?"Webkit":goog.userAgent.GECKO?"Moz":goog.userAgent.IE?"ms":goog.userAgent.OPERA?"O":null};goog.dom.vendor.getVendorPrefix=function(){return goog.userAgent.WEBKIT?"-webkit":goog.userAgent.GECKO?"-moz":goog.userAgent.IE?"-ms":goog.userAgent.OPERA?"-o":null};
goog.dom.vendor.getPrefixedPropertyName=function(a,b){if(b&&a in b)return a;var c=goog.dom.vendor.getVendorJsPrefix();return c?(c=c.toLowerCase(),a=c+goog.string.toTitleCase(a),void 0===b||a in b?a:null):null};goog.dom.vendor.getPrefixedEventType=function(a){return((goog.dom.vendor.getVendorJsPrefix()||"")+a).toLowerCase()};goog.math.Box=function(a,b,c,d){this.top=a;this.right=b;this.bottom=c;this.left=d};goog.math.Box.boundingBox=function(a){for(var b=new goog.math.Box(arguments[0].y,arguments[0].x,arguments[0].y,arguments[0].x),c=1;c<arguments.length;c++)b.expandToIncludeCoordinate(arguments[c]);return b};goog.math.Box.prototype.getWidth=function(){return this.right-this.left};goog.math.Box.prototype.getHeight=function(){return this.bottom-this.top};
goog.math.Box.prototype.clone=function(){return new goog.math.Box(this.top,this.right,this.bottom,this.left)};goog.DEBUG&&(goog.math.Box.prototype.toString=function(){return"("+this.top+"t, "+this.right+"r, "+this.bottom+"b, "+this.left+"l)"});goog.math.Box.prototype.contains=function(a){return goog.math.Box.contains(this,a)};
goog.math.Box.prototype.expand=function(a,b,c,d){goog.isObject(a)?(this.top-=a.top,this.right+=a.right,this.bottom+=a.bottom,this.left-=a.left):(this.top-=a,this.right+=Number(b),this.bottom+=Number(c),this.left-=Number(d));return this};goog.math.Box.prototype.expandToInclude=function(a){this.left=Math.min(this.left,a.left);this.top=Math.min(this.top,a.top);this.right=Math.max(this.right,a.right);this.bottom=Math.max(this.bottom,a.bottom)};
goog.math.Box.prototype.expandToIncludeCoordinate=function(a){this.top=Math.min(this.top,a.y);this.right=Math.max(this.right,a.x);this.bottom=Math.max(this.bottom,a.y);this.left=Math.min(this.left,a.x)};goog.math.Box.equals=function(a,b){return a==b?!0:a&&b?a.top==b.top&&a.right==b.right&&a.bottom==b.bottom&&a.left==b.left:!1};
goog.math.Box.contains=function(a,b){return a&&b?b instanceof goog.math.Box?b.left>=a.left&&b.right<=a.right&&b.top>=a.top&&b.bottom<=a.bottom:b.x>=a.left&&b.x<=a.right&&b.y>=a.top&&b.y<=a.bottom:!1};goog.math.Box.relativePositionX=function(a,b){return b.x<a.left?b.x-a.left:b.x>a.right?b.x-a.right:0};goog.math.Box.relativePositionY=function(a,b){return b.y<a.top?b.y-a.top:b.y>a.bottom?b.y-a.bottom:0};
goog.math.Box.distance=function(a,b){var c=goog.math.Box.relativePositionX(a,b);a=goog.math.Box.relativePositionY(a,b);return Math.sqrt(c*c+a*a)};goog.math.Box.intersects=function(a,b){return a.left<=b.right&&b.left<=a.right&&a.top<=b.bottom&&b.top<=a.bottom};goog.math.Box.intersectsWithPadding=function(a,b,c){return a.left<=b.right+c&&b.left<=a.right+c&&a.top<=b.bottom+c&&b.top<=a.bottom+c};
goog.math.Box.prototype.ceil=function(){this.top=Math.ceil(this.top);this.right=Math.ceil(this.right);this.bottom=Math.ceil(this.bottom);this.left=Math.ceil(this.left);return this};goog.math.Box.prototype.floor=function(){this.top=Math.floor(this.top);this.right=Math.floor(this.right);this.bottom=Math.floor(this.bottom);this.left=Math.floor(this.left);return this};
goog.math.Box.prototype.round=function(){this.top=Math.round(this.top);this.right=Math.round(this.right);this.bottom=Math.round(this.bottom);this.left=Math.round(this.left);return this};goog.math.Box.prototype.translate=function(a,b){a instanceof goog.math.Coordinate?(this.left+=a.x,this.right+=a.x,this.top+=a.y,this.bottom+=a.y):(goog.asserts.assertNumber(a),this.left+=a,this.right+=a,"number"===typeof b&&(this.top+=b,this.bottom+=b));return this};
goog.math.Box.prototype.scale=function(a,b){b="number"===typeof b?b:a;this.left*=a;this.right*=a;this.top*=b;this.bottom*=b;return this};goog.math.IRect=function(){};goog.math.Rect=function(a,b,c,d){this.left=a;this.top=b;this.width=c;this.height=d};goog.math.Rect.prototype.clone=function(){return new goog.math.Rect(this.left,this.top,this.width,this.height)};goog.math.Rect.prototype.toBox=function(){return new goog.math.Box(this.top,this.left+this.width,this.top+this.height,this.left)};goog.math.Rect.createFromPositionAndSize=function(a,b){return new goog.math.Rect(a.x,a.y,b.width,b.height)};
goog.math.Rect.createFromBox=function(a){return new goog.math.Rect(a.left,a.top,a.right-a.left,a.bottom-a.top)};goog.DEBUG&&(goog.math.Rect.prototype.toString=function(){return"("+this.left+", "+this.top+" - "+this.width+"w x "+this.height+"h)"});goog.math.Rect.equals=function(a,b){return a==b?!0:a&&b?a.left==b.left&&a.width==b.width&&a.top==b.top&&a.height==b.height:!1};
goog.math.Rect.prototype.intersection=function(a){var b=Math.max(this.left,a.left),c=Math.min(this.left+this.width,a.left+a.width);if(b<=c){var d=Math.max(this.top,a.top);a=Math.min(this.top+this.height,a.top+a.height);if(d<=a)return this.left=b,this.top=d,this.width=c-b,this.height=a-d,!0}return!1};
goog.math.Rect.intersection=function(a,b){var c=Math.max(a.left,b.left),d=Math.min(a.left+a.width,b.left+b.width);if(c<=d){var e=Math.max(a.top,b.top);a=Math.min(a.top+a.height,b.top+b.height);if(e<=a)return new goog.math.Rect(c,e,d-c,a-e)}return null};goog.math.Rect.intersects=function(a,b){return a.left<=b.left+b.width&&b.left<=a.left+a.width&&a.top<=b.top+b.height&&b.top<=a.top+a.height};goog.math.Rect.prototype.intersects=function(a){return goog.math.Rect.intersects(this,a)};
goog.math.Rect.difference=function(a,b){var c=goog.math.Rect.intersection(a,b);if(!c||!c.height||!c.width)return[a.clone()];c=[];var d=a.top,e=a.height,f=a.left+a.width,g=a.top+a.height,h=b.left+b.width,k=b.top+b.height;b.top>a.top&&(c.push(new goog.math.Rect(a.left,a.top,a.width,b.top-a.top)),d=b.top,e-=b.top-a.top);k<g&&(c.push(new goog.math.Rect(a.left,k,a.width,g-k)),e=k-d);b.left>a.left&&c.push(new goog.math.Rect(a.left,d,b.left-a.left,e));h<f&&c.push(new goog.math.Rect(h,d,f-h,e));return c};
goog.math.Rect.prototype.difference=function(a){return goog.math.Rect.difference(this,a)};goog.math.Rect.prototype.boundingRect=function(a){var b=Math.max(this.left+this.width,a.left+a.width),c=Math.max(this.top+this.height,a.top+a.height);this.left=Math.min(this.left,a.left);this.top=Math.min(this.top,a.top);this.width=b-this.left;this.height=c-this.top};goog.math.Rect.boundingRect=function(a,b){if(!a||!b)return null;a=new goog.math.Rect(a.left,a.top,a.width,a.height);a.boundingRect(b);return a};
goog.math.Rect.prototype.contains=function(a){return a instanceof goog.math.Coordinate?a.x>=this.left&&a.x<=this.left+this.width&&a.y>=this.top&&a.y<=this.top+this.height:this.left<=a.left&&this.left+this.width>=a.left+a.width&&this.top<=a.top&&this.top+this.height>=a.top+a.height};goog.math.Rect.prototype.squaredDistance=function(a){var b=a.x<this.left?this.left-a.x:Math.max(a.x-(this.left+this.width),0);a=a.y<this.top?this.top-a.y:Math.max(a.y-(this.top+this.height),0);return b*b+a*a};
goog.math.Rect.prototype.distance=function(a){return Math.sqrt(this.squaredDistance(a))};goog.math.Rect.prototype.getSize=function(){return new goog.math.Size(this.width,this.height)};goog.math.Rect.prototype.getTopLeft=function(){return new goog.math.Coordinate(this.left,this.top)};goog.math.Rect.prototype.getCenter=function(){return new goog.math.Coordinate(this.left+this.width/2,this.top+this.height/2)};
goog.math.Rect.prototype.getBottomRight=function(){return new goog.math.Coordinate(this.left+this.width,this.top+this.height)};goog.math.Rect.prototype.ceil=function(){this.left=Math.ceil(this.left);this.top=Math.ceil(this.top);this.width=Math.ceil(this.width);this.height=Math.ceil(this.height);return this};goog.math.Rect.prototype.floor=function(){this.left=Math.floor(this.left);this.top=Math.floor(this.top);this.width=Math.floor(this.width);this.height=Math.floor(this.height);return this};
goog.math.Rect.prototype.round=function(){this.left=Math.round(this.left);this.top=Math.round(this.top);this.width=Math.round(this.width);this.height=Math.round(this.height);return this};goog.math.Rect.prototype.translate=function(a,b){a instanceof goog.math.Coordinate?(this.left+=a.x,this.top+=a.y):(this.left+=goog.asserts.assertNumber(a),"number"===typeof b&&(this.top+=b));return this};
goog.math.Rect.prototype.scale=function(a,b){b="number"===typeof b?b:a;this.left*=a;this.width*=a;this.top*=b;this.height*=b;return this};goog.style={};goog.style.setStyle=function(a,b,c){if("string"===typeof b)goog.style.setStyle_(a,c,b);else for(var d in b)goog.style.setStyle_(a,b[d],d)};goog.style.setStyle_=function(a,b,c){(c=goog.style.getVendorJsStyleName_(a,c))&&(a.style[c]=b)};goog.style.styleNameCache_={};
goog.style.getVendorJsStyleName_=function(a,b){var c=goog.style.styleNameCache_[b];if(!c){var d=goog.string.toCamelCase(b);c=d;void 0===a.style[d]&&(d=goog.dom.vendor.getVendorJsPrefix()+goog.string.toTitleCase(d),void 0!==a.style[d]&&(c=d));goog.style.styleNameCache_[b]=c}return c};
goog.style.getVendorStyleName_=function(a,b){var c=goog.string.toCamelCase(b);return void 0===a.style[c]&&(c=goog.dom.vendor.getVendorJsPrefix()+goog.string.toTitleCase(c),void 0!==a.style[c])?goog.dom.vendor.getVendorPrefix()+"-"+b:b};goog.style.getStyle=function(a,b){var c=a.style[goog.string.toCamelCase(b)];return"undefined"!==typeof c?c:a.style[goog.style.getVendorJsStyleName_(a,b)]||""};
goog.style.getComputedStyle=function(a,b){var c=goog.dom.getOwnerDocument(a);return c.defaultView&&c.defaultView.getComputedStyle&&(a=c.defaultView.getComputedStyle(a,null))?a[b]||a.getPropertyValue(b)||"":""};goog.style.getCascadedStyle=function(a,b){return a.currentStyle?a.currentStyle[b]:null};goog.style.getStyle_=function(a,b){return goog.style.getComputedStyle(a,b)||goog.style.getCascadedStyle(a,b)||a.style&&a.style[b]};
goog.style.getComputedBoxSizing=function(a){return goog.style.getStyle_(a,"boxSizing")||goog.style.getStyle_(a,"MozBoxSizing")||goog.style.getStyle_(a,"WebkitBoxSizing")||null};goog.style.getComputedPosition=function(a){return goog.style.getStyle_(a,"position")};goog.style.getBackgroundColor=function(a){return goog.style.getStyle_(a,"backgroundColor")};goog.style.getComputedOverflowX=function(a){return goog.style.getStyle_(a,"overflowX")};
goog.style.getComputedOverflowY=function(a){return goog.style.getStyle_(a,"overflowY")};goog.style.getComputedZIndex=function(a){return goog.style.getStyle_(a,"zIndex")};goog.style.getComputedTextAlign=function(a){return goog.style.getStyle_(a,"textAlign")};goog.style.getComputedCursor=function(a){return goog.style.getStyle_(a,"cursor")};goog.style.getComputedTransform=function(a){var b=goog.style.getVendorStyleName_(a,"transform");return goog.style.getStyle_(a,b)||goog.style.getStyle_(a,"transform")};
goog.style.setPosition=function(a,b,c){if(b instanceof goog.math.Coordinate){var d=b.x;b=b.y}else d=b,b=c;a.style.left=goog.style.getPixelStyleValue_(d,!1);a.style.top=goog.style.getPixelStyleValue_(b,!1)};goog.style.getPosition=function(a){return new goog.math.Coordinate(a.offsetLeft,a.offsetTop)};
goog.style.getClientViewportElement=function(a){a=a?goog.dom.getOwnerDocument(a):goog.dom.getDocument();return!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9)||goog.dom.getDomHelper(a).isCss1CompatMode()?a.documentElement:a.body};goog.style.getViewportPageOffset=function(a){var b=a.body;a=a.documentElement;return new goog.math.Coordinate(b.scrollLeft||a.scrollLeft,b.scrollTop||a.scrollTop)};
goog.style.getBoundingClientRect_=function(a){try{return a.getBoundingClientRect()}catch(b){return{left:0,top:0,right:0,bottom:0}}};
goog.style.getOffsetParent=function(a){if(goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(8))return goog.asserts.assert(a&&"offsetParent"in a),a.offsetParent;var b=goog.dom.getOwnerDocument(a),c=goog.style.getStyle_(a,"position"),d="fixed"==c||"absolute"==c;for(a=a.parentNode;a&&a!=b;a=a.parentNode)if(a.nodeType==goog.dom.NodeType.DOCUMENT_FRAGMENT&&a.host&&(a=a.host),c=goog.style.getStyle_(a,"position"),d=d&&"static"==c&&a!=b.documentElement&&a!=b.body,!d&&(a.scrollWidth>a.clientWidth||
a.scrollHeight>a.clientHeight||"fixed"==c||"absolute"==c||"relative"==c))return a;return null};
goog.style.getVisibleRectForElement=function(a){for(var b=new goog.math.Box(0,Infinity,Infinity,0),c=goog.dom.getDomHelper(a),d=c.getDocument().body,e=c.getDocument().documentElement,f=c.getDocumentScrollElement();a=goog.style.getOffsetParent(a);)if(!(goog.userAgent.IE&&0==a.clientWidth||goog.userAgent.WEBKIT&&0==a.clientHeight&&a==d)&&a!=d&&a!=e&&"visible"!=goog.style.getStyle_(a,"overflow")){var g=goog.style.getPageOffset(a),h=goog.style.getClientLeftTop(a);g.x+=h.x;g.y+=h.y;b.top=Math.max(b.top,
g.y);b.right=Math.min(b.right,g.x+a.clientWidth);b.bottom=Math.min(b.bottom,g.y+a.clientHeight);b.left=Math.max(b.left,g.x)}d=f.scrollLeft;f=f.scrollTop;b.left=Math.max(b.left,d);b.top=Math.max(b.top,f);c=c.getViewportSize();b.right=Math.min(b.right,d+c.width);b.bottom=Math.min(b.bottom,f+c.height);return 0<=b.top&&0<=b.left&&b.bottom>b.top&&b.right>b.left?b:null};
goog.style.getContainerOffsetToScrollInto=function(a,b,c){var d=b||goog.dom.getDocumentScrollElement(),e=goog.style.getPageOffset(a),f=goog.style.getPageOffset(d),g=goog.style.getBorderBox(d);d==goog.dom.getDocumentScrollElement()?(b=e.x-d.scrollLeft,e=e.y-d.scrollTop,goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(10)&&(b+=g.left,e+=g.top)):(b=e.x-f.x-g.left,e=e.y-f.y-g.top);g=goog.style.getSizeWithDisplay_(a);a=d.clientWidth-g.width;g=d.clientHeight-g.height;f=d.scrollLeft;d=d.scrollTop;
c?(f+=b-a/2,d+=e-g/2):(f+=Math.min(b,Math.max(b-a,0)),d+=Math.min(e,Math.max(e-g,0)));return new goog.math.Coordinate(f,d)};goog.style.scrollIntoContainerView=function(a,b,c){b=b||goog.dom.getDocumentScrollElement();a=goog.style.getContainerOffsetToScrollInto(a,b,c);b.scrollLeft=a.x;b.scrollTop=a.y};goog.style.getClientLeftTop=function(a){return new goog.math.Coordinate(a.clientLeft,a.clientTop)};
goog.style.getPageOffset=function(a){var b=goog.dom.getOwnerDocument(a);goog.asserts.assertObject(a,"Parameter is required");var c=new goog.math.Coordinate(0,0),d=goog.style.getClientViewportElement(b);if(a==d)return c;a=goog.style.getBoundingClientRect_(a);b=goog.dom.getDomHelper(b).getDocumentScroll();c.x=a.left+b.x;c.y=a.top+b.y;return c};goog.style.getPageOffsetLeft=function(a){return goog.style.getPageOffset(a).x};goog.style.getPageOffsetTop=function(a){return goog.style.getPageOffset(a).y};
goog.style.getFramedPageOffset=function(a,b){var c=new goog.math.Coordinate(0,0),d=goog.dom.getWindow(goog.dom.getOwnerDocument(a));if(!goog.reflect.canAccessProperty(d,"parent"))return c;do{var e=d==b?goog.style.getPageOffset(a):goog.style.getClientPositionForElement_(goog.asserts.assert(a));c.x+=e.x;c.y+=e.y}while(d&&d!=b&&d!=d.parent&&(a=d.frameElement)&&(d=d.parent));return c};
goog.style.translateRectForAnotherFrame=function(a,b,c){if(b.getDocument()!=c.getDocument()){var d=b.getDocument().body;c=goog.style.getFramedPageOffset(d,c.getWindow());c=goog.math.Coordinate.difference(c,goog.style.getPageOffset(d));!goog.userAgent.IE||goog.userAgent.isDocumentModeOrHigher(9)||b.isCss1CompatMode()||(c=goog.math.Coordinate.difference(c,b.getDocumentScroll()));a.left+=c.x;a.top+=c.y}};
goog.style.getRelativePosition=function(a,b){a=goog.style.getClientPosition(a);b=goog.style.getClientPosition(b);return new goog.math.Coordinate(a.x-b.x,a.y-b.y)};goog.style.getClientPositionForElement_=function(a){a=goog.style.getBoundingClientRect_(a);return new goog.math.Coordinate(a.left,a.top)};
goog.style.getClientPosition=function(a){goog.asserts.assert(a);if(a.nodeType==goog.dom.NodeType.ELEMENT)return goog.style.getClientPositionForElement_(a);a=a.changedTouches?a.changedTouches[0]:a;return new goog.math.Coordinate(a.clientX,a.clientY)};goog.style.setPageOffset=function(a,b,c){var d=goog.style.getPageOffset(a);b instanceof goog.math.Coordinate&&(c=b.y,b=b.x);b=goog.asserts.assertNumber(b)-d.x;goog.style.setPosition(a,a.offsetLeft+b,a.offsetTop+(Number(c)-d.y))};
goog.style.setSize=function(a,b,c){if(b instanceof goog.math.Size)c=b.height,b=b.width;else if(void 0==c)throw Error("missing height argument");goog.style.setWidth(a,b);goog.style.setHeight(a,c)};goog.style.getPixelStyleValue_=function(a,b){"number"==typeof a&&(a=(b?Math.round(a):a)+"px");return a};goog.style.setHeight=function(a,b){a.style.height=goog.style.getPixelStyleValue_(b,!0)};goog.style.setWidth=function(a,b){a.style.width=goog.style.getPixelStyleValue_(b,!0)};
goog.style.getSize=function(a){return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_,a)};goog.style.evaluateWithTemporaryDisplay_=function(a,b){if("none"!=goog.style.getStyle_(b,"display"))return a(b);var c=b.style,d=c.display,e=c.visibility,f=c.position;c.visibility="hidden";c.position="absolute";c.display="inline";a=a(b);c.display=d;c.position=f;c.visibility=e;return a};
goog.style.getSizeWithDisplay_=function(a){var b=a.offsetWidth,c=a.offsetHeight,d=goog.userAgent.WEBKIT&&!b&&!c;return(void 0===b||d)&&a.getBoundingClientRect?(a=goog.style.getBoundingClientRect_(a),new goog.math.Size(a.right-a.left,a.bottom-a.top)):new goog.math.Size(b,c)};goog.style.getTransformedSize=function(a){if(!a.getBoundingClientRect)return null;a=goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_,a);return new goog.math.Size(a.right-a.left,a.bottom-a.top)};
goog.style.getBounds=function(a){var b=goog.style.getPageOffset(a);a=goog.style.getSize(a);return new goog.math.Rect(b.x,b.y,a.width,a.height)};goog.style.toCamelCase=function(a){return goog.string.toCamelCase(String(a))};goog.style.toSelectorCase=function(a){return goog.string.toSelectorCase(a)};
goog.style.getOpacity=function(a){goog.asserts.assert(a);var b=a.style;a="";"opacity"in b?a=b.opacity:"MozOpacity"in b?a=b.MozOpacity:"filter"in b&&(b=b.filter.match(/alpha\(opacity=([\d.]+)\)/))&&(a=String(b[1]/100));return""==a?a:Number(a)};goog.style.setOpacity=function(a,b){goog.asserts.assert(a);a=a.style;"opacity"in a?a.opacity=b:"MozOpacity"in a?a.MozOpacity=b:"filter"in a&&(a.filter=""===b?"":"alpha(opacity="+100*Number(b)+")")};
goog.style.setTransparentBackgroundImage=function(a,b){a=a.style;goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("8")?a.filter='progid:DXImageTransform.Microsoft.AlphaImageLoader(src="'+b+'", sizingMethod="crop")':(a.backgroundImage="url("+b+")",a.backgroundPosition="top left",a.backgroundRepeat="no-repeat")};goog.style.clearTransparentBackgroundImage=function(a){a=a.style;"filter"in a?a.filter="":a.backgroundImage="none"};goog.style.showElement=function(a,b){goog.style.setElementShown(a,b)};
goog.style.setElementShown=function(a,b){a.style.display=b?"":"none"};goog.style.isElementShown=function(a){return"none"!=a.style.display};
goog.style.installSafeStyleSheet=function(a,b){b=goog.dom.getDomHelper(b);var c=b.getDocument();if(goog.userAgent.IE&&c.createStyleSheet)return b=c.createStyleSheet(),goog.style.setSafeStyleSheet(b,a),b;c=b.getElementsByTagNameAndClass(goog.dom.TagName.HEAD)[0];if(!c){var d=b.getElementsByTagNameAndClass(goog.dom.TagName.BODY)[0];c=b.createDom(goog.dom.TagName.HEAD);d.parentNode.insertBefore(c,d)}d=b.createDom(goog.dom.TagName.STYLE);var e=goog.getScriptNonce();e&&d.setAttribute("nonce",e);goog.style.setSafeStyleSheet(d,
a);b.appendChild(c,d);return d};goog.style.uninstallStyles=function(a){goog.dom.removeNode(a.ownerNode||a.owningElement||a)};goog.style.setSafeStyleSheet=function(a,b){b=module$contents$goog$html$SafeStyleSheet_SafeStyleSheet.unwrap(b);goog.userAgent.IE&&void 0!==a.cssText?a.cssText=b:goog.global.trustedTypes?goog.dom.setTextContent(a,b):a.innerHTML=b};
goog.style.setPreWrap=function(a){a=a.style;goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("8")?(a.whiteSpace="pre",a.wordWrap="break-word"):a.whiteSpace=goog.userAgent.GECKO?"-moz-pre-wrap":"pre-wrap"};goog.style.setInlineBlock=function(a){a=a.style;a.position="relative";goog.userAgent.IE&&!goog.userAgent.isVersionOrHigher("8")?(a.zoom="1",a.display="inline"):a.display="inline-block"};goog.style.isRightToLeft=function(a){return"rtl"==goog.style.getStyle_(a,"direction")};
goog.style.unselectableStyle_=goog.userAgent.GECKO?"MozUserSelect":goog.userAgent.WEBKIT||goog.userAgent.EDGE?"WebkitUserSelect":null;goog.style.isUnselectable=function(a){return goog.style.unselectableStyle_?"none"==a.style[goog.style.unselectableStyle_].toLowerCase():goog.userAgent.IE||goog.userAgent.OPERA?"on"==a.getAttribute("unselectable"):!1};
goog.style.setUnselectable=function(a,b,c){c=c?null:a.getElementsByTagName("*");var d=goog.style.unselectableStyle_;if(d){if(b=b?"none":"",a.style&&(a.style[d]=b),c){a=0;for(var e;e=c[a];a++)e.style&&(e.style[d]=b)}}else if(goog.userAgent.IE||goog.userAgent.OPERA)if(b=b?"on":"",a.setAttribute("unselectable",b),c)for(a=0;e=c[a];a++)e.setAttribute("unselectable",b)};goog.style.getBorderBoxSize=function(a){return new goog.math.Size(a.offsetWidth,a.offsetHeight)};
goog.style.setBorderBoxSize=function(a,b){var c=goog.dom.getOwnerDocument(a),d=goog.dom.getDomHelper(c).isCss1CompatMode();!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10")||d&&goog.userAgent.isVersionOrHigher("8")?goog.style.setBoxSizingSize_(a,b,"border-box"):(c=a.style,d?(d=goog.style.getPaddingBox(a),a=goog.style.getBorderBox(a),c.pixelWidth=b.width-a.left-d.left-d.right-a.right,c.pixelHeight=b.height-a.top-d.top-d.bottom-a.bottom):(c.pixelWidth=b.width,c.pixelHeight=b.height))};
goog.style.getContentBoxSize=function(a){var b=goog.dom.getOwnerDocument(a),c=goog.userAgent.IE&&a.currentStyle;if(c&&goog.dom.getDomHelper(b).isCss1CompatMode()&&"auto"!=c.width&&"auto"!=c.height&&!c.boxSizing)return b=goog.style.getIePixelValue_(a,c.width,"width","pixelWidth"),a=goog.style.getIePixelValue_(a,c.height,"height","pixelHeight"),new goog.math.Size(b,a);c=goog.style.getBorderBoxSize(a);b=goog.style.getPaddingBox(a);a=goog.style.getBorderBox(a);return new goog.math.Size(c.width-a.left-
b.left-b.right-a.right,c.height-a.top-b.top-b.bottom-a.bottom)};
goog.style.setContentBoxSize=function(a,b){var c=goog.dom.getOwnerDocument(a),d=goog.dom.getDomHelper(c).isCss1CompatMode();!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10")||d&&goog.userAgent.isVersionOrHigher("8")?goog.style.setBoxSizingSize_(a,b,"content-box"):(c=a.style,d?(c.pixelWidth=b.width,c.pixelHeight=b.height):(d=goog.style.getPaddingBox(a),a=goog.style.getBorderBox(a),c.pixelWidth=b.width+a.left+d.left+d.right+a.right,c.pixelHeight=b.height+a.top+d.top+d.bottom+a.bottom))};
goog.style.setBoxSizingSize_=function(a,b,c){a=a.style;goog.userAgent.GECKO?a.MozBoxSizing=c:goog.userAgent.WEBKIT?a.WebkitBoxSizing=c:a.boxSizing=c;a.width=Math.max(b.width,0)+"px";a.height=Math.max(b.height,0)+"px"};goog.style.getIePixelValue_=function(a,b,c,d){if(/^\d+px?$/.test(b))return parseInt(b,10);var e=a.style[c],f=a.runtimeStyle[c];a.runtimeStyle[c]=a.currentStyle[c];a.style[c]=b;b=a.style[d];a.style[c]=e;a.runtimeStyle[c]=f;return+b};
goog.style.getIePixelDistance_=function(a,b){return(b=goog.style.getCascadedStyle(a,b))?goog.style.getIePixelValue_(a,b,"left","pixelLeft"):0};
goog.style.getBox_=function(a,b){if(goog.userAgent.IE){var c=goog.style.getIePixelDistance_(a,b+"Left"),d=goog.style.getIePixelDistance_(a,b+"Right"),e=goog.style.getIePixelDistance_(a,b+"Top");a=goog.style.getIePixelDistance_(a,b+"Bottom");return new goog.math.Box(e,d,a,c)}c=goog.style.getComputedStyle(a,b+"Left");d=goog.style.getComputedStyle(a,b+"Right");e=goog.style.getComputedStyle(a,b+"Top");a=goog.style.getComputedStyle(a,b+"Bottom");return new goog.math.Box(parseFloat(e),parseFloat(d),parseFloat(a),
parseFloat(c))};goog.style.getPaddingBox=function(a){return goog.style.getBox_(a,"padding")};goog.style.getMarginBox=function(a){return goog.style.getBox_(a,"margin")};goog.style.ieBorderWidthKeywords_={thin:2,medium:4,thick:6};goog.style.getIePixelBorder_=function(a,b){if("none"==goog.style.getCascadedStyle(a,b+"Style"))return 0;b=goog.style.getCascadedStyle(a,b+"Width");return b in goog.style.ieBorderWidthKeywords_?goog.style.ieBorderWidthKeywords_[b]:goog.style.getIePixelValue_(a,b,"left","pixelLeft")};
goog.style.getBorderBox=function(a){if(goog.userAgent.IE&&!goog.userAgent.isDocumentModeOrHigher(9)){var b=goog.style.getIePixelBorder_(a,"borderLeft"),c=goog.style.getIePixelBorder_(a,"borderRight"),d=goog.style.getIePixelBorder_(a,"borderTop");a=goog.style.getIePixelBorder_(a,"borderBottom");return new goog.math.Box(d,c,a,b)}b=goog.style.getComputedStyle(a,"borderLeftWidth");c=goog.style.getComputedStyle(a,"borderRightWidth");d=goog.style.getComputedStyle(a,"borderTopWidth");a=goog.style.getComputedStyle(a,
"borderBottomWidth");return new goog.math.Box(parseFloat(d),parseFloat(c),parseFloat(a),parseFloat(b))};goog.style.getFontFamily=function(a){var b=goog.dom.getOwnerDocument(a),c="";if(b.body.createTextRange&&goog.dom.contains(b,a)){b=b.body.createTextRange();b.moveToElementText(a);try{c=b.queryCommandValue("FontName")}catch(d){c=""}}c||(c=goog.style.getStyle_(a,"fontFamily"));a=c.split(",");1<a.length&&(c=a[0]);return goog.string.stripQuotes(c,"\"'")};goog.style.lengthUnitRegex_=/[^\d]+$/;
goog.style.getLengthUnits=function(a){return(a=a.match(goog.style.lengthUnitRegex_))&&a[0]||null};goog.style.ABSOLUTE_CSS_LENGTH_UNITS_={cm:1,"in":1,mm:1,pc:1,pt:1};goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_={em:1,ex:1};
goog.style.getFontSize=function(a){var b=goog.style.getStyle_(a,"fontSize"),c=goog.style.getLengthUnits(b);if(b&&"px"==c)return parseInt(b,10);if(goog.userAgent.IE){if(String(c)in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_)return goog.style.getIePixelValue_(a,b,"left","pixelLeft");if(a.parentNode&&a.parentNode.nodeType==goog.dom.NodeType.ELEMENT&&String(c)in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_)return a=a.parentNode,c=goog.style.getStyle_(a,"fontSize"),goog.style.getIePixelValue_(a,b==c?"1em":b,
"left","pixelLeft")}c=goog.dom.createDom(goog.dom.TagName.SPAN,{style:"visibility:hidden;position:absolute;line-height:0;padding:0;margin:0;border:0;height:1em;"});goog.dom.appendChild(a,c);b=c.offsetHeight;goog.dom.removeNode(c);return b};goog.style.parseStyleAttribute=function(a){var b={};module$contents$goog$array_forEach(a.split(/\s*;\s*/),function(c){var d=c.match(/\s*([\w-]+)\s*:(.+)/);d&&(c=d[1],d=goog.string.trim(d[2]),b[goog.string.toCamelCase(c.toLowerCase())]=d)});return b};
goog.style.toStyleAttribute=function(a){var b=[];goog.object.forEach(a,function(c,d){b.push(goog.string.toSelectorCase(d),":",c,";")});return b.join("")};goog.style.setFloat=function(a,b){a.style[goog.userAgent.IE?"styleFloat":"cssFloat"]=b};goog.style.getFloat=function(a){return a.style[goog.userAgent.IE?"styleFloat":"cssFloat"]||""};
goog.style.getScrollbarWidth=function(a){var b=goog.dom.createElement(goog.dom.TagName.DIV);a&&(b.className=a);b.style.cssText="overflow:auto;position:absolute;top:0;width:100px;height:100px";a=goog.dom.createElement(goog.dom.TagName.DIV);goog.style.setSize(a,"200px","200px");b.appendChild(a);goog.dom.appendChild(goog.dom.getDocument().body,b);a=b.offsetWidth-b.clientWidth;goog.dom.removeNode(b);return a};goog.style.MATRIX_TRANSLATION_REGEX_=/matrix\([0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, ([0-9\.\-]+)p?x?, ([0-9\.\-]+)p?x?\)/;
goog.style.getCssTranslation=function(a){a=goog.style.getComputedTransform(a);return a?(a=a.match(goog.style.MATRIX_TRANSLATION_REGEX_))?new goog.math.Coordinate(parseFloat(a[1]),parseFloat(a[2])):new goog.math.Coordinate(0,0):new goog.math.Coordinate(0,0)};goog.setTestOnly("goog.testing.events");goog.testing.events={};goog.testing.events.Event=function(a,b){this.type=a;this.currentTarget=this.target=b||null};goog.testing.events.Event.prototype.propagationStopped_=!1;goog.testing.events.Event.prototype.defaultPrevented=!1;goog.testing.events.Event.prototype.returnValue_=!0;goog.testing.events.Event.prototype.stopPropagation=function(){this.propagationStopped_=!0};
goog.testing.events.Event.prototype.preventDefault=function(){this.defaultPrevented=!0;this.returnValue_=!1};goog.testing.events.assertEventTarget_=function(a){return goog.asserts.assert(a,"EventTarget should be defined.")};goog.testing.events.setEventClientXY_=function(a,b){if(!b&&a.target&&a.target.nodeType==goog.dom.NodeType.ELEMENT)try{b=goog.style.getClientPosition(a.target)}catch(c){}a.clientX=b?b.x:0;a.clientY=b?b.y:0;a.screenX=a.clientX;a.screenY=a.clientY};
goog.testing.events.fireClickSequence=function(a,b,c,d){return goog.testing.events.eagerAnd_(goog.testing.events.fireMouseDownEvent(a,b,c,d),goog.testing.events.fireMouseUpEvent(a,b,c,d),goog.testing.events.fireClickEvent(a,b,c,d))};
goog.testing.events.fireDoubleClickSequence=function(a,b,c){var d=goog.events.BrowserEvent.MouseButton.LEFT;return goog.testing.events.eagerAnd_(goog.testing.events.fireMouseDownEvent(a,d,b,c),goog.testing.events.fireMouseUpEvent(a,d,b,c),goog.testing.events.fireClickEvent(a,d,b,c),goog.userAgent.IE||goog.testing.events.fireMouseDownEvent(a,d,b,c),goog.testing.events.fireMouseUpEvent(a,d,b,c),goog.userAgent.IE||goog.testing.events.fireClickEvent(a,d,b,c),goog.testing.events.fireDoubleClickEvent(a,
b,c))};
goog.testing.events.KEY_TO_KEYCODE_MAPPING_={0:goog.events.KeyCodes.ZERO,1:goog.events.KeyCodes.ONE,2:goog.events.KeyCodes.TWO,3:goog.events.KeyCodes.THREE,4:goog.events.KeyCodes.FOUR,5:goog.events.KeyCodes.FIVE,6:goog.events.KeyCodes.SIX,7:goog.events.KeyCodes.SEVEN,8:goog.events.KeyCodes.EIGHT,9:goog.events.KeyCodes.NINE,a:goog.events.KeyCodes.A,b:goog.events.KeyCodes.B,c:goog.events.KeyCodes.C,d:goog.events.KeyCodes.D,e:goog.events.KeyCodes.E,f:goog.events.KeyCodes.F,g:goog.events.KeyCodes.G,h:goog.events.KeyCodes.H,
i:goog.events.KeyCodes.I,j:goog.events.KeyCodes.J,k:goog.events.KeyCodes.K,l:goog.events.KeyCodes.L,m:goog.events.KeyCodes.M,n:goog.events.KeyCodes.N,o:goog.events.KeyCodes.O,p:goog.events.KeyCodes.P,q:goog.events.KeyCodes.Q,r:goog.events.KeyCodes.R,s:goog.events.KeyCodes.S,t:goog.events.KeyCodes.T,u:goog.events.KeyCodes.U,v:goog.events.KeyCodes.V,w:goog.events.KeyCodes.W,x:goog.events.KeyCodes.X,y:goog.events.KeyCodes.Y,z:goog.events.KeyCodes.Z};
goog.testing.events.fireKeySequence=function(a,b,c){return goog.testing.events.fireNonAsciiKeySequence(a,b,b,c)};
goog.testing.events.fireNonAsciiKeySequence=function(a,b,c,d){var e=new goog.testing.events.Event(goog.events.EventType.KEYDOWN,a),f=new goog.testing.events.Event(goog.events.EventType.KEYUP,a);a=new goog.testing.events.Event(goog.events.EventType.KEYPRESS,a);if("string"===typeof b){e.key=f.key=b;a.key=c;var g=goog.testing.events.KEY_TO_KEYCODE_MAPPING_[b.toLowerCase()];g&&(e.keyCode=f.keyCode=g);if(g=goog.testing.events.KEY_TO_KEYCODE_MAPPING_[c.toLowerCase()])a.keyCode=g}else e.keyCode=f.keyCode=
b,a.keyCode=c;d&&(goog.object.extend(e,d),goog.object.extend(f,d),goog.object.extend(a,d));d=goog.testing.events.fireBrowserEvent(e);"string"===typeof b?""!=c&&d&&(d=goog.testing.events.eagerAnd_(d,goog.testing.events.fireBrowserEvent(a))):goog.events.KeyCodes.firesKeyPressEvent(b,void 0,e.shiftKey,e.ctrlKey,e.altKey,e.metaKey)&&d&&(d=goog.testing.events.eagerAnd_(d,goog.testing.events.fireBrowserEvent(a)));return goog.testing.events.eagerAnd_(d,goog.testing.events.fireBrowserEvent(f))};
goog.testing.events.fireMouseEnterEvent=function(a,b,c){a=new goog.testing.events.Event(goog.events.EventType.MOUSEENTER,a);a.relatedTarget=b;goog.testing.events.setEventClientXY_(a,c);return goog.testing.events.fireBrowserEvent(a)};goog.testing.events.fireMouseLeaveEvent=function(a,b,c){a=new goog.testing.events.Event(goog.events.EventType.MOUSELEAVE,a);a.relatedTarget=b;goog.testing.events.setEventClientXY_(a,c);return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireMouseOverEvent=function(a,b,c){a=new goog.testing.events.Event(goog.events.EventType.MOUSEOVER,a);a.relatedTarget=b;goog.testing.events.setEventClientXY_(a,c);return goog.testing.events.fireBrowserEvent(a)};goog.testing.events.fireMouseMoveEvent=function(a,b){a=new goog.testing.events.Event(goog.events.EventType.MOUSEMOVE,a);goog.testing.events.setEventClientXY_(a,b);return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireMouseOutEvent=function(a,b,c){a=new goog.testing.events.Event(goog.events.EventType.MOUSEOUT,a);a.relatedTarget=b;goog.testing.events.setEventClientXY_(a,c);return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireMouseDownEvent=function(a,b,c,d){b=b||goog.events.BrowserEvent.MouseButton.LEFT;b=goog.events.BrowserFeature.HAS_W3C_BUTTON?b:goog.events.BrowserEvent.IE_BUTTON_MAP[b];return goog.testing.events.fireMouseButtonEvent_(goog.events.EventType.MOUSEDOWN,a,b,c,d)};
goog.testing.events.fireMouseUpEvent=function(a,b,c,d){b=b||goog.events.BrowserEvent.MouseButton.LEFT;b=goog.events.BrowserFeature.HAS_W3C_BUTTON?b:goog.events.BrowserEvent.IE_BUTTON_MAP[b];return goog.testing.events.fireMouseButtonEvent_(goog.events.EventType.MOUSEUP,a,b,c,d)};goog.testing.events.fireClickEvent=function(a,b,c,d){return goog.testing.events.fireMouseButtonEvent_(goog.events.EventType.CLICK,a,b,c,d)};
goog.testing.events.fireDoubleClickEvent=function(a,b,c){return goog.testing.events.fireMouseButtonEvent_(goog.events.EventType.DBLCLICK,a,goog.events.BrowserEvent.MouseButton.LEFT,b,c)};goog.testing.events.fireMouseButtonEvent_=function(a,b,c,d,e){a=new goog.testing.events.Event(a,b);a.button=c||goog.events.BrowserEvent.MouseButton.LEFT;goog.testing.events.setEventClientXY_(a,d);e&&goog.object.extend(a,e);return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireContextMenuEvent=function(a,b){var c=goog.userAgent.MAC&&goog.userAgent.WEBKIT?goog.events.BrowserEvent.MouseButton.LEFT:goog.events.BrowserEvent.MouseButton.RIGHT;a=new goog.testing.events.Event(goog.events.EventType.CONTEXTMENU,a);a.button=goog.events.BrowserFeature.HAS_W3C_BUTTON?c:goog.events.BrowserEvent.IE_BUTTON_MAP[c];a.ctrlKey=goog.userAgent.MAC;goog.testing.events.setEventClientXY_(a,b);return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireContextMenuSequence=function(a,b){var c=goog.userAgent.MAC?{ctrlKey:!0}:{},d=goog.userAgent.MAC&&goog.userAgent.WEBKIT?goog.events.BrowserEvent.MouseButton.LEFT:goog.events.BrowserEvent.MouseButton.RIGHT,e=goog.testing.events.fireMouseDownEvent(a,d,b,c);goog.userAgent.WINDOWS?e=goog.testing.events.eagerAnd_(e,goog.testing.events.fireMouseUpEvent(a,d,b),goog.testing.events.fireContextMenuEvent(a,b)):(e=goog.testing.events.eagerAnd_(e,goog.testing.events.fireContextMenuEvent(a,
b)),e=goog.testing.events.eagerAnd_(e,goog.testing.events.fireMouseUpEvent(a,d,b,c)),goog.userAgent.WEBKIT&&goog.userAgent.MAC&&(e=goog.testing.events.eagerAnd_(e,goog.testing.events.fireClickEvent(a,d,b,c))));return e};goog.testing.events.firePopStateEvent=function(a,b){a=new goog.testing.events.Event(goog.events.EventType.POPSTATE,a);a.state=b;return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireBlurEvent=function(a){a=new goog.testing.events.Event(goog.events.EventType.BLUR,a);return goog.testing.events.fireBrowserEvent(a)};goog.testing.events.fireFocusEvent=function(a){a=new goog.testing.events.Event(goog.events.EventType.FOCUS,a);return goog.testing.events.fireBrowserEvent(a)};goog.testing.events.fireFocusInEvent=function(a){a=new goog.testing.events.Event(goog.events.EventType.FOCUSIN,a);return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireBrowserEvent=function(a){a.returnValue_=!0;for(var b=[],c=a.target;c;c=c.parentNode)b.push(c);for(c=b.length-1;0<=c&&!a.propagationStopped_;c--)goog.events.fireListeners(b[c],a.type,!0,new goog.events.BrowserEvent(a,b[c]));for(c=0;c<b.length&&!a.propagationStopped_;c++)goog.events.fireListeners(b[c],a.type,!1,new goog.events.BrowserEvent(a,b[c]));return a.returnValue_};
goog.testing.events.fireTouchStartEvent=function(a,b,c){a=new goog.testing.events.Event(goog.events.EventType.TOUCHSTART,a);goog.testing.events.setEventClientXY_(a,b);c&&goog.object.extend(a,c);return goog.testing.events.fireBrowserEvent(a)};goog.testing.events.fireTouchMoveEvent=function(a,b,c){a=new goog.testing.events.Event(goog.events.EventType.TOUCHMOVE,a);goog.testing.events.setEventClientXY_(a,b);c&&goog.object.extend(a,c);return goog.testing.events.fireBrowserEvent(a)};
goog.testing.events.fireTouchEndEvent=function(a,b,c){a=new goog.testing.events.Event(goog.events.EventType.TOUCHEND,a);goog.testing.events.setEventClientXY_(a,b);c&&goog.object.extend(a,c);return goog.testing.events.fireBrowserEvent(a)};goog.testing.events.fireTouchSequence=function(a,b,c){return goog.testing.events.eagerAnd_(goog.testing.events.fireTouchStartEvent(a,b,c),goog.testing.events.fireTouchEndEvent(a,b,c))};
goog.testing.events.mixinListenable=function(a){var b=new goog.events.EventTarget;b.setTargetForTesting(a);var c=goog.events.EventTarget.prototype,d=goog.Disposable.prototype,e;for(e in c)if(c.hasOwnProperty(e)||d.hasOwnProperty(e)){var f=c[e];a[e]="function"===typeof f?goog.bind(f,b):f}};goog.testing.events.eagerAnd_=function(a,b){for(var c=1;c<arguments.length;c++)a=a&&arguments[c];return a};goog.setTestOnly("goog.testing.MockClock");goog.testing.MockClock=function(a){goog.Disposable.call(this);this.queue_=[];this.deletedKeys_={};this.unmockDateNow_=!1;a&&this.install()};goog.inherits(goog.testing.MockClock,goog.Disposable);goog.testing.MockClock.REQUEST_ANIMATION_FRAME_TIMEOUT=20;goog.testing.MockClock.nextId=Math.round(1E4*Math.random());goog.testing.MockClock.prototype.timeoutsMade_=0;goog.testing.MockClock.prototype.callbacksTriggered_=0;
goog.testing.MockClock.prototype.replacer_=null;goog.testing.MockClock.prototype.nowMillis_=0;goog.testing.MockClock.prototype.timeoutDelay_=0;goog.testing.MockClock.REAL_SETTIMEOUT_=goog.global.setTimeout;
goog.testing.MockClock.prototype.install=function(){if(!this.replacer_){goog.testing.MockClock.REAL_SETTIMEOUT_!==goog.global.setTimeout&&"undefined"!==typeof console&&console.warn&&console.warn("Non default setTimeout detected. Use of multiple MockClock instances or other clock mocking should be avoided due to unspecified behavior and the resulting fragility.");var a=this.replacer_=new goog.testing.PropertyReplacer;a.set(goog.global,"setTimeout",goog.bind(this.setTimeout_,this));a.set(goog.global,
"setInterval",goog.bind(this.setInterval_,this));a.set(goog.global,"setImmediate",goog.bind(this.setImmediate_,this));a.set(goog.global,"clearTimeout",goog.bind(this.clearTimeout_,this));a.set(goog.global,"clearInterval",goog.bind(this.clearInterval_,this));this.unmockDateNow_||a.set(Date,"now",goog.bind(this.getCurrentTime,this));goog.async.run.forceNextTick&&goog.async.run.forceNextTick(goog.testing.MockClock.REAL_SETTIMEOUT_);this.replaceRequestAnimationFrame_();this.oldGoogNow_=goog.now;goog.now=
goog.bind(this.getCurrentTime,this)}};goog.testing.MockClock.prototype.unmockDateNow=function(){this.unmockDateNow_=!0;if(this.replacer_)try{this.replacer_.restore(Date,"now")}catch(a){}};
goog.testing.MockClock.prototype.replaceRequestAnimationFrame_=function(){for(var a=this.replacer_,b=["requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame"],c="cancelAnimationFrame cancelRequestAnimationFrame webkitCancelRequestAnimationFrame mozCancelRequestAnimationFrame oCancelRequestAnimationFrame msCancelRequestAnimationFrame".split(" "),d=0;d<b.length;++d)goog.global&&goog.global[b[d]]&&a.set(goog.global,b[d],goog.bind(this.requestAnimationFrame_,
this));for(d=0;d<c.length;++d)goog.global&&goog.global[c[d]]&&a.set(goog.global,c[d],goog.bind(this.cancelRequestAnimationFrame_,this))};goog.testing.MockClock.prototype.uninstall=function(){this.replacer_&&(this.replacer_.reset(),this.replacer_=null,goog.now=this.oldGoogNow_);this.resetAsyncQueue_()};goog.testing.MockClock.prototype.disposeInternal=function(){this.uninstall();this.deletedKeys_=this.queue_=null;goog.testing.MockClock.superClass_.disposeInternal.call(this)};
goog.testing.MockClock.prototype.reset=function(){this.queue_=[];this.deletedKeys_={};this.timeoutDelay_=this.callbacksTriggered_=this.timeoutsMade_=this.nowMillis_=0;this.resetAsyncQueue_()};goog.testing.MockClock.prototype.resetAsyncQueue_=function(){goog.async.run.resetQueue()};goog.testing.MockClock.prototype.setTimeoutDelay=function(a){this.timeoutDelay_=a};goog.testing.MockClock.prototype.getTimeoutDelay=function(){return this.timeoutDelay_};
goog.testing.MockClock.prototype.tick=function(a){"number"!=typeof a&&(a=1);if(0>a)throw Error("Time cannot go backwards (cannot tick by "+a+")");a=this.nowMillis_+a;this.runFunctionsWithinRange_(a);this.nowMillis_=Math.max(this.nowMillis_,a);return a};goog.testing.MockClock.prototype.tickPromise=function(a,b){var c,d,e=!1;a.then(function(f){c=f;e=!0},function(f){d=f;e=!0});this.tick(b);if(!e)throw Error("Promise was expected to be resolved after mock clock tick.");if(d)throw d;return c};
goog.testing.MockClock.prototype.getTimeoutsMade=function(){return this.timeoutsMade_};goog.testing.MockClock.prototype.getCallbacksTriggered=function(){return this.callbacksTriggered_};goog.testing.MockClock.prototype.getCurrentTime=function(){return this.nowMillis_};goog.testing.MockClock.prototype.isTimeoutSet=function(a){return a<goog.testing.MockClock.nextId&&a>=goog.testing.MockClock.nextId-this.timeoutsMade_&&!this.deletedKeys_[a]};
goog.testing.MockClock.prototype.runFunctionsWithinRange_=function(a){for(;this.hasQueuedEntriesBefore_(a);)this.runNextQueuedTimeout_()};goog.testing.MockClock.prototype.tickAsync=async function(a=1){if(0>a)throw Error(`Time cannot go backwards (cannot tick by ${a})`);a=this.nowMillis_+a;await this.runFunctionsWithinRangeAsync_(a);this.nowMillis_=Math.max(this.nowMillis_,a);return a};
goog.testing.MockClock.prototype.runFunctionsWithinRangeAsync_=async function(a){for(await goog.testing.MockClock.flushMicroTasks_();this.hasQueuedEntriesBefore_(a);)this.runNextQueuedTimeout_()&&await goog.testing.MockClock.flushMicroTasks_()};goog.testing.MockClock.flushMicroTasks_=async function(){for(var a=0;50>a;a++)await Promise.resolve()};
goog.testing.MockClock.prototype.hasQueuedEntriesBefore_=function(a){a-=this.timeoutDelay_;return!!this.queue_&&!!this.queue_.length&&this.queue_[this.queue_.length-1].runAtMillis<=a};
goog.testing.MockClock.prototype.runNextQueuedTimeout_=function(){var a=this.queue_.pop();if(a.timeoutKey in this.deletedKeys_)return!1;this.nowMillis_=Math.max(this.nowMillis_,a.runAtMillis+this.timeoutDelay_);this.callbacksTriggered_++;a.funcToCall.call(goog.global,a.timeoutKey);a.recurring&&this.scheduleFunction_(a.timeoutKey,a.funcToCall,a.millis,!0);return!0};
goog.testing.MockClock.prototype.scheduleFunction_=function(a,b,c,d){if("function"!==typeof b)throw new TypeError("The provided callback must be a function, not a "+typeof b);goog.testing.MockClock.insert_({runAtMillis:this.nowMillis_+c,funcToCall:b,recurring:d,timeoutKey:a,millis:c},goog.asserts.assert(this.queue_))};goog.testing.MockClock.insert_=function(a,b){for(var c=b.length;0!=c&&!(b[c-1].runAtMillis>a.runAtMillis);c--)b[c]=b[c-1];b[c]=a};goog.testing.MockClock.MAX_INT_=2147483647;
goog.testing.MockClock.prototype.setTimeout_=function(a,b){b=b||0;if(b>goog.testing.MockClock.MAX_INT_)throw Error("Bad timeout value: "+b+".  Timeouts over MAX_INT (24.8 days) cause timeouts to be fired immediately in most browsers, except for IE.");this.timeoutsMade_++;this.scheduleFunction_(goog.testing.MockClock.nextId,a,b,!1);return goog.testing.MockClock.nextId++};
goog.testing.MockClock.prototype.setInterval_=function(a,b){this.timeoutsMade_++;this.scheduleFunction_(goog.testing.MockClock.nextId,a,b||0,!0);return goog.testing.MockClock.nextId++};
goog.testing.MockClock.prototype.requestAnimationFrame_=function(a){return this.setTimeout_(goog.bind(function(){if(a)a(this.getCurrentTime());else if(goog.global.mozRequestAnimationFrame){var b=new goog.testing.events.Event("MozBeforePaint",goog.global);b.timeStamp=this.getCurrentTime();goog.testing.events.fireBrowserEvent(b)}},this),goog.testing.MockClock.REQUEST_ANIMATION_FRAME_TIMEOUT)};goog.testing.MockClock.prototype.setImmediate_=function(a){return this.setTimeout_(a,0)};
goog.testing.MockClock.prototype.clearTimeout_=function(a){this.isTimeoutSet(a)&&(this.deletedKeys_[a]=!0)};goog.testing.MockClock.prototype.clearInterval_=function(a){this.clearTimeout_(a)};goog.testing.MockClock.prototype.cancelRequestAnimationFrame_=function(a){this.clearTimeout_(a)};class mpl$lab$util$ClockTask{constructor(a,b){this.callBack_=b;this.time_=a;this.timeoutID_=NaN}toString(){return mpl$lab$util$Util.ADVANCED?"":"ClockTask{time_: "+mpl$lab$util$Util.NF(this.time_)+", timeoutID_: "+this.timeoutID_+", callBack_: "+this.callBack_+"}"}cancel(){isFinite(this.timeoutID_)&&(clearTimeout(this.timeoutID_),this.timeoutID_=NaN)}execute(){"function"===typeof this.callBack_&&this.callBack_()}getTime(){return this.time_}schedule(a){this.cancel();
"function"===typeof this.callBack_&&(this.timeoutID_=setTimeout(this.callBack_,Math.round(1E3*a)))}setCallback(a){this.callBack_=a}};class mpl$lab$util$Clock extends mpl$lab$util$AbstractSubject{constructor(a){super(a||"CLOCK");this.realStart_sys_secs_=this.clockStart_sys_secs_=mpl$lab$util$Util.systemTime();this.timeRate_=1;this.saveRealTime_secs_=this.saveTime_secs_=0;this.stepMode_=this.isRunning_=!1;this.tasks_=[];this.clockDebug_=!1;this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$lab$util$Clock.en.TIME_RATE,
mpl$lab$util$Clock.i18n.TIME_RATE,()=>this.getTimeRate(),b=>this.setTimeRate(b)))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", timeRate_: "+mpl$lab$util$Util.NF5(this.timeRate_)+", saveTime_secs_: "+mpl$lab$util$Util.NF5(this.saveTime_secs_)+", saveRealTime_secs_: "+mpl$lab$util$Util.NF5(this.saveRealTime_secs_)+", isRunning_: "+this.isRunning_+
", stepMode_: "+this.stepMode_+", clockStart_sys_secs_: "+mpl$lab$util$Util.NF5(this.clockStart_sys_secs_)+", realStart_sys_secs_: "+mpl$lab$util$Util.NF5(this.realStart_sys_secs_)+", tasks_: ["+this.tasks_+"]"+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":super.toStringShort().slice(0,-1)+", time: "+mpl$lab$util$Util.NF5(this.getTime())+"}"}getClassName(){return"Clock"}addTask(a){this.tasks_.includes(a)||
(this.tasks_.push(a),this.scheduleTask(a))}cancelAllTasks(){this.tasks_.forEach(a=>a.cancel())}clearStepMode(){this.stepMode_=!1}clockToSystem(a){return a/this.timeRate_+this.clockStart_sys_secs_}executeTasks(a,b){this.tasks_.forEach(c=>{c.getTime()>=a&&c.getTime()<=a+b&&c.schedule(0)})}getRealTime(){return this.isRunning_?(mpl$lab$util$Util.systemTime()-this.realStart_sys_secs_)*this.timeRate_:this.saveRealTime_secs_}getTasks(){return Array.from(this.tasks_)}getTime(){return this.isRunning_?
(mpl$lab$util$Util.systemTime()-this.clockStart_sys_secs_)*this.timeRate_:this.saveTime_secs_}getTimeRate(){return this.timeRate_}isRunning(){return this.isRunning_}isStepping(){return this.stepMode_}pause(){this.clearStepMode();this.isRunning_&&(this.saveTime_secs_=this.getTime(),this.saveRealTime_secs_=this.getRealTime(),this.cancelAllTasks(),this.isRunning_=!1,this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$util$Clock.CLOCK_PAUSE)),
mpl$lab$util$Util.DEBUG&&this.clockDebug_&&console.log("Clock.pause "+this.toString()))}removeTask(a){module$contents$goog$array_remove(this.tasks_,a);a.cancel()}resume(){this.clearStepMode();this.isRunning_||(this.isRunning_=!0,this.setTimePrivate(this.saveTime_secs_),this.setRealTime(this.saveRealTime_secs_),mpl$lab$util$Util.DEBUG&&this.clockDebug_&&console.log("Clock.resume "+this.toString()),this.broadcast(new mpl$lab$util$GenericEvent(this,
mpl$lab$util$Clock.CLOCK_RESUME)))}scheduleTask(a){a.cancel();if(this.isRunning_){const b=this.clockToSystem(this.getTime()),c=this.clockToSystem(a.getTime());mpl$lab$util$Util.veryDifferent(c,b)?c>b&&a.schedule(c-b):a.execute()}}setRealTime(a){mpl$lab$util$Util.DEBUG&&this.clockDebug_&&console.log("Clock.setRealTime "+mpl$lab$util$Util.NF5(a));this.isRunning_?this.realStart_sys_secs_=mpl$lab$util$Util.systemTime()-
a/this.timeRate_:this.saveRealTime_secs_=a}setTime(a){const b=this.getTime();mpl$lab$util$Util.veryDifferent(b,a,.001)&&(this.setTimePrivate(a),mpl$lab$util$Util.DEBUG&&this.clockDebug_&&console.log("Clock.setTime("+a+") getTime="+b+" realTime="+mpl$lab$util$Util.NF5(this.getRealTime())),this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$util$Clock.CLOCK_SET_TIME)))}setTimePrivate(a){this.isRunning_?
(this.clockStart_sys_secs_=mpl$lab$util$Util.systemTime()-a/this.timeRate_,this.tasks_.forEach(b=>this.scheduleTask(b))):this.saveTime_secs_=a}setTimeRate(a){if(mpl$lab$util$Util.veryDifferent(this.timeRate_,a)){const b=this.getTime(),c=this.getRealTime();this.timeRate_=a;this.setTimePrivate(b);this.setRealTime(c);a=Math.abs(b-this.getTime());goog.asserts.assert(.002>a,"time diff="+a);a=Math.abs(c-this.getRealTime());goog.asserts.assert(.002>a,"realTime diff="+
a);this.broadcastParameter(mpl$lab$util$Clock.en.TIME_RATE)}}step(a){this.pause();this.stepMode_=!0;goog.asserts.assertNumber(a);const b=this.saveTime_secs_;this.saveTime_secs_+=a;this.saveRealTime_secs_+=a;this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$util$Clock.CLOCK_STEP));mpl$lab$util$Util.DEBUG&&this.clockDebug_&&console.log("Clock.step timeStep="+mpl$lab$util$Util.NFE(a)+
" "+this.toString());this.executeTasks(b,a)}systemToClock(a){return(a-this.clockStart_sys_secs_)*this.timeRate_}}mpl$lab$util$Clock.CLOCK_PAUSE="CLOCK_PAUSE";mpl$lab$util$Clock.CLOCK_RESUME="CLOCK_RESUME";mpl$lab$util$Clock.CLOCK_SET_TIME="CLOCK_SET_TIME";mpl$lab$util$Clock.CLOCK_STEP="CLOCK_STEP";mpl$lab$util$Clock.en={TIME_RATE:"time rate"};
mpl$lab$util$Clock.de_strings={TIME_RATE:"Zeitraffer"};mpl$lab$util$Clock.i18n="de"===goog.LOCALE?mpl$lab$util$Clock.de_strings:mpl$lab$util$Clock.en;const module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$ClockTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$ClockTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$ClockTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$util$test$ClockTest_MockObserver1{constructor(){this.numStrings=this.numDoubles=this.numBooleans=this.numSetTimeEvents=this.numStepEvents=this.numResumeEvents=this.numPauseEvents=this.numStopEvents=this.numStartEvents=this.numEvents=0}observe(a){if(a instanceof mpl$lab$util$GenericEvent)if(this.numEvents++,a.nameEquals(mpl$lab$util$Clock.CLOCK_PAUSE))this.numPauseEvents++;else if(a.nameEquals(mpl$lab$util$Clock.CLOCK_RESUME))this.numResumeEvents++;
else if(a.nameEquals(mpl$lab$util$Clock.CLOCK_STEP))this.numStepEvents++;else if(a.nameEquals(mpl$lab$util$Clock.CLOCK_SET_TIME))this.numSetTimeEvents++;else throw"unknown event "+a.getName();else a instanceof mpl$lab$util$ParameterBoolean?(this.numBooleans++,this.numEvents++):a instanceof mpl$lab$util$ParameterNumber?(this.numDoubles++,this.numEvents++):a instanceof mpl$lab$util$ParameterString&&
(this.numStrings++,this.numEvents++)}toStringShort(){return"MockObserver1"}}
class mpl$lab$util$test$ClockTest{static test(){module$contents$myphysicslab$lab$util$test$ClockTest_schedule(mpl$lab$util$test$ClockTest.testClock1);module$contents$myphysicslab$lab$util$test$ClockTest_schedule(mpl$lab$util$test$ClockTest.testClock2);module$contents$myphysicslab$lab$util$test$ClockTest_schedule(mpl$lab$util$test$ClockTest.testClock3)}static testClock1(){module$contents$myphysicslab$lab$util$test$ClockTest_startTest(mpl$lab$util$test$ClockTest.groupName+"testClock1");
const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();const b=new mpl$lab$util$Clock,c=new module$contents$myphysicslab$lab$util$test$ClockTest_MockObserver1;b.addObserver(c);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numBooleans);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numDoubles);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,
c.numStrings);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(0,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getRealTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,
b.getTimeRate());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numEvents);b.resume();module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,
c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getRealTime());a.tick(49);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(49,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.049,mpl$lab$util$Util.systemTime(),1E-14);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.049,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.049,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(1);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(50,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,
mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(49);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(99,Date.now());
module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.099,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.099,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.099,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(1);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(100,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());
b.pause();module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());
a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(150,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getRealTime(),1E-14);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numEvents);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(200,
Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getRealTime(),1E-14);
b.resume();module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numResumeEvents);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());b.pause();module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numResumeEvents);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(4,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getRealTime(),1E-14);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(250,Date.now());
module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.25,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,
c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(4,c.numEvents);b.resume();module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(5,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,
b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(300,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.3,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,
b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());b.setTime(.125);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numDoubles);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(6,
c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.3,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.125,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,b.getRealTime(),1E-14);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(350,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.35,
mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(6,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.175,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());b.step(.04);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numDoubles);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(8,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(350,Date.now());
module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.35,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.215,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.24,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isStepping());b.clearStepMode();
module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isStepping());a.tick(40);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(390,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.39,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(8,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.215,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.24,
b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());b.step(.04);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numDoubles);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,
c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(9,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(390,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.39,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.255,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.28,b.getRealTime(),
1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isStepping());b.clearStepMode();module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isStepping());a.tick(40);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(430,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.43,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(9,
c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.255,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.28,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning())}finally{mpl$lab$util$Util.MOCK_CLOCK=!0,a.uninstall()}}static testClock2(){module$contents$myphysicslab$lab$util$test$ClockTest_startTest(mpl$lab$util$test$ClockTest.groupName+
"testClock2");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();const b=new mpl$lab$util$Clock,c=new module$contents$myphysicslab$lab$util$test$ClockTest_MockObserver1;b.addObserver(c);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numBooleans);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numDoubles);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStrings);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(0,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getRealTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,b.getTimeRate());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numEvents);b.resume();module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStepEvents);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getRealTime());a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(50,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,
mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());b.setTimeRate(2);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,
b.getTimeRate());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(50,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,
c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numDoubles);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(100,
Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());
a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(150,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.25,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.25,b.getRealTime(),
1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());b.setTimeRate(.5);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.5,b.getTimeRate(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(150,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numPauseEvents);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numDoubles);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.25,b.getTime(),
1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.25,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(200,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.275,
b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.275,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());b.setTime(.25);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,
c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(2,c.numDoubles);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(4,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.25,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.275,b.getRealTime(),1E-14);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(250,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.25,
mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(4,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.275,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.3,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(300,Date.now());
module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.3,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(4,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.3,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.325,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());b.setTimeRate(1);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numPauseEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numResumeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,c.numStepEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,c.numSetTimeEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(3,c.numDoubles);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(5,c.numEvents);
module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(1,b.getTimeRate(),1E-14);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(350,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.35,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.35,b.getTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.375,
b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(400,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.4,mpl$lab$util$Util.systemTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(5,c.numEvents);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.4,b.getTime(),
1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.425,b.getRealTime(),1E-14);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning())}finally{a.uninstall(),mpl$lab$util$Util.MOCK_CLOCK=!1}}static testClock3(){module$contents$myphysicslab$lab$util$test$ClockTest_startTest(mpl$lab$util$test$ClockTest.groupName+"testClock3");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=
!0;a.install();const b=new mpl$lab$util$Clock;let c="";const d=new mpl$lab$util$ClockTask(0,()=>c=""),e=new mpl$lab$util$ClockTask(.1,()=>c="A"),f=new mpl$lab$util$ClockTask(.2,()=>c="B"),g=new mpl$lab$util$ClockTask(.3,()=>{c="C";b.setTime(0)});b.addTask(d);b.addTask(e);b.addTask(f);b.addTask(g);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(0,
mpl$lab$util$Util.systemTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertFalse(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(1,b.getTimeRate());b.resume();module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(0,
b.getRealTime());a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(50,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,mpl$lab$util$Util.systemTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertTrue(b.isRunning());module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);a.tick(50);
module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals(100,Date.now());module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("A",c);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("A",c);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,
b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("B",c);a.tick(150);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);b.setTime(0);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(0,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);b.removeTask(e);a.tick(100);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,
b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("B",c);a.tick(100);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(0,
b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);b.addTask(e);b.setTimeRate(2);b.setTime(0);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(0,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);a.tick(50);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("A",c);a.tick(25);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,
b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("A",c);a.tick(25);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("B",c);a.tick(75);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);b.setTimeRate(.5);b.setTime(0);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(0,
b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c);a.tick(200);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.1,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("A",c);a.tick(100);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.15,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("A",c);a.tick(100);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.2,
b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("B",c);a.tick(300);module$contents$myphysicslab$lab$util$test$ClockTest_assertRoughlyEquals(.05,b.getTime(),.001);module$contents$myphysicslab$lab$util$test$ClockTest_assertEquals("",c)}finally{a.uninstall(),mpl$lab$util$Util.MOCK_CLOCK=!1}}}mpl$lab$util$test$ClockTest.groupName="ClockTest.";class mpl$lab$util$Memorizable extends mpl$lab$util$Printable{memorize(){}};class mpl$lab$util$MemoList extends mpl$lab$util$Memorizable{addMemo(a){}getMemos(){}removeMemo(a){}};class mpl$lab$util$ConcreteMemoList{constructor(){this.memorizables_=[];this.isMemorizing_=!1}toString(){return mpl$lab$util$Util.ADVANCED?"":"ConcreteMemoList{memorizables_: ["+this.memorizables_.map(a=>a.toStringShort())+"]}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"ConcreteMemoList{memorizables_.length: "+this.memorizables_.length+"}"}addMemo(a){if(this.isMemorizing_)throw"addMemo during memorize";this.memorizables_.includes(a)||
this.memorizables_.push(a)}getMemos(){return Array.from(this.memorizables_)}memorize(){try{this.isMemorizing_=!0,this.memorizables_.forEach(a=>a.memorize())}finally{this.isMemorizing_=!1}}removeMemo(a){if(this.isMemorizing_)throw"removeMemo during memorize";module$contents$goog$array_remove(this.memorizables_,a)}};class mpl$lab$util$GenericMemo{constructor(a,b){this.function_=a;this.purpose_=mpl$lab$util$Util.ADVANCED?"":b||""}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"GenericMemo{"+(0<this.purpose_.length?'purpose_:"'+this.purpose_+'"':"")+"}"}memorize(){this.function_()}};const module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$ConcreteMemoListTest{static test(){module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_schedule(mpl$lab$util$test$ConcreteMemoListTest.testConcreteMemoList1)}static testConcreteMemoList1(){module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_startTest(mpl$lab$util$test$ConcreteMemoListTest.groupName+"testConcreteMemoList1");const a=new mpl$lab$util$MutableVector(1,
1),b=mpl$lab$util$MutableVector.clone(a),c=new mpl$lab$util$MutableVector(2,2),d=mpl$lab$util$MutableVector.clone(c),e=new mpl$lab$util$GenericMemo(()=>b.setToVector(a));var f=new mpl$lab$util$GenericMemo(()=>d.setToVector(c));const g=new mpl$lab$util$ConcreteMemoList,h=new mpl$lab$util$ConcreteMemoList;g.addMemo(e);g.addMemo(h);h.addMemo(f);
module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(b.equals(a));module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(d.equals(c));module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertEquals(2,g.getMemos().length);module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertEquals(1,h.getMemos().length);a.setTo(-1,-1);c.setTo(-2,-2);g.memorize();module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(b.equals(a));
module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(d.equals(c));f=new mpl$lab$util$GenericMemo(()=>g.removeMemo(e));h.addMemo(f);module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertEquals(2,g.getMemos().length);module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertEquals(2,h.getMemos().length);module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertThrows(()=>g.memorize());h.removeMemo(f);a.setTo(10,15);
c.setTo(20,30);g.memorize();module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(b.equals(a));module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(d.equals(c));f=new mpl$lab$util$GenericMemo(()=>h.addMemo(g));h.addMemo(f);module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertThrows(()=>g.memorize());h.removeMemo(f);a.setTo(.1,.15);c.setTo(.2,.3);g.memorize();module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(b.equals(a));
module$contents$myphysicslab$lab$util$test$ConcreteMemoListTest_assertTrue(d.equals(c))}}mpl$lab$util$test$ConcreteMemoListTest.groupName="ConcreteMemoListTest.";class mpl$lab$util$DoubleMath{constructor(){throw"";}static binaryToHex(a){if(0!=a.length%4)throw"";let b="",c=0;const d=a.length;for(let e=0;e<d;e++)c=2*c+("0"===a[e]?0:1),3===e%4&&(b+=mpl$lab$util$DoubleMath.HEX_DIGITS[c],c=0);return b}static binaryToNum(a){if(64!=a.length)throw"need 64 binary digits "+a;const b="0"==a[0]?1:-1;let c=0,d=1;for(var e=11;0<e;e--)"1"==a[e]&&(c+=d),d*=2;e=0;d=.5;for(let f=12;64>f;f++)"1"==a[f]&&(e+=d),d/=2;return 2047==
c?0!=e?Number.NaN:0<b?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:0==c?0==e?0:b*Math.pow(2,-1022)*e:b*Math.pow(2,c-1023)*(1+e)}static hexToBinary(a){a=a.toUpperCase();let b="";for(let c=0;c<a.length;c++){let d=mpl$lab$util$DoubleMath.HEX_DIGITS.indexOf(a[c]);if(0>d)throw"";let e=8;for(let f=0;4>f;f++)d>=e?(b+="1",d-=e):b+="0",e/=2}return b}static hexToNum(a){if(16!=a.length)throw"";a=mpl$lab$util$DoubleMath.hexToBinary(a);goog.asserts.assert(64==
a.length);return mpl$lab$util$DoubleMath.binaryToNum(a)}static NFHEX(a){return null!=a?mpl$lab$util$DoubleMath.numToHex(a):null===a?"null":"undefined"}static numToBinary(a){if(isNaN(a))return"0"+mpl$lab$util$DoubleMath.repeatChar("1",12)+mpl$lab$util$DoubleMath.repeatChar("0",51);let b=0==(0<=a?0:1)?"0":"1";if(!isFinite(a))return b+mpl$lab$util$DoubleMath.repeatChar("1",11)+mpl$lab$util$DoubleMath.repeatChar("0",
52);var c=Math.abs(a);if(0===c){for(c=1;64>c++;)b+="0";return b}let d=Math.floor(Math.LOG2E*Math.log(c));1023<d&&(d=1023);-1022>d?(b+="00000000000",a=c*Math.pow(2,1022),goog.asserts.assert(0<a&&1>a)):(a=c*Math.pow(2,-d),goog.asserts.assert(2>a),1<=a?(b+=mpl$lab$util$DoubleMath.numToBits(1023+d,11),--a):(b+="00000000000",a=c*Math.pow(2,1022)));for(c=0;52>c++;)a*=2,1<=a?(b+="1",--a):b+="0";return b}static numToBits(a,b){let c="",d;for(;b--;)c=(d=a%2)+c,a=(a-d)/2;goog.asserts.assert(0==
Math.floor(a));return c}static numToHex(a){return mpl$lab$util$DoubleMath.binaryToHex(mpl$lab$util$DoubleMath.numToBinary(a))}static repeatChar(a,b){let c="";for(;b--;)c+=a;return c}}mpl$lab$util$DoubleMath.debug=!1;mpl$lab$util$DoubleMath.HEX_DIGITS="0123456789ABCDEF";const module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$DoubleMathTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$DoubleMathTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$DoubleMathTest{static test(){module$contents$myphysicslab$lab$util$test$DoubleMathTest_schedule(mpl$lab$util$test$DoubleMathTest.testDoubleMath)}static testDoubleMath(){module$contents$myphysicslab$lab$util$test$DoubleMathTest_startTest(mpl$lab$util$test$DoubleMathTest.groupName+"testDoubleMath");var a,b;module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="3FF0000000000000",mpl$lab$util$DoubleMath.numToHex(a=
1));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="3FF0000000000001",mpl$lab$util$DoubleMath.numToHex(a=1.0000000000000002));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b=
"3FF0000000000002",mpl$lab$util$DoubleMath.numToHex(a=1.0000000000000004));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="4000000000000000",mpl$lab$util$DoubleMath.numToHex(a=2));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));
module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="C000000000000000",mpl$lab$util$DoubleMath.numToHex(a=-2));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="3FF999999999999A",mpl$lab$util$DoubleMath.numToHex(a=1.6));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,
mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="BFF999999999999A",mpl$lab$util$DoubleMath.numToHex(a=-1.6));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="4099000000000000",mpl$lab$util$DoubleMath.numToHex(a=
1600));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="C099000000000000",mpl$lab$util$DoubleMath.numToHex(a=-1600));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b=
"3F24F8B588E368F1",mpl$lab$util$DoubleMath.numToHex(a=1.6E-4));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="BF24F8B588E368F1",mpl$lab$util$DoubleMath.numToHex(a=-1.6E-4));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));
module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="0000002F201D49FB",mpl$lab$util$DoubleMath.numToHex(a=1E-312));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="8000002F201D49FB",mpl$lab$util$DoubleMath.numToHex(a=-1E-312));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,
mpl$lab$util$DoubleMath.hexToNum(b));a=Math.pow(2,-1074);module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="0000000000000001",mpl$lab$util$DoubleMath.numToHex(a));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));a=2.225073858507201E-308;module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="000FFFFFFFFFFFFF",mpl$lab$util$DoubleMath.numToHex(a));
module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));a=Math.pow(2,-1022);module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="0010000000000000",mpl$lab$util$DoubleMath.numToHex(a));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b=
"0000000000000001",mpl$lab$util$DoubleMath.numToHex(a=Number.MIN_VALUE));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="7FEFFFFFFFFFFFFF",mpl$lab$util$DoubleMath.numToHex(a=Number.MAX_VALUE));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));
module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="0000000000000000",mpl$lab$util$DoubleMath.numToHex(a=0));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="3FD5555555555555",mpl$lab$util$DoubleMath.numToHex(a=1/3));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,
mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="7FF8000000000000",mpl$lab$util$DoubleMath.numToHex(Number.NaN));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertTrue(isNaN(mpl$lab$util$DoubleMath.hexToNum(b)));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="7FF0000000000000",mpl$lab$util$DoubleMath.numToHex(a=
Number.POSITIVE_INFINITY));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b="FFF0000000000000",mpl$lab$util$DoubleMath.numToHex(a=Number.NEGATIVE_INFINITY));module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(a,mpl$lab$util$DoubleMath.hexToNum(b));a=mpl$lab$util$DoubleMath.hexToNum(b=
"BFFE4A7FE8F6B56D");module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals(b,mpl$lab$util$DoubleMath.numToHex(a));b=Math.cos(a);mpl$lab$util$Util.isChrome()||mpl$lab$util$Util.isIPhone()?module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals("BFD4470BB84303C8",mpl$lab$util$DoubleMath.numToHex(b)):module$contents$myphysicslab$lab$util$test$DoubleMathTest_assertEquals("BFD4470BB84303C9",
mpl$lab$util$DoubleMath.numToHex(b))}}mpl$lab$util$test$DoubleMathTest.groupName="DoubleMathTest.";class mpl$lab$util$DoubleRect{constructor(a,b,c,d){this.left_=mpl$lab$util$Util.testNumber(a);this.right_=mpl$lab$util$Util.testNumber(c);this.bottom_=mpl$lab$util$Util.testNumber(b);this.top_=mpl$lab$util$Util.testNumber(d);if(a>c)throw"DoubleRect: left > right "+a+" > "+c;if(b>d)throw"DoubleRect: bottom > top "+b+" > "+d;}toString(){return mpl$lab$util$Util.ADVANCED?
"":"DoubleRect{left_: "+mpl$lab$util$Util.NF(this.left_)+", bottom_: "+mpl$lab$util$Util.NF(this.bottom_)+", right_: "+mpl$lab$util$Util.NF(this.right_)+", top_: "+mpl$lab$util$Util.NF(this.top_)+"}"}static clone(a){return new mpl$lab$util$DoubleRect(a.getLeft(),a.getBottom(),a.getRight(),a.getTop())}static isDuckType(a){return a instanceof mpl$lab$util$DoubleRect?
!0:mpl$lab$util$Util.ADVANCED?!1:void 0!==a.getLeft&&void 0!==a.getRight&&void 0!==a.getTop&&void 0!==a.getBottom&&void 0!==a.translate&&void 0!==a.scale}static make(a,b){const c=Math.min(a.getX(),b.getX()),d=Math.max(a.getX(),b.getX()),e=Math.min(a.getY(),b.getY());a=Math.max(a.getY(),b.getY());return new mpl$lab$util$DoubleRect(c,e,d,a)}static makeCentered(a,b,c){const d=a.getX();a=a.getY();return new mpl$lab$util$DoubleRect(d-
b/2,a-c/2,d+b/2,a+c/2)}static makeCentered2(a,b){const c=a.getX();a=a.getY();const d=b.getX();b=b.getY();return new mpl$lab$util$DoubleRect(c-d/2,a-b/2,c+d/2,a+b/2)}contains(a){return a.getX()>=this.left_&&a.getX()<=this.right_&&a.getY()>=this.bottom_&&a.getY()<=this.top_}equals(a){return a===this?!0:a instanceof mpl$lab$util$DoubleRect?a.getLeft()==this.left_&&a.getRight()==this.right_&&a.getBottom()==this.bottom_&&a.getTop()==this.top_:!1}expand(a,
b){b=void 0===b?a:b;return new mpl$lab$util$DoubleRect(this.getLeft()-a,this.getBottom()-b,this.getRight()+a,this.getTop()+a)}getBottom(){return this.bottom_}getCenter(){return new mpl$lab$util$Vector(this.getCenterX(),this.getCenterY())}getCenterX(){return(this.left_+this.right_)/2}getCenterY(){return(this.bottom_+this.top_)/2}getHeight(){return this.top_-this.bottom_}getLeft(){return this.left_}getRight(){return this.right_}getTop(){return this.top_}getWidth(){return this.right_-
this.left_}intersection(a){const b=Math.max(this.left_,a.getLeft()),c=Math.max(this.bottom_,a.getBottom()),d=Math.min(this.right_,a.getRight());a=Math.min(this.top_,a.getTop());return b>d||c>a?mpl$lab$util$DoubleRect.EMPTY_RECT:new mpl$lab$util$DoubleRect(b,c,d,a)}isEmpty(a){a=a||1E-16;return this.getWidth()<a||this.getHeight()<a}maybeVisible(a,b){if(this.contains(a)||this.contains(b))return!0;const c=a.getX();a=a.getY();const d=b.getX();b=b.getY();
let e=this.left_;if(c<e&&d<e)return!1;e=this.right_;if(c>e&&d>e)return!1;e=this.bottom_;if(a<e&&b<e)return!1;e=this.top_;return a>e&&b>e?!1:!0}nearEqual(a,b){return mpl$lab$util$Util.veryDifferent(this.left_,a.getLeft(),b)||mpl$lab$util$Util.veryDifferent(this.bottom_,a.getBottom(),b)||mpl$lab$util$Util.veryDifferent(this.right_,a.getRight(),b)||mpl$lab$util$Util.veryDifferent(this.top_,a.getTop(),b)?!1:
!0}scale(a,b){b=void 0===b?a:b;const c=this.getCenterX(),d=this.getCenterY(),e=this.getWidth(),f=this.getHeight();return new mpl$lab$util$DoubleRect(c-a*e/2,d-b*f/2,c+a*e/2,d+b*f/2)}translate(a,b){"number"!==typeof a&&(b=a.getY(),a=a.getX());if("number"!==typeof a||"number"!==typeof b)throw"";return new mpl$lab$util$DoubleRect(this.left_+a,this.bottom_+b,this.right_+a,this.top_+b)}union(a){return new mpl$lab$util$DoubleRect(Math.min(this.left_,
a.getLeft()),Math.min(this.bottom_,a.getBottom()),Math.max(this.right_,a.getRight()),Math.max(this.top_,a.getTop()))}unionPoint(a){return new mpl$lab$util$DoubleRect(Math.min(this.left_,a.getX()),Math.min(this.bottom_,a.getY()),Math.max(this.right_,a.getX()),Math.max(this.top_,a.getY()))}}mpl$lab$util$DoubleRect.EMPTY_RECT=new mpl$lab$util$DoubleRect(0,0,0,0);const module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$DoubleRectTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$DoubleRectTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$DoubleRectTest{static test(){module$contents$myphysicslab$lab$util$test$DoubleRectTest_schedule(mpl$lab$util$test$DoubleRectTest.testDoubleRect)}static testDoubleRect(){module$contents$myphysicslab$lab$util$test$DoubleRectTest_startTest(mpl$lab$util$test$DoubleRectTest.groupName+"testDoubleRect");var a=new mpl$lab$util$DoubleRect(-5,-6,5,6);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-5,
a.getLeft());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(5,a.getRight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-6,a.getBottom());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(6,a.getTop());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(10,a.getWidth());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(12,a.getHeight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(0,
a.getCenterX());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(0,a.getCenterY());const b=mpl$lab$util$DoubleRect.makeCentered(mpl$lab$util$Vector.ORIGIN,2,2);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-1,b.getLeft());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(1,b.getRight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-1,b.getBottom());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(1,
b.getTop());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(2,b.getWidth());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(2,b.getHeight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.contains(mpl$lab$util$Vector.ORIGIN));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.contains(new mpl$lab$util$Vector(.9,.9)));var c=mpl$lab$util$DoubleRect.clone(b);
module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.nearEqual(c));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.nearEqual(c,1E-16));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.equals(c));c=b.translate(1E-15,1E-15);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.nearEqual(c));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertFalse(b.nearEqual(c,1E-16));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertFalse(b.equals(c));
c=b.translate(2E-14,2E-14);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertFalse(b.nearEqual(c));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.nearEqual(c,1E-13));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertFalse(b.equals(c));c=b.translate(3,-3);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(2,c.getLeft());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(4,c.getRight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-4,
c.getBottom());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-2,c.getTop());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(3,c.getCenterX());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-3,c.getCenterY());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(2,c.getWidth());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(2,c.getHeight());var d=c.union(b);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(5,
d.getWidth());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(5,d.getHeight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-1,d.getLeft());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(4,d.getRight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-4,d.getBottom());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(1,d.getTop());var e=b.scale(.5);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertRoughlyEquals(1,
e.getWidth(),1E-15);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertRoughlyEquals(1,e.getHeight(),1E-15);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertRoughlyEquals(-.5,e.getLeft(),1E-15);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertRoughlyEquals(.5,e.getRight(),1E-15);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertRoughlyEquals(-.5,e.getBottom(),1E-15);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertRoughlyEquals(.5,
e.getTop(),1E-15);e=b.translate(new mpl$lab$util$Vector(3,-3));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(e.equals(c));e=b.unionPoint(new mpl$lab$util$Vector(4,-4));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(e.equals(d));d=mpl$lab$util$DoubleRect.makeCentered2(new mpl$lab$util$Vector(2,-2),new mpl$lab$util$Vector(3,1));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(3,
d.getWidth());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(1,d.getHeight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(.5,d.getLeft());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(3.5,d.getRight());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-2.5,d.getBottom());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertEquals(-1.5,d.getTop());module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertThrows(()=>
b.translate(3));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertThrows(()=>new mpl$lab$util$DoubleRect(1,-1,-1,1));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertThrows(()=>new mpl$lab$util$DoubleRect(-1,1,1,-1));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertThrows(()=>new mpl$lab$util$DoubleRect(-1,-1,1,NaN));d=Number.NEGATIVE_INFINITY;e=Number.POSITIVE_INFINITY;e=new mpl$lab$util$DoubleRect(d,
d,e,e);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(e.contains(mpl$lab$util$Vector.ORIGIN));var f=new mpl$lab$util$Vector(1E3,1E3);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(e.contains(f));f=e.translate(f);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(f.equals(e));d=new mpl$lab$util$DoubleRect(d,d,1,1);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(d.contains(mpl$lab$util$Vector.ORIGIN));
module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertFalse(d.contains(new mpl$lab$util$Vector(2,2)));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertFalse(d.contains(new mpl$lab$util$Vector(0,2)));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.equals(b.intersection(a)));module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(b.intersection(b.translate(10,10)).isEmpty());a=mpl$lab$util$DoubleRect.makeCentered(mpl$lab$util$Vector.ORIGIN,
4,4);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(a.intersection(c).isEmpty());c=new mpl$lab$util$DoubleRect(-1,1,4,3);module$contents$myphysicslab$lab$util$test$DoubleRectTest_assertTrue(a.intersection(c).nearEqual(new mpl$lab$util$DoubleRect(-1,1,2,2)))}}mpl$lab$util$test$DoubleRectTest.groupName="DoubleRectTest.";goog.events.KeyEvent=function(a,b,c,d){goog.events.BrowserEvent.call(this,d);this.type=goog.events.KeyEvent.EventType.KEY;this.keyCode=a;this.charCode=b;this.repeat=c};goog.inherits(goog.events.KeyEvent,goog.events.BrowserEvent);goog.events.KeyEvent.EventType={KEY:"key"};class mpl$lab$util$Parser extends mpl$lab$util$Printable{addCommand(a,b,c){}parse(a){}saveStart(){}};class mpl$lab$util$Terminal{constructor(a,b){if(this.term_input_=a)a.spellcheck=!1;if(this.term_output_=b)b.spellcheck=!1;this.keyDownKey_=this.term_input_?goog.events.listen(this.term_input_,goog.events.EventType.KEYDOWN,this.handleKey,!1,this):NaN;this.changeKey_=this.term_input_?goog.events.listen(this.term_input_,goog.events.EventType.CHANGE,this.inputCallback,!0,this):NaN;this.hasAlerted_=!1;this.history_=[];this.histIndex_=-1;this.verbose_=!1;this.regexs_=[];this.recalling=
!1;this.resultStack_=[];this.z={};this.whiteList_="myphysicslab goog length name terminal find".split(" ");this.parser=null;this.vars_="";this.evalCalls_=0;this.prompt_="> ";this.addRegex("eval","terminal.",!1);this.println(mpl$lab$util$Terminal.version())}toString(){return mpl$lab$util$Util.ADVANCED?"":"Terminal{history.length: "+this.history_.length+", regexs_.length: "+this.regexs_.length+", verbose_: "+this.verbose_+", parser: "+(null!=this.parser?
this.parser.toStringShort():"null")+"}"}addRegex(a,b,c,d){if(!mpl$lab$util$Util.ADVANCED){if(0==a.length)throw"";if(void 0!==c?c:1){c=a.split("|");const e=this.vars_.split("|");c.forEach(f=>{e.includes(f)||(this.vars_+=(0<this.vars_.length?"|":"")+f)})}a={regex:new RegExp("(^|[^\\w.$])("+a+")\\b","g"),replace:"$1"+b+"$2"};if(!this.hasRegex(a))return d?this.regexs_.unshift(a):this.regexs_.push(a),!0}return!1}addRegex2(a,b,c){return mpl$lab$util$Util.ADVANCED||
(a={regex:a,replace:b},this.hasRegex(a))?!1:(c?this.regexs_.unshift(a):this.regexs_.push(a),!0)}addWhiteList(a,b){b=void 0!==b?b:!0;this.whiteList_.includes(a)||(this.whiteList_.push(a),b&&(this.vars_+=(0<this.vars_.length?"|":"")+a))}alertOnce(a){this.hasAlerted_?console.log(a):(this.hasAlerted_=!0,alert(a))}static badCommand(a,b,c){for(let d=0,e=c.length;d<e;d++)if(b==c[d])return!1;return(new RegExp("\\b"+b+"\\b","g")).test(a)}clear(){this.term_output_&&(this.term_output_.value="")}commands(){if(this.term_output_){let a=
this.term_output_.value;a=a.split("\n");a=a.map(b=>b.trim());a=module$contents$goog$array_filter(a,function(b){return 2<b.length&&"> "==b.substr(0,2)&&!b.match(/^> (terminal|this).(remember|commands)\(\s*\);?$/)});return a=a.map(b=>b.substr(2))}return[]}destroy(){goog.events.unlistenByKey(this.keyDownKey_);goog.events.unlistenByKey(this.changeKey_)}static deUnicode(a){return a.replace(/\\(x|u00)([0-9a-fA-F]{2})/g,function(b,c,d){return String.fromCharCode(Number("0x"+d))})}static encodeURIComponent(a){return encodeURIComponent(a).replace(/[!'()*]/g,
b=>"%"+b.charCodeAt(0).toString(16))}eval(a,b,c){b="boolean"===typeof b?b:!0;if((c=c||!1)&&!b)throw"";a=mpl$lab$util$Terminal.deUnicode(a).trim();if(!a.match(/^\s*$/)){this.evalCalls_++;1<this.evalCalls_&&(b=!1);b?(goog.asserts.assert(1==this.evalCalls_),goog.asserts.assert(0==this.resultStack_.length),this.history_.unshift(a),this.histIndex_=-1):(this.resultStack_.push(this.result),this.result=void 0);var d=this.prompt_;try{mpl$lab$util$Terminal.vetBrackets(a);
let e=["",a];for(;e=this.splitAtSemicolon(e[1]),e[0];){const f=e[0].trim();if(0!=f.length)a:{b&&this.println(d+f);if(f.match(/^\s*\/\/.*/))continue;if(null!=this.parser){const h=this.parser.parse(f);if(void 0!==h){this.result=h;break a}}const g=this.expand(f);b&&this.verbose_&&this.println(d.trim()+d+g);this.result=this.myEval(g)}}b&&void 0!==this.result&&";"!=a.slice(-1)&&this.println(String(this.result));b&&void 0!==this.afterEvalFn_&&this.afterEvalFn_()}catch(e){if(b?(this.result=void 0,this.println(e)):
this.result=this.resultStack_.pop(),!c)throw this.evalCalls_--,e.message+="\nScript: "+a,e;}this.evalCalls_--;if(b)return this.scrollDown(),this.result;a=this.result;this.result=this.resultStack_.pop();return a}}expand(a){a=this.replaceVar(a);let b="",c=0;for(;a;){if(1E4<++c)throw"Terminal.expand";var d=a.match(/^[^'"/]+/);if(null!==d&&(d=d[0],a=a.slice(d.length),d=module$contents$goog$array_reduce(this.regexs_,function(e,f){return e.replace(f.regex,f.replace)},d),mpl$lab$util$Terminal.vetCommand(d,
this.whiteList_),b+=d,0==a.length))break;if(b.match(/.*[=(][ ]*$/)&&(d=a.match(/^\/[^*/](\\\/|[^\\/])*\//),null!==d)){d=d[0];a=a.slice(d.length);b+=d;continue}0<a.length&&"/"==a[0]?(b+="/",a=a.slice(1)):(d=a.match(/^"(\\.|[^\\"])*"/),null!==d?(d=d[0],a=a.slice(d.length),b+=d):0<a.length&&'"'==a[0]?(b+='"',a=a.slice(1)):(d=a.match(/^'(\\.|[^\\'])*'/),null!==d?(d=d[0],a=a.slice(d.length),b+=d):0<a.length&&"'"==a[0]&&(b+="'",a=a.slice(1))))}return b}focus(){this.term_input_&&this.term_input_.focus()}forget(){try{const a=
window.localStorage;null!=a&&a.removeItem(this.pageKey())}catch(a){this.println("//cannot access localStorage due to: "+a)}}handleKey(a){this.term_input_&&this.term_output_&&(a.metaKey&&a.keyCode==goog.events.KeyCodes.K?(this.term_output_.value="",a.preventDefault()):a.keyCode==goog.events.KeyCodes.UP||a.keyCode==goog.events.KeyCodes.DOWN?(-1==this.histIndex_&&""!=this.term_input_.value&&(this.history_.unshift(this.term_input_.value),this.histIndex_=0),a.keyCode==goog.events.KeyCodes.UP?this.histIndex_<
this.history_.length-1&&(this.histIndex_++,this.term_input_.value=this.history_[this.histIndex_]):a.keyCode==goog.events.KeyCodes.DOWN&&(0<this.histIndex_?(this.histIndex_--,this.term_input_.value=this.history_[this.histIndex_]):(this.histIndex_=-1,this.term_input_.value="")),a.preventDefault()):a.keyCode==goog.events.KeyCodes.ENTER&&this.eval(this.term_input_.value,!0,!0))}hasRegex(a){const b=a.regex.toString(),c=a.replace;return module$contents$goog$array_some(this.regexs_,d=>d.replace==c&&d.regex.toString()==
b)}inputCallback(a){this.term_input_&&this.eval(this.term_input_.value,!0,!0)}myEval(a){if(mpl$lab$util$Util.ADVANCED)console.log("JavaScript is disabled due to advanced compilation; try a simple-compiled version: "+a),this.println("JavaScript is disabled due to advanced compilation; try a simple-compiled version");else return eval(a)}pageKey(){let a=window.location.href;const b=a.indexOf("?");-1<b&&(a=a.slice(0,b));return a}parseURL(){null!=this.parser&&this.parser.saveStart();
var a=window.location.href;const b=a.indexOf("?");return-1<b?(a=a.slice(b+1),a=decodeURIComponent(a),this.eval(a),!0):!1}parseURLorRecall(){this.parseURL()||this.recall()}println(a){this.term_output_&&(this.term_output_.value+=a+"\n",this.scrollDown())}recall(a){a="boolean"===typeof a?a:!0;this.recalling=!0;try{const b=window.localStorage;if(null!=b){const c=b.getItem(this.pageKey());c&&(this.println("//start of stored scripts"),a?c.split("\n").forEach(d=>this.eval(d)):c.split("\n").forEach(d=>this.println(d)),
this.println("//end of stored scripts"))}}catch(b){this.println("//cannot access localStorage due to: "+b)}this.recalling=!1}remember(a){a=void 0!==a?a:this.commands();Array.isArray(a)&&(a=a.join("\n"));try{this.pageKey();const b=window.localStorage;null!=b&&b.setItem(this.pageKey(),a)}catch(b){this.println("//cannot access localStorage due to: "+b)}}replaceVar(a){const b=a.match(/^\s*(var|let|const)\s+(\w[\w_\d]*)(.*)/);return b?(goog.asserts.assert(4<=b.length),this.addRegex(b[2],"z.",!0,!0),b[2]+
b[3]):a}scrollDown(){this.term_input_&&this.term_output_&&(this.term_output_.scrollTop=this.term_output_.scrollHeight-this.term_output_.offsetHeight,this.term_input_.value="")}setAfterEval(a){this.afterEvalFn_=a}setParser(a){this.parser=a;mpl$lab$util$Util.ADVANCED||a.addCommand("vars",()=>String(this.vars()),"lists available variables")}setPrompt(a){this.prompt_=String(a)}setVerbose(a){this.verbose_=a}splitAtSemicolon(a){let b=0,c="",d,e,f="",g=!1,h=!1,k=!1,l="",m,p;m=0;for(p=
a.length;m<p;m++)if(d=f," "!=f&&"\t"!=f&&"\n"!=f&&(c=f),f=a[m],e=m+1<p?a[m+1]:"\x00",g){if("\n"==f&&(g=!1,0==b))break}else if(h)"/"==f&&"\\"!=d&&(h=!1);else if(k)f==l&&"\\"!=d&&(k=!1,l="");else if("/"==f)"/"==e?g=!0:"*"==e||!c||"="!=c&&"("!=c||(h=!0);else if('"'==f||"'"==f)k=!0,l=f;else if(";"==f&&0==b)break;else"{"==f?b++:"}"==f&&b--;return[a.slice(0,m+1),a.slice(m+1)]}static stdRegex(a){a.addRegex("methodsOf|propertiesOf|prettyPrint","Util.",!1);a.addRegex("println","terminal.",!1);a.addRegex("getParameter|getSubject",
"terminal.parser.",!1);a.addRegex("result|z|parser","terminal.",!0);a.addRegex("AffineTransform|CircularList|Clock|ClockTask|DoubleRect|EasyScriptParser|GenericEvent|GenericMemo|GenericObserver|MutableVector|ParameterBoolean|ParameterNumber|ParameterString|RandomLCG|Terminal|Timer|Util|Vector","mpl$$lab$$util$$",!1);a.addRegex("NF0|NF2|NF1S|NF3|NF5|NF5E|nf5|nf7|NF7|NF7E|NF9|NFE|NFSCI","Util.",!1);a.addRegex("CollisionAdvance|ConcreteVariable|ConcreteLine|ConstantForceLaw|CoordType|DampingLaw|EulersMethod|ExpressionVariable|Force|FunctionVariable|GravityLaw|Gravity2Law|MassObject|ModifiedEuler|NumericalPath|ParametricPath|OvalPath|PointMass|RungeKutta|ShapeType|SimList|SimpleAdvance|Spring|VarsList",
"mpl$$lab$$model$$",!1);a.addRegex("CoordMap|DisplayClock|DisplayConnector|DisplayLine|DisplayList|DisplayPath|DisplayShape|DisplayRope|DisplaySpring|DisplayText|DrawingMode|DrawingStyle|EnergyBarGraph|HorizAlign|LabCanvas|LabView|ScreenRect|SimView|VerticalAlign","mpl$$lab$$view$$",!1);a.addRegex("CircularEdge|CollisionHandling|ConcreteVertex|ContactSim|EdgeRange|ExtraAccel|ImpulseSim|Joint|JointUtil|PathJoint|Polygon|RigidBodyCollision|RigidBodySim|Rope|Scrim|Shapes|StraightEdge|ThrusterSet|Vertex|Walls",
"mpl$$lab$$engine2D$$",!1);a.addRegex("AutoScale|DisplayGraph|GraphColor|GraphLine|GraphStyle|DisplayAxes|VarsHistory","mpl$$lab$$graph$$",!1);a.addRegex("EventHandler|MouseTracker|RigidBodyEventHandler|SimController|SimRunner|ViewPanner","mpl$$lab$$app$$",!1);a.addRegex("ButtonControl|CheckBoxControl|ChoiceControl|NumericControl|SliderControl|ToggleControl","mpl$$lab$$controls$$",!1)}vars(){const a=this.vars_.split("|");module$contents$goog$array_sort(a);return a}static version(){return"myPhysicsLab version "+
mpl$lab$util$Util.VERSION+", "+(mpl$lab$util$Util.ADVANCED?"advanced":"simple")+"-compiled on "+mpl$lab$util$Util.COMPILE_TIME+"."}static vetBrackets(a){const b=/^\w\s*\[\s*\d*\s*\]$/,c=a.match(/\w\s*\[[^\]]*?\]/g);if(null!=c)for(let d=0,e=c.length;d<e;d++)if(!b.test(c[d]))throw"prohibited usage of square brackets in script: "+a+" Only positive integer is allowed in brackets.  Try using Util.get(array, index) or Util.set(array, index, value).";
}static vetCommand(a,b,c){for(let d in window)if(mpl$lab$util$Terminal.badCommand(a,d,b))throw'prohibited name: "'+d+'" found in script: '+a;if(/\b(myEval|Function|with|__proto__|call|apply|caller|callee|arguments|addWhiteList|vetCommand|badCommand|whiteList_|addRegex|addRegex2|regexs_|afterEvalFn_|setAfterEval|parentNode|parentElement|innerHTML|outerHTML|offsetParent|insertAdjacentHTML|appendChild|insertBefore|replaceChild|removeChild|ownerDocument|insertBefore|setParser|defineNames|globalEval|window|defineProperty|defineProperties|__defineGetter__|__defineSetter__)\b/g.test(a)||
c&&c.test(a))throw"prohibited name in script: "+a;}}mpl$lab$util$Terminal.en={REMEMBER:"remember",FORGET:"forget"};mpl$lab$util$Terminal.de_strings={REMEMBER:"erinnern",FORGET:"vergessen"};mpl$lab$util$Terminal.i18n="de"===goog.LOCALE?mpl$lab$util$Terminal.de_strings:mpl$lab$util$Terminal.en;class mpl$lab$util$EasyScriptParser{constructor(a,b){mpl$lab$util$EasyScriptParser.checkUniqueNames(a);this.subjects_=a;this.dependent_=Array.isArray(b)?b:[];module$contents$goog$array_removeAllIf(this.subjects_,c=>this.dependent_.includes(c),this);this.subjects_=this.subjects_.concat(this.dependent_);this.initialNonDependent_=[];this.initialDependent_=[];this.allSubjParamNames_=[];this.allParamNames_=[];this.allSubjects_=[];this.unique_=[];this.commandNames_=
[];this.commandFns_=[];this.commandHelp_=[];this.addCommand("url",()=>this.scriptURL(),"prints URL with script to recreate current state");this.addCommand("script",()=>this.script(),"prints script to recreate current state");this.addCommand("values",()=>mpl$lab$util$Util.prettyPrint(this.values()),"shows available parameters and their current values");this.addCommand("names",()=>mpl$lab$util$Util.prettyPrint(this.names().join(";")),"shows available parameter names (format is SUBJECT.PARAMETER)");
this.addCommand("help",()=>this.help(),"prints this help text");this.update()}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", subjects_: ["+this.subjects_.map(a=>a.toStringShort())+"]}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"EasyScriptParser{subjects_.length: "+this.subjects_.length+"}"}addCommand(a,b,c){this.commandNames_.push(a);this.commandFns_.push(b);this.commandHelp_.push(c)}static checkUniqueNames(a){const b=
[];a.forEach(c=>{c=c.getName();if(b.includes(c))throw"duplicate Subject name: "+c;b.push(c)})}getParameter(a){a=mpl$lab$util$Util.toName(a);const b=a.split(".");let c,d;if(1==b.length)c="",d=b[0];else if(2==b.length)c=b[0],d=b[1];else return null;if(""==c){if(1<module$contents$goog$array_count(this.allParamNames_,e=>e==d))throw"multiple Subjects have Parameter "+d;a=this.allParamNames_.indexOf(d)}else a=this.allSubjParamNames_.indexOf(a);return-1<a?this.allSubjects_[a].getParameter(d):
null}getSubject(a){const b=mpl$lab$util$Util.toName(a);return module$contents$goog$array_find(this.subjects_,c=>c.getName()==b)}getSubjects(){return Array.from(this.subjects_)}help(){let a=mpl$lab$util$Terminal.version()+"\n";a+='Use the "values" command to see what can be set and the syntax.\n\ncommand-K            clear Terminal window\narrow up/down        retrieve previous or next command\n';mpl$lab$util$Util.ADVANCED||(a+=
'getParameter(name)   see "names" command, returns the named Parameter\ngetSubject(name)     see "names" command, returns the named Subject\npropertiesOf(app)    shows properties of that object\nmethodsOf(app)       shows methods defined on that object\nprettyPrint(app)     prints the object nicely\nprettyPrint(app, 3)  prints the object, expanding 3 levels of sub-objects\nprintln(1+2)         prints to the Terminal window\nresult               the result of the previous command\n');for(let b=0,c=
this.commandNames_.length;b<c;b++){let d=this.commandNames_[b];for(;20>d.length;)d+=" ";a+=d+" "+this.commandHelp_[b]+"\n"}return a}names(){return Array.from(this.allSubjParamNames_)}namesAndValues(a,b,c){a=1==a;const d=this.allSubjects_.map((g,h)=>g.getParameter(this.allParamNames_[h]));let e=d;b||(e=module$contents$goog$array_filter(e,g=>!g.isComputed()));e=module$contents$goog$array_filter(e,g=>this.dependent_.includes(g.getSubject())==a,this);const f=/^[a-zA-Z0-9_]+$/;b=e.map(g=>{const h=mpl$lab$util$Util.toName(g.getName()),
k=d.indexOf(g);let l=g.getValue();"string"!==typeof l||f.test(l)||(l='"'+l+'"');return!c&&this.unique_[k]?h+"="+l:mpl$lab$util$Util.toName(g.getSubject().getName())+"."+h+"="+l});return 0<b.length?b.join(";")+";":""}parse(a){";"==a.slice(-1)&&(a=a.slice(0,a.length-1));for(let d=0,e=this.commandNames_.length;d<e;d++)if(a.toLowerCase()==this.commandNames_[d])return this.commandFns_[d]();a=a.split("=");const b=mpl$lab$util$Util.toName(a[0].trim()),c=this.getParameter(b);
if(!(null==c||2<a.length)){if(2==a.length){let d;try{d=mpl$lab$util$EasyScriptParser.unquote(a[1].trim()),c.setFromString(d)}catch(e){throw e.message+='\nwhile setting value "'+d+'" on parameter '+b,e;}}return c.getValue()}}saveStart(){this.initialNonDependent_=this.namesAndValues(!1).split(";");this.initialDependent_=this.namesAndValues(!0).split(";")}script(){let a=this.namesAndValues(!1).split(";");a=a.concat(this.namesAndValues(!0).split(";"));const b=module$contents$goog$array_concat(this.initialNonDependent_,
this.initialDependent_);module$contents$goog$array_removeAllIf(a,c=>b.includes(c));return a.join(";")+(0<a.length?";":"")}scriptURL(){return window.location.href.replace(/\.html\?.*$/,".html")+"?"+mpl$lab$util$Terminal.encodeURIComponent(this.script())}static unquote(a){if(2>a.length)return a;var b=a.charAt(0),c=a.charAt(a.length-1);if(b==c&&('"'==b||"'"==b)){b="";for(let d=1,e=a.length-1;d<e;d++)if(c=a[d],"\\"==c)if(d++,d<e)switch(c=a[d],c){case "0":b+="\x00";break;case "b":b+=
"\b";break;case "t":b+="\t";break;case "n":b+="\n";break;case "v":b+="\v";break;case "f":b+="\f";break;case "r":b+="\r";break;case '"':b+='"';break;case "'":b+="'";break;case "\\":b+="\\";break;default:b+="\\"+c}else b+=c;else b+=c;return b}return a}update(){const a=module$contents$goog$array_reduce(this.subjects_,function(b,c){c=module$contents$goog$array_filter(c.getParameters(),d=>"DELETED"!=d.getName());return b.concat(c)},[]);this.allSubjects_=a.map(b=>b.getSubject());this.allParamNames_=a.map(b=>
mpl$lab$util$Util.toName(b.getName()));this.allSubjParamNames_=a.map(b=>mpl$lab$util$Util.toName(b.getSubject().getName()+"."+b.getName()));this.unique_=this.allParamNames_.map(b=>1==module$contents$goog$array_count(this.allParamNames_,c=>c==b));this.initialDependent_=this.namesAndValues(!0).split(";")}values(){return this.namesAndValues(!1,!0,!0)+this.namesAndValues(!0,!0,!0)}}
mpl$lab$util$EasyScriptParser.en={URL_SCRIPT:"share",PROMPT_URL:"Press command-C to copy this URL to the clipboard, it will replicate this simulation with current parameters.",WARN_URL_2048:"WARNING: URL is longer than 2048 characters."};mpl$lab$util$EasyScriptParser.de_strings={URL_SCRIPT:"mitteilen",PROMPT_URL:"Dr\u00fccken Sie command-C um diesen URL in die Zwischenablage zu kopieren, dies beinhaltet die eingegebenen Parameter.",WARN_URL_2048:"Achtung: URL is l\u00e4nger als 2048 Zeichen."};
mpl$lab$util$EasyScriptParser.i18n="de"===goog.LOCALE?mpl$lab$util$EasyScriptParser.de_strings:mpl$lab$util$EasyScriptParser.en;class mpl$lab$model$Variable extends mpl$lab$util$Parameter{getBroadcast(){}getSequence(){}getValue(){}incrSequence(){}setBroadcast(a){}setValue(a){}setValueSmooth(a){}};class mpl$lab$model$ConcreteVariable{constructor(a,b,c){this.varsList_=a;this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(b));this.localName_=c;this.value_=0;this.isComputed_=!1;this.seq_=0;this.doesBroadcast_=!1}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", isComputed_: "+this.isComputed_+', localName_: "'+this.localName_+'", varsList_: '+this.varsList_.toStringShort()+
"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+'{name_: "'+this.name_+'", value_: '+mpl$lab$util$Util.NF(this.getValue())+"}"}getClassName(){return"ConcreteVariable"}getAsString(){return this.value_.toString()}getBroadcast(){return this.doesBroadcast_}getChoices(){return[]}getName(a){return a?this.localName_:this.name_}getSequence(){return this.seq_}getSubject(){return this.varsList_}getValue(){return this.value_}getValues(){return[]}incrSequence(){this.seq_++}isComputed(){return this.isComputed_}nameEquals(a){return this.name_==
mpl$lab$util$Util.toName(a)}setBroadcast(a){this.doesBroadcast_=a}setComputed(a){this.isComputed_=a}setFromString(a){const b=Number(a);if(isNaN(b))throw"not a number: "+a+" (ConcreteVariable.setFromString)";this.setValue(b)}setValue(a){this.value_!=a&&(this.value_=a,this.seq_++,this.doesBroadcast_&&this.varsList_.broadcast(this))}setValueSmooth(a){this.value_=a}};class mpl$lab$model$VarsList extends mpl$lab$util$AbstractSubject{constructor(a,b,c){super(void 0!==c?c:"VARIABLES");this.timeIdx_=-1;if(a.length!=b.length)throw"varNames and localNames are different lengths";for(let d=0,e=a.length;d<e;d++){c=a[d];if("string"!==typeof c)throw"variable name "+c+" is not a string i="+d;c=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(c));a[d]=c;c==mpl$lab$model$VarsList.TIME&&
(this.timeIdx_=d)}if(!mpl$lab$util$Util.uniqueElements(a))throw"duplicate variable names";this.varList_=[];for(let d=0,e=a.length;d<e;d++)this.varList_.push(new mpl$lab$model$ConcreteVariable(this,a[d],b[d]));this.history_=mpl$lab$util$Util.DEBUG;this.histArray_=[]}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", timeIdx_: "+this.timeIdx_+", history_: "+this.history_+
", "+this.varList_.map((a,b)=>"("+b+") "+a.getName()+": "+mpl$lab$util$Util.NF5E(a.getValue()))+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":super.toStringShort().slice(0,-1)+", numVars: "+this.varList_.length+"}"}getClassName(){return"VarsList"}addParameter(a){throw"addParameter not allowed on VarsList";}addVariable(a){const b=a.getName();if(b==mpl$lab$model$VarsList.DELETED)throw'variable cannot be named "'+
mpl$lab$model$VarsList.DELETED+'"';const c=this.findOpenSlot_(1);this.varList_[c]=a;b==mpl$lab$model$VarsList.TIME&&(this.timeIdx_=c);this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$VarsList.VARS_MODIFIED));return c}addVariables(a,b){const c=a.length;if(0==c)throw"";if(a.length!=b.length)throw"names and localNames are different lengths";const d=this.findOpenSlot_(c);for(let e=0;e<c;e++){const f=
mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(a[e]));if(f==mpl$lab$model$VarsList.DELETED)throw"variable cannot be named ''+VarsList.DELETED+''";const g=d+e;this.varList_[g]=new mpl$lab$model$ConcreteVariable(this,f,b[e]);f==mpl$lab$model$VarsList.TIME&&(this.timeIdx_=g)}this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$VarsList.VARS_MODIFIED));
return d}checkIndex_(a){if(0>a||a>=this.varList_.length)throw"bad variable index="+a+"; numVars="+this.varList_.length;}deleteVariables(a,b){if(0!=b){if(0>b||0>a||a+b>this.varList_.length)throw"deleteVariables";for(let c=a;c<a+b;c++)this.varList_[c]=new mpl$lab$model$ConcreteVariable(this,mpl$lab$model$VarsList.DELETED,mpl$lab$model$VarsList.DELETED);this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$VarsList.VARS_MODIFIED))}}findOpenSlot_(a){if(0>
a)throw"";var b=0;let c=-1;for(let d=0,e=this.varList_.length;d<e;d++)if(this.varList_[d].getName()==mpl$lab$model$VarsList.DELETED){if(-1==c&&(c=d),b++,b>=a)return c}else c=-1,b=0;0<b?(a-=b,goog.asserts.assert(0<=c),goog.asserts.assert(0<a)):c=this.varList_.length;for(b=0;b<a;b++)this.varList_.push(new mpl$lab$model$ConcreteVariable(this,mpl$lab$model$VarsList.DELETED,mpl$lab$model$VarsList.DELETED));
return c}getHistory(){return this.history_}getParameter(a){a=mpl$lab$util$Util.toName(a);const b=module$contents$goog$array_find(this.varList_,c=>c.getName()==a);if(null!=b)return b;throw"Parameter not found "+a;}getParameters(){return Array.from(this.varList_)}getTime(){if(0>this.timeIdx_)throw"no time variable";return this.getValue(this.timeIdx_)}getValue(a){this.checkIndex_(a);return this.varList_[a].getValue()}getValues(a){return this.varList_.map(b=>!a&&b.isComputed()?
NaN:b.getValue())}getVariable(a){let b;if("number"===typeof a)b=a;else if("string"===typeof a){if(a=mpl$lab$util$Util.toName(a),b=module$contents$goog$array_findIndex(this.varList_,c=>c.getName()==a),0>b)throw"unknown variable name "+a;}else throw"";this.checkIndex_(b);return this.varList_[b]}incrSequence(a){if(0==arguments.length)for(let b=0,c=this.varList_.length;b<c;b++)this.varList_[b].incrSequence();else for(let b=0,c=arguments.length;b<c;b++){const d=arguments[b];this.checkIndex_(d);
this.varList_[d].incrSequence()}}numVariables(){return this.varList_.length}printOneHistory(a){let b="";if(this.history_&&a<=this.histArray_.length){a=this.histArray_[this.histArray_.length-a];b="//time = "+mpl$lab$util$Util.NF5(a[a.length-1]);for(let c=0,d=a.length-1;c<d;c++)b+="\nsim.getVarsList().setValue("+c+", "+a[c]+");"}return b}printHistory(a){if("number"===typeof a)return this.printOneHistory(a);a=this.printOneHistory(10);a+="\n"+this.printOneHistory(3);a+="\n"+this.printOneHistory(2);
return a+="\n"+this.printOneHistory(1)}saveHistory(){if(this.history_){const a=this.getValues();a.push(this.getTime());this.histArray_.push(a);20<this.histArray_.length&&this.histArray_.shift()}}setComputed(a){for(let b=0,c=arguments.length;b<c;b++){const d=arguments[b];this.checkIndex_(d);this.varList_[d].setComputed(!0)}}setHistory(a){this.history_=a}setTime(a){this.setValue(this.timeIdx_,a)}setValue(a,b,c){this.checkIndex_(a);a=this.varList_[a];if(a.getName()!=mpl$lab$model$VarsList.DELETED){if(isNaN(b)&&
!a.isComputed())throw"cannot set variable "+a.getName()+" to NaN";c?a.setValueSmooth(b):a.setValue(b)}}setValues(a,b){const c=this.varList_.length,d=a.length;if(d>c)throw"setValues bad length n="+d+" > N="+c;for(let e=0;e<c;e++)e<d&&this.setValue(e,a[e],b)}timeIndex(){return this.timeIdx_}toArray(){return Array.from(this.varList_)}}mpl$lab$model$VarsList.VARS_MODIFIED="VARS_MODIFIED";mpl$lab$model$VarsList.DELETED="DELETED";
mpl$lab$model$VarsList.TIME="TIME";mpl$lab$model$VarsList.en={TIME:"time"};mpl$lab$model$VarsList.de_strings={TIME:"Zeit"};mpl$lab$model$VarsList.i18n="de"===goog.LOCALE?mpl$lab$model$VarsList.de_strings:mpl$lab$model$VarsList.en;const mpl$lab$view$HorizAlign={LEFT:"LEFT",MIDDLE:"MIDDLE",RIGHT:"RIGHT",FULL:"FULL",VALUE:"VALUE",getChoices:()=>[mpl$lab$view$HorizAlign.i18n.LEFT,mpl$lab$view$HorizAlign.i18n.MIDDLE,mpl$lab$view$HorizAlign.i18n.RIGHT,mpl$lab$view$HorizAlign.i18n.FULL,mpl$lab$view$HorizAlign.i18n.VALUE],getValues:()=>[mpl$lab$view$HorizAlign.LEFT,
mpl$lab$view$HorizAlign.MIDDLE,mpl$lab$view$HorizAlign.RIGHT,mpl$lab$view$HorizAlign.FULL,mpl$lab$view$HorizAlign.VALUE],stringToEnum:a=>{const b=mpl$lab$view$HorizAlign.getValues();for(let c=0,d=b.length;c<d;c++)if(a===b[c])return b[c];throw"invalid HorizAlign value:  "+a;},en:{LEFT:"left",MIDDLE:"middle",RIGHT:"right",FULL:"full",VALUE:"value"},de_strings:{LEFT:"links",MIDDLE:"mitte",
RIGHT:"rechts",FULL:"voll",VALUE:"Wert"}};mpl$lab$view$HorizAlign.i18n="de"===goog.LOCALE?mpl$lab$view$HorizAlign.de_strings:mpl$lab$view$HorizAlign.en;class mpl$lab$view$ScreenRect{constructor(a,b,c,d){if("number"!==typeof a||"number"!==typeof b||"number"!==typeof c||"number"!==typeof d)throw"";if(0>c||0>d)throw"";this.left_=a;this.top_=b;this.width_=c;this.height_=d}toString(){return mpl$lab$util$Util.ADVANCED?"":"ScreenRect{left_: "+mpl$lab$util$Util.NF(this.left_)+", top_: "+mpl$lab$util$Util.NF(this.top_)+", width_: "+mpl$lab$util$Util.NF(this.width_)+
", height_: "+mpl$lab$util$Util.NF(this.height_)+"}"}static clone(a){return new mpl$lab$view$ScreenRect(a.left_,a.top_,a.width_,a.height_)}equals(a){return this.left_==a.left_&&this.top_==a.top_&&this.width_==a.width_&&this.height_==a.height_}static isDuckType(a){return a instanceof mpl$lab$view$ScreenRect?!0:mpl$lab$util$Util.ADVANCED?!1:void 0!==a.getLeft&&void 0!==a.getTop&&void 0!==a.getWidth&&void 0!==
a.getHeight&&void 0!==a.isEmpty&&void 0!==a.equals&&void 0!==a.nearEqual}getCenterX(){return this.left_+this.width_/2}getCenterY(){return this.top_+this.height_/2}getHeight(){return this.height_}getLeft(){return this.left_}getTop(){return this.top_}getWidth(){return this.width_}isEmpty(a){a=a||1E-14;return this.width_<a||this.height_<a}makeOval(a){const b=this.width_/2,c=this.height_/2;if("function"===typeof a.ellipse)a.beginPath(),a.moveTo(this.left_+this.width_,this.top_+c),a.ellipse(this.left_+
b,this.top_+c,b,c,0,0,2*Math.PI,!1);else{const d=Math.min(b,c);a.beginPath();a.moveTo(this.left_+this.width_,this.top_);a.arc(this.left_+b,this.top_+c,d,0,2*Math.PI,!1);a.closePath()}}makeRect(a){a.rect(this.left_,this.top_,this.width_,this.height_)}nearEqual(a,b){return mpl$lab$util$Util.veryDifferent(this.left_,a.left_,b)||mpl$lab$util$Util.veryDifferent(this.top_,a.top_,b)||mpl$lab$util$Util.veryDifferent(this.width_,a.width_,
b)||mpl$lab$util$Util.veryDifferent(this.height_,a.height_,b)?!1:!0}}mpl$lab$view$ScreenRect.EMPTY_RECT=new mpl$lab$view$ScreenRect(0,0,0,0);const mpl$lab$view$VerticalAlign={TOP:"TOP",MIDDLE:"MIDDLE",BOTTOM:"BOTTOM",FULL:"FULL",VALUE:"VALUE",getChoices:()=>[mpl$lab$view$VerticalAlign.i18n.TOP,mpl$lab$view$VerticalAlign.i18n.MIDDLE,mpl$lab$view$VerticalAlign.i18n.BOTTOM,mpl$lab$view$VerticalAlign.i18n.FULL,mpl$lab$view$VerticalAlign.i18n.VALUE],getValues:()=>[mpl$lab$view$VerticalAlign.TOP,
mpl$lab$view$VerticalAlign.MIDDLE,mpl$lab$view$VerticalAlign.BOTTOM,mpl$lab$view$VerticalAlign.FULL,mpl$lab$view$VerticalAlign.VALUE],stringToEnum:a=>{const b=mpl$lab$view$VerticalAlign.getValues();for(let c=0,d=b.length;c<d;c++)if(a===b[c])return b[c];throw"invalid VerticalAlign value: "+a;},en:{TOP:"top",MIDDLE:"middle",BOTTOM:"bottom",FULL:"full",VALUE:"value"},de_strings:{TOP:"oben",
MIDDLE:"mitte",BOTTOM:"unten",FULL:"voll",VALUE:"Wert"}};mpl$lab$view$VerticalAlign.i18n="de"===goog.LOCALE?mpl$lab$view$VerticalAlign.de_strings:mpl$lab$view$VerticalAlign.en;class mpl$lab$view$CoordMap{constructor(a,b,c,d,e,f){this.screen_left_=mpl$lab$util$Util.testFinite(a);this.screen_bottom_=mpl$lab$util$Util.testFinite(b);this.sim_left_=mpl$lab$util$Util.testFinite(c);this.sim_bottom_=mpl$lab$util$Util.testFinite(d);this.pixel_per_unit_x_=mpl$lab$util$Util.testFinite(e);this.pixel_per_unit_y_=mpl$lab$util$Util.testFinite(f);
a=mpl$lab$util$AffineTransform.IDENTITY;a=a.translate(this.screen_left_,this.screen_bottom_);a=a.scale(this.pixel_per_unit_x_,-this.pixel_per_unit_y_);this.transform_=a=a.translate(-this.sim_left_,-this.sim_bottom_)}toString(){return mpl$lab$util$Util.ADVANCED?"":"CoordMap{screen_left_: "+mpl$lab$util$Util.NF(this.screen_left_)+", screen_bottom_: "+mpl$lab$util$Util.NF(this.screen_bottom_)+", sim_left_: "+
mpl$lab$util$Util.NF(this.sim_left_)+", sim_bottom_: "+mpl$lab$util$Util.NF(this.sim_bottom_)+", pixels_per_unit_x_: "+mpl$lab$util$Util.NF(this.pixel_per_unit_x_)+", pixels_per_unit_y_: "+mpl$lab$util$Util.NF(this.pixel_per_unit_y_)+(null!=this.transform_)?", transform: "+this.transform_:"}"}static make(a,b,c,d,e){c=mpl$lab$view$HorizAlign.stringToEnum(c||mpl$lab$view$HorizAlign.MIDDLE);
d=mpl$lab$view$VerticalAlign.stringToEnum(d||mpl$lab$view$VerticalAlign.MIDDLE);e=e||1;if(e<mpl$lab$view$CoordMap.MIN_SIZE||!isFinite(e))throw"bad aspectRatio "+e;const f=b.getLeft(),g=b.getBottom(),h=b.getRight()-f,k=b.getTop()-g;if(h<mpl$lab$view$CoordMap.MIN_SIZE||k<mpl$lab$view$CoordMap.MIN_SIZE)throw"simRect cannot be empty "+b;b=a.getTop();const l=a.getLeft(),m=a.getWidth();
a=a.getHeight();var p=0;let t=0,y=0,x=0;c==mpl$lab$view$HorizAlign.FULL&&(y=m/h,p=0);d==mpl$lab$view$VerticalAlign.FULL&&(x=a/k,t=0);if(c!=mpl$lab$view$HorizAlign.FULL||d!=mpl$lab$view$VerticalAlign.FULL)if(c==mpl$lab$view$HorizAlign.FULL?(x=y*e,p=!0):d==mpl$lab$view$VerticalAlign.FULL?(y=x/e,p=!1):(y=m/h,x=y*e,p=!0,a<Math.floor(.5+x*k)&&(x=a/k,y=x/e,p=!1)),
p)switch(goog.asserts.assert(d!=mpl$lab$view$VerticalAlign.FULL),p=0,c=Math.floor(.5+k*x),d){case mpl$lab$view$VerticalAlign.BOTTOM:t=0;break;case mpl$lab$view$VerticalAlign.MIDDLE:t=(a-c)/2;break;case mpl$lab$view$VerticalAlign.TOP:t=a-c;break;default:throw"unsupported alignment "+d;}else switch(goog.asserts.assert(c!=mpl$lab$view$HorizAlign.FULL),t=0,d=Math.floor(.5+h*y),c){case mpl$lab$view$HorizAlign.LEFT:p=
0;break;case mpl$lab$view$HorizAlign.MIDDLE:p=(m-d)/2;break;case mpl$lab$view$HorizAlign.RIGHT:p=m-d;break;default:throw"unsupported alignment "+c;}return new mpl$lab$view$CoordMap(l,b+a,f-p/y,g-t/x,y,x)}static isDuckType(a){return a instanceof mpl$lab$view$CoordMap?!0:mpl$lab$util$Util.ADVANCED?!1:void 0!==a.getAffineTransform&&void 0!==a.simToScreenX&&void 0!==a.simToScreenY&&
void 0!==a.screenToSimX&&void 0!==a.screenToSimY&&void 0!==a.getScaleX&&void 0!==a.getScaleY}getAffineTransform(){return this.transform_}getScaleX(){return this.pixel_per_unit_x_}getScaleY(){return this.pixel_per_unit_y_}screenToSim(a,b){"number"!==typeof a&&(b=a.getY(),a=a.getX());if("number"!==typeof a||"number"!==typeof b)throw"";return new mpl$lab$util$Vector(this.screenToSimX(a),this.screenToSimY(b))}screenToSimRect(a){return new mpl$lab$util$DoubleRect(this.screenToSimX(a.getLeft()),
this.screenToSimY(a.getTop()+a.getHeight()),this.screenToSimX(a.getLeft()+a.getWidth()),this.screenToSimY(a.getTop()))}screenToSimScaleX(a){return a/this.pixel_per_unit_x_}screenToSimScaleY(a){return a/this.pixel_per_unit_y_}screenToSimX(a){return this.sim_left_+(a-this.screen_left_)/this.pixel_per_unit_x_}screenToSimY(a){return this.sim_bottom_+(this.screen_bottom_-a)/this.pixel_per_unit_y_}simToScreen(a){return new mpl$lab$util$Vector(this.simToScreenX(a.getX()),this.simToScreenY(a.getY()))}simToScreenRect(a){return new mpl$lab$view$ScreenRect(this.simToScreenX(a.getLeft()),
this.simToScreenY(a.getTop()),this.simToScreenScaleX(a.getWidth()),this.simToScreenScaleY(a.getHeight()))}simToScreenScaleX(a){return a*this.pixel_per_unit_x_}simToScreenScaleY(a){return a*this.pixel_per_unit_y_}simToScreenX(a){return this.screen_left_+(a-this.sim_left_)*this.pixel_per_unit_x_}simToScreenY(a){return this.screen_bottom_-(a-this.sim_bottom_)*this.pixel_per_unit_y_}}mpl$lab$view$CoordMap.MIN_SIZE=1E-15;class mpl$lab$model$SimObject extends mpl$lab$util$Printable{getBoundsWorld(){}getChanged(){}getExpireTime(){}getName(a){}isMassObject(){}nameEquals(a){}setChanged(){}setExpireTime(a){}similar(a,b){}};class mpl$lab$model$MassObject extends mpl$lab$model$SimObject{alignTo(a,b,c){}bodyToWorld(a){}bodyToWorldTransform(){}createCanvasPath(a){}getAngle(){}getAngularVelocity(){}getBottomBody(){}getBottomWorld(){}getBoundsBody(){}getCenterOfMassBody(){}getCentroidBody(){}getCentroidRadius(){}getCentroidWorld(){}getDragPoints(){}getHeight(){}getKineticEnergy(){}getLeftBody(){}getLeftWorld(){}getMass(){}getMinHeight(){}getPosition(){}getRightBody(){}getRightWorld(){}getTopBody(){}getTopWorld(){}getVelocity(a){}getVerticesBody(){}getWidth(){}getZeroEnergyLevel(){}momentAboutCM(){}momentum(){}rotationalEnergy(){}rotateBodyToWorld(a){}rotateWorldToBody(a){}setAngle(a){}setAngularVelocity(a){}setCenterOfMass(a,
b){}setDragPoints(a){}setMass(a){}setMinHeight(a){}setMomentAboutCM(a){}setPosition(a,b){}setPositionX(a){}setPositionY(a){}setVelocity(a,b){}setVelocityX(a){}setVelocityY(a){}setZeroEnergyLevel(a){}translationalEnergy(){}worldToBody(a){}};class mpl$lab$view$DisplayObject extends mpl$lab$util$Printable{contains(a){}draw(a,b){}isDragable(){}getChanged(){}getMassObjects(){}getPosition(){}getSimObjects(){}getZIndex(){}setDragable(a){}setPosition(a){}setZIndex(a){}};goog.color={};
goog.color.names={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgreen:"#006400",
darkgrey:"#a9a9a9",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",
ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",green:"#008000",greenyellow:"#adff2f",grey:"#808080",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgreen:"#90ee90",lightgrey:"#d3d3d3",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",
lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",
moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",
seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"};goog.color.parse=function(a){var b={};a=String(a);var c=goog.color.prependHashIfNecessaryHelper(a);if(goog.color.isValidHexColor_(c))return b.hex=goog.color.normalizeHex(c),b.type="hex",b;c=goog.color.isValidRgbColor_(a);if(c.length)return b.hex=goog.color.rgbArrayToHex(c),b.type="rgb",b;if(goog.color.names&&(c=goog.color.names[a.toLowerCase()]))return b.hex=c,b.type="named",b;throw Error(a+" is not a valid color string");};
goog.color.isValidColor=function(a){var b=goog.color.prependHashIfNecessaryHelper(a);return!!(goog.color.isValidHexColor_(b)||goog.color.isValidRgbColor_(a).length||goog.color.names&&goog.color.names[a.toLowerCase()])};goog.color.parseRgb=function(a){var b=goog.color.isValidRgbColor_(a);if(!b.length)throw Error(a+" is not a valid RGB color");return b};goog.color.hexToRgbStyle=function(a){return goog.color.rgbStyle_(goog.color.hexToRgb(a))};goog.color.hexTripletRe_=/#(.)(.)(.)/;
goog.color.normalizeHex=function(a){if(!goog.color.isValidHexColor_(a))throw Error("'"+a+"' is not a valid hex color");4==a.length&&(a=a.replace(goog.color.hexTripletRe_,"#$1$1$2$2$3$3"));return a.toLowerCase()};goog.color.hexToRgb=function(a){a=goog.color.normalizeHex(a);a=parseInt(a.substr(1),16);return[a>>16,a>>8&255,a&255]};
goog.color.rgbToHex=function(a,b,c){a=Number(a);b=Number(b);c=Number(c);if(a!=(a&255)||b!=(b&255)||c!=(c&255))throw Error('"('+a+","+b+","+c+'") is not a valid RGB color');b=a<<16|b<<8|c;return 16>a?"#"+(16777216|b).toString(16).substr(1):"#"+b.toString(16)};goog.color.rgbArrayToHex=function(a){return goog.color.rgbToHex(a[0],a[1],a[2])};
goog.color.rgbToHsl=function(a,b,c){a/=255;b/=255;c/=255;var d=Math.max(a,b,c),e=Math.min(a,b,c),f=0,g=0,h=.5*(d+e);d!=e&&(d==a?f=60*(b-c)/(d-e):d==b?f=60*(c-a)/(d-e)+120:d==c&&(f=60*(a-b)/(d-e)+240),g=0<h&&.5>=h?(d-e)/(2*h):(d-e)/(2-2*h));return[Math.round(f+360)%360,g,h]};goog.color.rgbArrayToHsl=function(a){return goog.color.rgbToHsl(a[0],a[1],a[2])};goog.color.hueToRgb_=function(a,b,c){0>c?c+=1:1<c&&--c;return 1>6*c?a+6*(b-a)*c:1>2*c?b:2>3*c?a+(b-a)*(2/3-c)*6:a};
goog.color.hslToRgb=function(a,b,c){a/=360;if(0==b)c=b=a=255*c;else{var d=.5>c?c*(1+b):c+b-b*c;var e=2*c-d;c=255*goog.color.hueToRgb_(e,d,a+1/3);b=255*goog.color.hueToRgb_(e,d,a);a=255*goog.color.hueToRgb_(e,d,a-1/3)}return[Math.round(c),Math.round(b),Math.round(a)]};goog.color.hslArrayToRgb=function(a){return goog.color.hslToRgb(a[0],a[1],a[2])};goog.color.validHexColorRe_=/^#(?:[0-9a-f]{3}){1,2}$/i;goog.color.isValidHexColor_=function(a){return goog.color.validHexColorRe_.test(a)};
goog.color.rgbColorRe_=/^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;goog.color.isValidRgbColor_=function(a){var b=a.match(goog.color.rgbColorRe_);if(b){a=Number(b[1]);var c=Number(b[2]);b=Number(b[3]);if(0<=a&&255>=a&&0<=c&&255>=c&&0<=b&&255>=b)return[a,c,b]}return[]};goog.color.prependZeroIfNecessaryHelper=function(a){return 1==a.length?"0"+a:a};goog.color.prependHashIfNecessaryHelper=function(a){return"#"==a.charAt(0)?a:"#"+a};
goog.color.rgbStyle_=function(a){return"rgb("+a.join(",")+")"};goog.color.hsvToRgb=function(a,b,c){var d=0,e=0,f=0;if(0==b)f=e=d=c;else{var g=Math.floor(a/60),h=a/60-g;a=c*(1-b);var k=c*(1-b*h);b=c*(1-b*(1-h));switch(g){case 1:d=k;e=c;f=a;break;case 2:d=a;e=c;f=b;break;case 3:d=a;e=k;f=c;break;case 4:d=b;e=a;f=c;break;case 5:d=c;e=a;f=k;break;case 6:case 0:d=c,e=b,f=a}}return[Math.round(d),Math.round(e),Math.round(f)]};
goog.color.rgbToHsv=function(a,b,c){var d=Math.max(Math.max(a,b),c),e=Math.min(Math.min(a,b),c);if(e==d)e=a=0;else{var f=d-e;e=f/d;a=60*(a==d?(b-c)/f:b==d?2+(c-a)/f:4+(a-b)/f);0>a&&(a+=360);360<a&&(a-=360)}return[a,e,d]};goog.color.rgbArrayToHsv=function(a){return goog.color.rgbToHsv(a[0],a[1],a[2])};goog.color.hsvArrayToRgb=function(a){return goog.color.hsvToRgb(a[0],a[1],a[2])};goog.color.hexToHsl=function(a){a=goog.color.hexToRgb(a);return goog.color.rgbToHsl(a[0],a[1],a[2])};
goog.color.hslToHex=function(a,b,c){return goog.color.rgbArrayToHex(goog.color.hslToRgb(a,b,c))};goog.color.hslArrayToHex=function(a){return goog.color.rgbArrayToHex(goog.color.hslToRgb(a[0],a[1],a[2]))};goog.color.hexToHsv=function(a){return goog.color.rgbArrayToHsv(goog.color.hexToRgb(a))};goog.color.hsvToHex=function(a,b,c){return goog.color.rgbArrayToHex(goog.color.hsvToRgb(a,b,c))};goog.color.hsvArrayToHex=function(a){return goog.color.hsvToHex(a[0],a[1],a[2])};
goog.color.hslDistance=function(a,b){var c=.5>=a[2]?a[1]*a[2]:a[1]*(1-a[2]);var d=.5>=b[2]?b[1]*b[2]:b[1]*(1-b[2]);return(a[2]-b[2])*(a[2]-b[2])+c*c+d*d-2*c*d*Math.cos(2*(a[0]/360-b[0]/360)*Math.PI)};goog.color.blend=function(a,b,c){c=goog.math.clamp(c,0,1);return[Math.round(b[0]+c*(a[0]-b[0])),Math.round(b[1]+c*(a[1]-b[1])),Math.round(b[2]+c*(a[2]-b[2]))]};goog.color.darken=function(a,b){return goog.color.blend([0,0,0],a,b)};
goog.color.lighten=function(a,b){return goog.color.blend([255,255,255],a,b)};goog.color.highContrast=function(a,b){for(var c=[],d=0;d<b.length;d++)c.push({color:b[d],diff:goog.color.yiqBrightnessDiff_(b[d],a)+goog.color.colorDiff_(b[d],a)});c.sort(function(e,f){return f.diff-e.diff});return c[0].color};goog.color.yiqBrightness_=function(a){return Math.round((299*a[0]+587*a[1]+114*a[2])/1E3)};goog.color.yiqBrightnessDiff_=function(a,b){return Math.abs(goog.color.yiqBrightness_(a)-goog.color.yiqBrightness_(b))};
goog.color.colorDiff_=function(a,b){return Math.abs(a[0]-b[0])+Math.abs(a[1]-b[1])+Math.abs(a[2]-b[2])};class mpl$lab$model$AbstractSimObject{constructor(a,b){a=a||"SIM_OBJ"+mpl$lab$model$AbstractSimObject.ID++;this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(a));this.localName_=b||a;this.expireTime_=mpl$lab$util$Util.POSITIVE_INFINITY;this.changed_=!0}toString(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+'{name_: "'+this.getName()+
'", expireTime_: '+mpl$lab$util$Util.NF(this.expireTime_)+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+'{name_: "'+this.getName()+'"}'}getBoundsWorld(){}getChanged(){return this.changed_?(this.changed_=!1,!0):!1}getClassName(){}getExpireTime(){return this.expireTime_}getName(a){return a?this.localName_:this.name_}isMassObject(){return!1}nameEquals(a){return this.name_==mpl$lab$util$Util.toName(a)}setChanged(){this.changed_=
!0}setExpireTime(a){this.expireTime_=a;return this}similar(a,b){return a==this}}mpl$lab$model$AbstractSimObject.ID=1;class mpl$lab$model$AbstractMassObject extends mpl$lab$model$AbstractSimObject{constructor(a,b){super(a,b);this.mass_=1;this.loc_world_=mpl$lab$util$Vector.ORIGIN;this.sinAngle_=this.angle_=0;this.cosAngle_=1;this.velocity_=mpl$lab$util$Vector.ORIGIN;this.angular_velocity_=0;this.cm_body_=mpl$lab$util$Vector.ORIGIN;this.zeroEnergyLevel_=null;this.dragPts_=[mpl$lab$util$Vector.ORIGIN];
this.moment_=0;this.minHeight_=mpl$lab$util$Util.NaN}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+", mass_: "+mpl$lab$util$Util.NF(this.mass_)+", loc_world_: "+this.loc_world_+", angle_: "+this.angle_+", velocity_: "+this.velocity_+", angular_velocity_: "+mpl$lab$util$Util.NF(this.angular_velocity_)+", cm_body_: "+this.cm_body_+", zeroEnergyLevel_: "+mpl$lab$util$Util.NF(this.zeroEnergyLevel_)+
", moment_: "+mpl$lab$util$Util.NF(this.moment_)+", dragPts_: ["+this.dragPts_.map(a=>a.toString())+"]}"}alignTo(a,b,c){c=void 0===c?this.angle_:c;const d=a.getX()-this.cm_body_.getX();a=a.getY()-this.cm_body_.getY();const e=Math.sin(c),f=Math.cos(c);this.setPosition(new mpl$lab$util$Vector(b.getX()-(d*f-a*e),b.getY()-(d*e+a*f)),c)}bodyToWorld(a){var b=a.getX()-this.cm_body_.getX();const c=a.getY()-this.cm_body_.getY();a=this.loc_world_.getX()+(b*this.cosAngle_-
c*this.sinAngle_);b=this.loc_world_.getY()+(b*this.sinAngle_+c*this.cosAngle_);return new mpl$lab$util$Vector(a,b)}bodyToWorldTransform(){let a=new mpl$lab$util$AffineTransform(1,0,0,1,this.loc_world_.getX(),this.loc_world_.getY());a=a.rotate(this.angle_);return a.translate(-this.cm_body_.getX(),-this.cm_body_.getY())}createCanvasPath(a){}getAngle(){return this.angle_}getAngularVelocity(){return this.angular_velocity_}getBottomBody(){}getBottomWorld(){let a=
mpl$lab$util$Util.POSITIVE_INFINITY;this.getVerticesBody().forEach(b=>{b=this.bodyToWorld(b);b.getY()<a&&(a=b.getY())});return a}getBoundsBody(){return new mpl$lab$util$DoubleRect(this.getLeftBody(),this.getBottomBody(),this.getRightBody(),this.getTopBody())}getBoundsWorld(){return new mpl$lab$util$DoubleRect(this.getLeftWorld(),this.getBottomWorld(),this.getRightWorld(),this.getTopWorld())}getCenterOfMassBody(){return this.cm_body_}getCentroidBody(){}getCentroidRadius(){}getCentroidWorld(){return this.bodyToWorld(this.getCentroidBody())}getDragPoints(){return Array.from(this.dragPts_)}getHeight(){return this.getTopBody()-
this.getBottomBody()}getKineticEnergy(){return this.translationalEnergy()+this.rotationalEnergy()}getLeftBody(){}getLeftWorld(){let a=mpl$lab$util$Util.POSITIVE_INFINITY;this.getVerticesBody().forEach(b=>{b=this.bodyToWorld(b);b.getX()<a&&(a=b.getX())});return a}getMass(){return this.mass_}getMinHeight(){}getPosition(){return this.loc_world_}getRightBody(){}getRightWorld(){let a=mpl$lab$util$Util.NEGATIVE_INFINITY;this.getVerticesBody().forEach(b=>{b=
this.bodyToWorld(b);b.getX()>a&&(a=b.getX())});return a}getTopBody(){}getTopWorld(){let a=mpl$lab$util$Util.NEGATIVE_INFINITY;this.getVerticesBody().forEach(b=>{b=this.bodyToWorld(b);b.getY()>a&&(a=b.getY())});return a}getWidth(){return this.getRightBody()-this.getLeftBody()}getVelocity(a){return void 0!==a?(a=this.rotateBodyToWorld(mpl$lab$util$Vector.clone(a).subtract(this.cm_body_)),new mpl$lab$util$Vector(this.velocity_.getX()-
a.getY()*this.angular_velocity_,this.velocity_.getY()+a.getX()*this.angular_velocity_)):this.velocity_}getVerticesBody(){}getZeroEnergyLevel(){return this.zeroEnergyLevel_}isMassObject(){return!0}momentAboutCM(){return this.mass_*this.moment_}momentum(){const a=Array(3);a[0]=this.mass_*this.velocity_.getX();a[1]=this.mass_*this.velocity_.getY();a[2]=this.momentAboutCM()*this.angular_velocity_+this.mass_*(this.loc_world_.getX()*this.velocity_.getY()-this.loc_world_.getY()*this.velocity_.getX());return a}rotateBodyToWorld(a){return mpl$lab$util$Vector.clone(a).rotate(this.cosAngle_,
this.sinAngle_)}rotateWorldToBody(a){return mpl$lab$util$Vector.clone(a).rotate(this.cosAngle_,-this.sinAngle_)}rotationalEnergy(){return.5*this.momentAboutCM()*this.angular_velocity_*this.angular_velocity_}setAngle(a){this.setPosition(this.loc_world_,a)}setAngularVelocity(a){if(!isFinite(a))throw"angular velocity must be finite "+a;this.angular_velocity_=a;this.setChanged()}setCenterOfMass(a,b){this.cm_body_=new mpl$lab$util$Vector(a,b);this.minHeight_=
mpl$lab$util$Util.NaN;this.setChanged()}setDragPoints(a){this.dragPts_=Array.from(a);this.setChanged()}setMass(a){if(0>=a||"number"!==typeof a)throw"mass must be positive "+a;this.mass_=a;this.setChanged();return this}setMinHeight(a){this.minHeight_=a}setMomentAboutCM(a){this.moment_=a;this.setChanged()}setPosition(a,b){this.loc_world_=mpl$lab$util$Vector.clone(a);void 0!==b&&this.angle_!=b&&(this.angle_=b,this.sinAngle_=Math.sin(b),this.cosAngle_=Math.cos(b));
this.setChanged()}setPositionX(a){this.setPosition(new mpl$lab$util$Vector(a,this.loc_world_.getY()))}setPositionY(a){this.setPosition(new mpl$lab$util$Vector(this.loc_world_.getX(),a))}setVelocity(a,b){this.velocity_=mpl$lab$util$Vector.clone(a);void 0!==b&&this.setAngularVelocity(b);this.setChanged()}setVelocityX(a){this.setVelocity(new mpl$lab$util$Vector(a,this.velocity_.getY()))}setVelocityY(a){this.setVelocity(new mpl$lab$util$Vector(this.velocity_.getX(),
a))}setZeroEnergyLevel(a){this.zeroEnergyLevel_=void 0!==a?a:this.loc_world_.getY();this.setChanged();return this}translationalEnergy(){return.5*this.mass_*this.velocity_.lengthSquared()}worldToBody(a){var b=a.getX()-this.loc_world_.getX();const c=a.getY()-this.loc_world_.getY(),d=-this.sinAngle_,e=this.cosAngle_;a=this.cm_body_.getX()+(b*e-c*d);b=this.cm_body_.getY()+(b*d+c*e);return new mpl$lab$util$Vector(a,b)}};const mpl$lab$model$ShapeType={RECTANGLE:1,OVAL:2};class mpl$lab$model$PointMass extends mpl$lab$model$AbstractMassObject{constructor(a,b){void 0===a||""==a?(b=mpl$lab$model$PointMass.ID++,a=mpl$lab$model$PointMass.en.POINT_MASS+b,b=mpl$lab$model$PointMass.i18n.POINT_MASS+b):b=b?b:a;super(a,b);this.mass_=1;this.shape_=mpl$lab$model$ShapeType.OVAL;this.height_=this.width_=1}toString(){return mpl$lab$util$Util.ADVANCED?
"":super.toString().slice(0,-1)+", shape_: "+this.shape_+", width_: "+mpl$lab$util$Util.NF(this.width_)+", height_: "+mpl$lab$util$Util.NF(this.height_)+"}"}getClassName(){return"PointMass"}static makeCircle(a,b,c){b=new mpl$lab$model$PointMass(b,c);b.setWidth(a);b.setHeight(a);return b}static makeOval(a,b,c,d){c=new mpl$lab$model$PointMass(c,d);c.setWidth(a);c.setHeight(b);return c}static makeSquare(a,
b,c){b=new mpl$lab$model$PointMass(b,c);b.setWidth(a);b.setHeight(a);b.setShape(mpl$lab$model$ShapeType.RECTANGLE);return b}static makeRectangle(a,b,c,d){c=new mpl$lab$model$PointMass(c,d);c.setWidth(a);c.setHeight(b);c.setShape(mpl$lab$model$ShapeType.RECTANGLE);return c}createCanvasPath(a){a.beginPath();const b=this.height_/2,c=this.width_/2;if(this.shape_==mpl$lab$model$ShapeType.RECTANGLE)a.rect(-c,
-b,this.width_,this.height_);else if(this.shape_==mpl$lab$model$ShapeType.OVAL)"function"===typeof a.ellipse?(a.moveTo(c,0),a.ellipse(0,0,c,b,0,0,2*Math.PI,!1)):(a.arc(0,0,Math.min(c,b),0,2*Math.PI,!1),a.closePath());else throw"";}getBottomBody(){return-this.height_/2}getCentroidBody(){return mpl$lab$util$Vector.ORIGIN}getCentroidRadius(){const a=this.width_/2,b=this.height_/2;return Math.sqrt(a*a+b*b)}getLeftBody(){return-this.width_/2}getMinHeight(){if(isNaN(this.minHeight_)){const a=
this.cm_body_.getX(),b=this.cm_body_.getY();let c=b-this.getBottomBody(),d=a-this.getLeftBody();d<c&&(c=d);d=this.getTopBody()-b;d<c&&(c=d);d=this.getRightBody()-a;d<c&&(c=d);this.minHeight_=c}return this.minHeight_}getRightBody(){return this.width_/2}getShape(){return this.shape_}getTopBody(){return this.height_/2}getVerticesBody(){const a=this.width_/2,b=this.height_/2;return[new mpl$lab$util$Vector(-a,-b),new mpl$lab$util$Vector(a,-b),new mpl$lab$util$Vector(a,
b),new mpl$lab$util$Vector(-a,b)]}setHeight(a){this.height_=a;this.setChanged();return this}setMass(a){if(0>a||"number"!==typeof a)throw"mass must be non-negative "+a;this.mass_=a;this.setChanged();return this}setShape(a){this.shape_=a;this.setChanged();return this}setWidth(a){this.width_=a;this.setChanged();return this}similar(a,b){return a instanceof mpl$lab$model$PointMass&&a.loc_world_.nearEqual(this.loc_world_,b)&&!mpl$lab$util$Util.veryDifferent(a.width_,
this.width_,b)&&!mpl$lab$util$Util.veryDifferent(a.height_,this.height_,b)&&a.shape_==this.shape_?!0:!1}}mpl$lab$model$PointMass.ID=1;mpl$lab$model$PointMass.en={POINT_MASS:"PointMass"};mpl$lab$model$PointMass.de_strings={POINT_MASS:"Punktmasse"};mpl$lab$model$PointMass.i18n="de"===goog.LOCALE?mpl$lab$model$PointMass.de_strings:mpl$lab$model$PointMass.en;class mpl$lab$view$DisplayShape{constructor(a,b){this.massObject_=null!=a?a:new mpl$lab$model$PointMass("proto");this.proto_=null!=b?b:null;this.dragable_=isFinite(this.massObject_.getMass())&&0<this.massObject_.getDragPoints().length;this.lastColor_=this.getFillStyle();this.isDarkColor_=mpl$lab$view$DisplayShape.darkColor(this.lastColor_);this.changed_=!0}toString(){return mpl$lab$util$Util.ADVANCED?"":
this.toStringShort().slice(0,-1)+", dragable_: "+this.dragable_+', fillStyle: "'+this.getFillStyle()+'", strokeStyle: "'+this.getStrokeStyle()+'", thickness: '+mpl$lab$util$Util.NF(this.getThickness())+", drawDragPoints: "+this.getDrawDragPoints()+", drawCenterOfMass: "+this.getDrawCenterOfMass()+', nameFont: "'+this.getNameFont()+'", nameColor: "'+this.getNameColor()+'", nameRotate: '+mpl$lab$util$Util.NF(this.getNameRotate())+", zIndex: "+this.getZIndex()+
", proto: "+(null!=this.proto_?this.proto_.toStringShort():"null")+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"DisplayShape{massObject_: "+this.massObject_.toStringShort()+"}"}contains(a){a=this.massObject_.worldToBody(a);return this.massObject_.getBoundsBody().contains(a)}static darkColor(a){if("string"!==typeof a||""==a)return!1;var b=a.match(/^rgba\((.*),\s*\d*\.?\d+\)/);null!=b?a="rgb("+b[1]+")":(b=a.match(/^(#[0-9a-hA-H]{3})[0-9a-hA-H]$/),null!=b?a=b[1]:
(b=a.match(/^(#[0-9a-hA-H]{6})[0-9a-hA-H]{2}$/),null!=b&&(a=b[1])));a=goog.color.parse(a);a=goog.color.hexToHsv(a.hex);return 167>a[2]||.57<a[1]&&40>Math.abs(a[0]-240)}draw(a,b){a.save();var c=b.getAffineTransform(),d=1/b.getScaleX();c=c.concatenate(this.massObject_.bodyToWorldTransform());c.setTransform(a);this.massObject_.createCanvasPath(a);this.getImageClip()&&a.clip();var e=this.getFillStyle();e&&(a.fillStyle=e,a.fill());var f=this.getStrokeStyle();if(f){a.lineWidth=b.screenToSimScaleX(this.getThickness());
var g=this.getBorderDash();0<g.length&&"function"===typeof a.setLineDash&&(g=g.map(h=>b.screenToSimScaleX(h)),a.setLineDash(g));a.strokeStyle=f;a.stroke();a.setLineDash([])}f=this.getImage();g=this.getImageDraw();if(null!=f||null!=g)a.translate(this.massObject_.getLeftBody(),this.massObject_.getTopBody()),a.scale(d,-d),this.getImageAT().applyTransform(a),null!=f&&a.drawImage(f,0,0),null!=g&&g(a);if(this.massObject_.getMass()!=mpl$lab$util$Util.POSITIVE_INFINITY){c.setTransform(a);
this.lastColor_!==e&&(this.lastColor_=e,this.isDarkColor_=mpl$lab$view$DisplayShape.darkColor(e));e=b.screenToSimScaleX(1);a.lineWidth=e;if(this.getDrawCenterOfMass()){f=this.massObject_.getCenterOfMassBody();a.strokeStyle=this.isDarkColor_?"#ccc":"black";g=.2*Math.min(this.massObject_.getWidth(),this.massObject_.getHeight());const h=8*e;g>h&&(g=h);a.beginPath();a.moveTo(f.getX()-g,f.getY());a.lineTo(f.getX()+g,f.getY());a.stroke();a.beginPath();a.moveTo(f.getX(),f.getY()-
g);a.lineTo(f.getX(),f.getY()+g);a.stroke()}if(this.getDrawDragPoints()){let h=4*e;e=.15*Math.min(this.massObject_.getWidth(),this.massObject_.getHeight());e<h&&(h=e);this.massObject_.getDragPoints().forEach(k=>{a.fillStyle=this.isDarkColor_?"#ccc":"gray";a.beginPath();a.arc(k.getX(),k.getY(),h,0,2*Math.PI,!1);a.closePath();a.fill()})}}this.getNameFont()&&(e=this.massObject_.getCentroidBody(),c=c.translate(e),(e=this.getNameRotate())&&(c=c.rotate(e)),c=c.scale(d,-d),c.setTransform(a),a.fillStyle=
this.getNameColor(),a.font=this.getNameFont(),a.textAlign="center",d=this.massObject_.getName(!0),c=a.measureText("M").width,a.fillText(d,0,c/2));a.restore()}getBorderDash(){return void 0!==this.borderDash_?this.borderDash_:null!=this.proto_?this.proto_.getBorderDash():[]}getChanged(){return this.massObject_.getChanged()||this.changed_?(this.changed_=!1,!0):!1}getDrawCenterOfMass(){return void 0!==this.drawCenterOfMass_?this.drawCenterOfMass_:null!=this.proto_?this.proto_.getDrawCenterOfMass():!1}getDrawDragPoints(){return void 0!==
this.drawDragPoints_?this.drawDragPoints_:null!=this.proto_?this.proto_.getDrawDragPoints():!1}getFillStyle(){return void 0!==this.fillStyle_?this.fillStyle_:null!=this.proto_?this.proto_.getFillStyle():"lightGray"}getImage(){return void 0!==this.image_?this.image_:null!=this.proto_?this.proto_.getImage():null}getImageAT(){return void 0!==this.imageAT_?this.imageAT_:null!=this.proto_?this.proto_.getImageAT():mpl$lab$util$AffineTransform.IDENTITY}getImageClip(){return void 0!==
this.imageClip_?this.imageClip_:null!=this.proto_?this.proto_.getImageClip():!1}getImageDraw(){return void 0!==this.imageDraw_?this.imageDraw_:null!=this.proto_?this.proto_.getImageDraw():null}getMassObjects(){return[this.massObject_]}getNameColor(){return void 0!==this.nameColor_?this.nameColor_:null!=this.proto_?this.proto_.getNameColor():"black"}getNameFont(){return void 0!==this.nameFont_?this.nameFont_:null!=this.proto_?this.proto_.getNameFont():""}getNameRotate(){return void 0!==this.nameRotate_?
this.nameRotate_:null!=this.proto_?this.proto_.getNameRotate():0}getPosition(){return this.massObject_.getPosition()}getPrototype(){return this.proto_}getSimObjects(){return[this.massObject_]}getStrokeStyle(){return void 0!==this.strokeStyle_?this.strokeStyle_:null!=this.proto_?this.proto_.getStrokeStyle():""}getThickness(){return void 0!==this.thickness_?this.thickness_:null!=this.proto_?this.proto_.getThickness():1}getZIndex(){return void 0!==this.zIndex_?this.zIndex_:null!=this.proto_?this.proto_.getZIndex():
0}isDragable(){return this.dragable_}setBorderDash(a){this.borderDash_=a;this.changed_=!0;return this}setDragable(a){this.dragable_=a}setDrawCenterOfMass(a){this.drawCenterOfMass_=a;this.changed_=!0;return this}setDrawDragPoints(a){this.drawDragPoints_=a;this.changed_=!0;return this}setFillStyle(a){this.fillStyle_=a;this.changed_=!0;return this}setImage(a){this.image_=a;this.changed_=!0;return this}setImageAT(a){this.imageAT_=a;this.changed_=!0;return this}setImageClip(a){this.imageClip_=a;this.changed_=
!0;return this}setImageDraw(a){this.imageDraw_=a;this.changed_=!0;return this}setNameColor(a){this.nameColor_=a;this.changed_=!0;return this}setNameFont(a){this.nameFont_=a;this.changed_=!0;return this}setNameRotate(a){this.nameRotate_=a;this.changed_=!0;return this}setPosition(a){this.massObject_.setPosition(a);this.changed_=!0}setPrototype(a){this.proto_=a;return this}setStrokeStyle(a){this.strokeStyle_=a;this.changed_=!0;return this}setThickness(a){this.thickness_=a;this.changed_=!0;return this}setZIndex(a){this.zIndex_=
a;this.changed_=!0}};const mpl$lab$model$CoordType={BODY:0,WORLD:1};class mpl$lab$model$Line extends mpl$lab$model$SimObject{getEndPoint(){}getStartPoint(){}getVector(){}};class mpl$lab$model$Force extends mpl$lab$model$AbstractSimObject{constructor(a,b,c,d,e,f,g){super(a);this.body_=b;this.location_=c;this.direction_=e;this.locationCoordType_=d;this.directionCoordType_=f;this.contactTolerance=this.contactDistance=0;this.torque_=void 0===g?0:g}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+', body: "'+this.body_.getName()+'", location: '+this.location_+", direction: "+
this.direction_+", locationCoordType: "+this.locationCoordType_+", directionCoordType: "+this.directionCoordType_+", torque: "+mpl$lab$util$Util.NF5E(this.torque_)+"}"}getClassName(){return"Force"}getBody(){return this.body_}getBoundsWorld(){return mpl$lab$util$DoubleRect.make(this.getStartPoint(),this.getEndPoint())}getEndPoint(){return this.getStartPoint().add(this.getVector())}getStartPoint(){return this.locationCoordType_==mpl$lab$model$CoordType.BODY?
this.body_.bodyToWorld(this.location_):this.location_}getTorque(){return this.torque_}getVector(){return this.directionCoordType_==mpl$lab$model$CoordType.BODY?this.body_.rotateBodyToWorld(this.direction_):this.direction_}similar(a,b){return a instanceof mpl$lab$model$Force&&a.getName()==this.getName()&&this.getStartPoint().nearEqual(a.getStartPoint(),b)?this.getVector().nearEqual(a.getVector(),b):!1}};class mpl$lab$model$ForceLaw extends mpl$lab$util$Printable{calculateForces(){}disconnect(){}getBodies(){}getPotentialEnergy(){}};class mpl$lab$model$Spring extends mpl$lab$model$AbstractSimObject{constructor(a,b,c,d,e,f,g,h){super(a);this.body1_=b;this.attach1_=mpl$lab$util$Vector.clone(c);this.body2_=d;this.attach2_=mpl$lab$util$Vector.clone(e);this.restLength_=f;this.stiffness_=void 0===g?0:g;this.damping_=0;this.compressOnly_=h||!1}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,
-1)+', body1_:"'+this.body1_.getName()+'", attach1_: '+this.attach1_+', body2_:"'+this.body2_.getName()+'", attach2_: '+this.attach2_+", restLength_: "+mpl$lab$util$Util.NF(this.restLength_)+", stiffness_: "+mpl$lab$util$Util.NF(this.stiffness_)+", damping_: "+mpl$lab$util$Util.NF(this.damping_)+", compressOnly_: "+this.compressOnly_+"}"}getClassName(){return"Spring"}calculateForces(){const a=this.getStartPoint(),b=this.getEndPoint();
var c=b.subtract(a),d=c.length();const e=-this.stiffness_*(d-this.restLength_);var f=-e*(c.getX()/d);c=-e*(c.getY()/d);f=new mpl$lab$util$Vector(f,c,0);0!=this.damping_&&(!this.compressOnly_||d<this.restLength_-1E-10)&&(d=this.body1_.getVelocity(this.attach1_),c=this.body2_.getVelocity(this.attach2_),d=d.subtract(c).multiply(-this.damping_),f=f.add(d));return[new mpl$lab$model$Force("spring",this.body1_,a,mpl$lab$model$CoordType.WORLD,
f,mpl$lab$model$CoordType.WORLD),new mpl$lab$model$Force("spring",this.body2_,b,mpl$lab$model$CoordType.WORLD,f.multiply(-1),mpl$lab$model$CoordType.WORLD)]}disconnect(){}getAttach1(){return this.attach1_}getAttach2(){return this.attach2_}getBodies(){return[this.body1_,this.body2_]}getBody1(){return this.body1_}getBody2(){return this.body2_}getBoundsWorld(){return mpl$lab$util$DoubleRect.make(this.getStartPoint(),
this.getEndPoint())}getDamping(){return this.damping_}getEndPoint(){if(null==this.attach2_||null==this.body2_)throw"";var a=this.body2_.bodyToWorld(this.attach2_);if(this.compressOnly_){const b=this.getStartPoint(),c=b.distanceTo(a),d=this.restLength_;if(c<=d)return a;a=a.subtract(b).normalize();return b.add(a.multiply(d))}return a}getLength(){return this.getEndPoint().distanceTo(this.getStartPoint())}getPotentialEnergy(){const a=this.getStretch();return.5*this.stiffness_*a*a}getRestLength(){return this.restLength_}getStartPoint(){if(null==
this.attach1_||null==this.body1_)throw"";return this.body1_.bodyToWorld(this.attach1_)}getStiffness(){return this.stiffness_}getStretch(){return this.getLength()-this.restLength_}getVector(){return this.getEndPoint().subtract(this.getStartPoint())}setDamping(a){this.damping_=a;this.setChanged();return this}setRestLength(a){this.restLength_=a;this.setChanged()}setStiffness(a){this.stiffness_=a;this.setChanged();return this}};class mpl$lab$view$DisplaySpring{constructor(a,b){this.spring_=null!=a?a:null;this.proto_=null!=b?b:null;this.changed_=!0}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", width: "+mpl$lab$util$Util.NF(this.getWidth())+', colorCompressed: "'+this.getColorCompressed()+'", colorExpanded: "'+this.getColorExpanded()+'", thickness: '+mpl$lab$util$Util.NF(this.getThickness())+
", drawMode: "+this.getDrawMode()+", zIndex: "+this.getZIndex()+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"DisplaySpring{spring_: "+(null!=this.spring_?this.spring_.toStringShort():"null")+"}"}contains(a){return!1}draw(a,b){if(null!=this.spring_){var c=this.spring_.getLength();if(!(1E-6>c||0==this.spring_.getStiffness())){a.save();a.lineWidth=this.getThickness();c<this.spring_.getRestLength()-1E-5?a.strokeStyle=this.getColorCompressed():a.strokeStyle=this.getColorExpanded();
if(this.getDrawMode()===mpl$lab$view$DisplaySpring.JAGGED){b=b.getAffineTransform();var d=this.spring_.getStartPoint();const e=this.spring_.getEndPoint();b=b.translate(d.getX(),d.getY());d=Math.atan2(e.getY()-d.getY(),e.getX()-d.getX());b=b.rotate(d);b=b.scale(c/mpl$lab$view$DisplaySpring.pathLength,this.getWidth()/.5);mpl$lab$view$DisplaySpring.drawSpring(a,b)}else c=b.simToScreen(this.spring_.getStartPoint()),b=b.simToScreen(this.spring_.getEndPoint()),
a.beginPath(),a.moveTo(c.getX(),c.getY()),a.lineTo(b.getX(),b.getY()),a.stroke();a.restore()}}}static drawSpring(a,b){const c=mpl$lab$view$DisplaySpring.pathLength,d=mpl$lab$view$DisplaySpring.pathWidth/2,e=c/16;a.beginPath();b.moveTo(0,0,a);b.lineTo(e,0,a);b.lineTo(2*e,d,a);for(let f=1;3>=f;f++)b.lineTo(4*f*e,-d,a),b.lineTo((4*f+2)*e,d,a);b.lineTo(15*e,0,a);b.lineTo(c,0,a);a.stroke()}getChanged(){return(null==this.spring_?0:this.spring_.getChanged())||
this.changed_?(this.changed_=!1,!0):!1}getColorCompressed(){return void 0!==this.colorCompressed_?this.colorCompressed_:null!=this.proto_?this.proto_.getColorCompressed():"red"}getColorExpanded(){return void 0!==this.colorExpanded_?this.colorExpanded_:null!=this.proto_?this.proto_.getColorExpanded():"green"}getDrawMode(){return void 0!==this.drawMode_?this.drawMode_:null!=this.proto_?this.proto_.getDrawMode():mpl$lab$view$DisplaySpring.JAGGED}getMassObjects(){return[]}getPosition(){return null==
this.spring_?mpl$lab$util$Vector.ORIGIN:this.spring_.getStartPoint().add(this.spring_.getEndPoint()).multiply(.5)}getPrototype(){return this.proto_}getSimObjects(){return null==this.spring_?[]:[this.spring_]}getThickness(){return void 0!==this.thickness_?this.thickness_:null!=this.proto_?this.proto_.getThickness():4}getWidth(){return void 0!==this.width_?this.width_:null!=this.proto_?this.proto_.getWidth():.5}getZIndex(){return void 0!==this.zIndex_?this.zIndex_:null!=this.proto_?
this.proto_.getZIndex():0}isDragable(){return!1}setColorCompressed(a){this.colorCompressed_=a;this.changed_=!0;return this}setColorExpanded(a){this.colorExpanded_=a;this.changed_=!0;return this}setDragable(a){}setDrawMode(a){this.drawMode_=a;this.changed_=!0;return this}setPosition(a){}setPrototype(a){this.proto_=a;return this}setThickness(a){this.thickness_=a;this.changed_=!0;return this}setWidth(a){this.width_=a;this.changed_=!0;return this}setZIndex(a){this.zIndex_=a;this.changed_=!0}}
mpl$lab$view$DisplaySpring.JAGGED=1;mpl$lab$view$DisplaySpring.STRAIGHT=2;mpl$lab$view$DisplaySpring.pathLength=6;mpl$lab$view$DisplaySpring.pathWidth=.5;class mpl$lab$view$DisplayList extends mpl$lab$util$AbstractSubject{constructor(a){super(a||"DISPLAY_LIST_"+mpl$lab$view$DisplayList.NAME_ID++);this.drawables_=[];this.changed_=!0}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", drawables_: ["+this.drawables_.map((a,b)=>b+": "+a.toStringShort())+"]"+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?
"":super.toStringShort().slice(0,-1)+", drawables_.length: "+this.drawables_.length+"}"}getClassName(){return"DisplayList"}add(a){if(!goog.isObject(a))throw"non-object passed to DisplayList.add";const b=a.getZIndex();mpl$lab$util$Util.DEBUG&&this.preExist(a);this.sort();let c=this.drawables_.length,d;for(d=0;d<c;d++){const e=this.drawables_[d].getZIndex();if(b<e)break}module$contents$goog$array_insertAt(this.drawables_,a,d);this.changed_=!0;this.broadcast(new mpl$lab$util$GenericEvent(this,
mpl$lab$view$DisplayList.OBJECT_ADDED,a))}contains(a){if(!goog.isObject(a))throw"non-object passed to DisplayList.contains";return this.drawables_.includes(a)}draw(a,b){this.sort();this.drawables_.forEach(c=>c.draw(a,b))}find(a){if("number"===typeof a){const b=this.drawables_.length;if(0>a||a>=b)return null;this.sort();return this.drawables_[a]}if("string"===typeof a){const b=mpl$lab$util$Util.toName(a);return module$contents$goog$array_find(this.drawables_,
c=>{c=c.getSimObjects();for(let d=0,e=c.length;d<e;d++)if(c[d].getName()==b)return!0;return!1})}return goog.isObject(a)?module$contents$goog$array_find(this.drawables_,b=>{b=b.getSimObjects();return module$contents$goog$array_contains(b,a)}):null}findShape(a){const b=this.find(a);if(b instanceof mpl$lab$view$DisplayShape)return b;throw"DisplayShape not found: "+a;}findSpring(a){const b=this.find(a);if(b instanceof mpl$lab$view$DisplaySpring)return b;
throw"DisplaySpring not found: "+a;}get(a){const b=this.drawables_.length;if(0>a||a>=b)throw a+" is not in range 0 to "+(b-1);this.sort();return this.drawables_[a]}getChanged(){let a=!1;for(let b=0,c=this.drawables_.length;b<c;b++){const d=this.drawables_[b].getChanged();a=a||d}return a||this.changed_?(this.changed_=!1,!0):!1}length(){return this.drawables_.length}preExist(a){if(mpl$lab$util$Util.DEBUG){const b=a.getSimObjects();for(let c=0,d=b.length;c<d;c++){const e=b[c],
f=this.find(e);if(null!=f)throw console.log("*** WARNING PRE-EXISTING DISPLAYOBJECT "+f),console.log("*** FOR SIMOBJECT="+e),console.log("*** WHILE ADDING "+a),"pre-existing object "+f+" for "+e+" adding "+a;}}}prepend(a){if(!goog.isObject(a))throw"non-object passed to DisplayList.add";const b=a.getZIndex();mpl$lab$util$Util.DEBUG&&this.preExist(a);this.sort();for(var c=this.drawables_.length;0<c;c--){const d=this.drawables_[c-1].getZIndex();if(b>d)break}module$contents$goog$array_insertAt(this.drawables_,
a,void 0);this.changed_=!0;this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$DisplayList.OBJECT_ADDED,a))}remove(a){if(!goog.isObject(a))throw"non-object passed to DisplayList.remove";const b=this.drawables_.indexOf(a);-1<b&&(module$contents$goog$array_removeAt(this.drawables_,b),this.changed_=!0,this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$DisplayList.OBJECT_REMOVED,a)))}removeAll(){module$contents$goog$array_forEachRight(this.drawables_,
a=>this.remove(a))}sort(){let a=!0,b=mpl$lab$util$Util.NEGATIVE_INFINITY;for(let c=0,d=this.drawables_.length;c<d;c++){const e=this.drawables_[c].getZIndex();if(e<b){a=!1;break}b=e}a||(module$contents$goog$array_stableSort(this.drawables_,function(c,d){c=c.getZIndex();d=d.getZIndex();return c<d?-1:c>d?1:0}),this.changed_=!0)}toArray(){this.sort();return Array.from(this.drawables_)}}mpl$lab$view$DisplayList.NAME_ID=1;
mpl$lab$view$DisplayList.OBJECT_ADDED="OBJECT_ADDED";mpl$lab$view$DisplayList.OBJECT_REMOVED="OBJECT_REMOVED";class mpl$lab$view$LabView extends mpl$lab$util$MemoList{gainFocus(){}getChanged(){}getCoordMap(){}getDisplayList(){}getName(){}getScreenRect(){}getSimRect(){}loseFocus(){}paint(a){}setCoordMap(a){}setScreenRect(a){}setSimRect(a){}}mpl$lab$view$LabView.COORD_MAP_CHANGED="COORD_MAP_CHANGED";mpl$lab$view$LabView.SCREEN_RECT_CHANGED="SCREEN_RECT_CHANGED";
mpl$lab$view$LabView.SIM_RECT_CHANGED="SIM_RECT_CHANGED";class mpl$lab$view$SimView extends mpl$lab$util$AbstractSubject{constructor(a,b){super(a);if(!(b instanceof mpl$lab$util$DoubleRect)||b.isEmpty())throw"bad simRect: "+b;this.panX=this.panY=.05;this.zoom=1.1;this.simRect_=b;this.screenRect_=new mpl$lab$view$ScreenRect(0,0,800,600);this.horizAlign_=mpl$lab$view$HorizAlign.MIDDLE;this.verticalAlign_=mpl$lab$view$VerticalAlign.MIDDLE;
this.aspectRatio_=1;this.displayList_=new mpl$lab$view$DisplayList;this.scaleTogether_=!0;this.opaqueness=1;this.coordMap_=mpl$lab$view$CoordMap.make(this.screenRect_,this.simRect_,this.horizAlign_,this.verticalAlign_,this.aspectRatio_);this.width_=b.getWidth();this.height_=b.getHeight();this.centerX_=b.getCenterX();this.centerY_=b.getCenterY();this.ratio_=this.height_/this.width_;this.changed_=!0;this.memoList_=new mpl$lab$util$ConcreteMemoList;
this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$lab$view$SimView.en.WIDTH,mpl$lab$view$SimView.i18n.WIDTH,()=>this.getWidth(),c=>this.setWidth(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$lab$view$SimView.en.HEIGHT,mpl$lab$view$SimView.i18n.HEIGHT,()=>this.getHeight(),c=>this.setHeight(c)));this.addParameter((new mpl$lab$util$ParameterNumber(this,
mpl$lab$view$SimView.en.CENTER_X,mpl$lab$view$SimView.i18n.CENTER_X,()=>this.getCenterX(),c=>this.setCenterX(c))).setLowerLimit(Number.NEGATIVE_INFINITY));this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$view$SimView.en.CENTER_Y,mpl$lab$view$SimView.i18n.CENTER_Y,()=>this.getCenterY(),c=>this.setCenterY(c))).setLowerLimit(Number.NEGATIVE_INFINITY));this.addParameter(new mpl$lab$util$ParameterBoolean(this,
mpl$lab$view$SimView.en.SCALE_TOGETHER,mpl$lab$view$SimView.i18n.SCALE_TOGETHER,()=>this.getScaleTogether(),c=>this.setScaleTogether(c)));this.addParameter(new mpl$lab$util$ParameterString(this,mpl$lab$view$SimView.en.VERTICAL_ALIGN,mpl$lab$view$SimView.i18n.VERTICAL_ALIGN,()=>this.getVerticalAlign(),c=>this.setVerticalAlign(mpl$lab$view$VerticalAlign.stringToEnum(c)),
mpl$lab$view$VerticalAlign.getChoices(),mpl$lab$view$VerticalAlign.getValues()));this.addParameter(new mpl$lab$util$ParameterString(this,mpl$lab$view$SimView.en.HORIZONTAL_ALIGN,mpl$lab$view$SimView.i18n.HORIZONTAL_ALIGN,()=>this.getHorizAlign(),c=>this.setHorizAlign(mpl$lab$view$HorizAlign.stringToEnum(c)),mpl$lab$view$HorizAlign.getChoices(),
mpl$lab$view$HorizAlign.getValues()));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$lab$view$SimView.en.ASPECT_RATIO,mpl$lab$view$SimView.i18n.ASPECT_RATIO,()=>this.getAspectRatio(),c=>this.setAspectRatio(c)))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", simRect_: "+this.simRect_+", screenRect_: "+this.screenRect_+", horizAlign_: "+
this.horizAlign_+", verticalAlign_: "+this.verticalAlign_+", aspectRatio_: "+mpl$lab$util$Util.NF5(this.aspectRatio_)+", opaqueness: "+mpl$lab$util$Util.NF5(this.opaqueness)+", coordMap_: "+this.coordMap_+", memoList_: "+this.memoList_+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":super.toStringShort().slice(0,-1)+", displayList_: "+this.displayList_.toStringShort()+"}"}getClassName(){return"SimView"}addMemo(a){this.memoList_.addMemo(a)}gainFocus(){}getAspectRatio(){return this.aspectRatio_}getCenterX(){return this.centerX_}getCenterY(){return this.centerY_}getChanged(){return this.displayList_.getChanged()||
this.changed_?(this.changed_=!1,!0):!1}getCoordMap(){return this.coordMap_}getDisplayList(){return this.displayList_}getHeight(){return this.height_}getHorizAlign(){return this.horizAlign_}getMemos(){return this.memoList_.getMemos()}getScaleTogether(){return this.scaleTogether_}getScreenRect(){return this.screenRect_}getSimRect(){return this.simRect_}getVerticalAlign(){return this.verticalAlign_}getWidth(){return this.width_}loseFocus(){}memorize(){this.memoList_.memorize()}modifySimRect(){var a=
this.centerX_-this.width_/2;const b=this.centerY_-this.height_/2;a=new mpl$lab$util$DoubleRect(a,b,a+this.width_,b+this.height_);this.changed_=!0;this.setSimRect(a)}paint(a){a.save();a.globalAlpha=this.opaqueness;this.displayList_.draw(a,this.coordMap_);a.restore()}panDown(){this.setCenterY(this.centerY_-this.panY*this.height_)}panLeft(){this.setCenterX(this.centerX_-this.panX*this.width_)}panRight(){this.setCenterX(this.centerX_+this.panX*this.width_)}panUp(){this.setCenterY(this.centerY_+
this.panY*this.height_)}realign(){this.setCoordMap(mpl$lab$view$CoordMap.make(this.screenRect_,this.simRect_,this.horizAlign_,this.verticalAlign_,this.aspectRatio_));this.width_=this.simRect_.getWidth();this.height_=this.simRect_.getHeight();this.centerX_=this.simRect_.getCenterX();this.centerY_=this.simRect_.getCenterY();this.ratio_=this.height_/this.width_;this.changed_=!0}removeMemo(a){this.memoList_.removeMemo(a)}setAspectRatio(a){mpl$lab$util$Util.veryDifferent(this.aspectRatio_,
a)&&(this.aspectRatio_=a,this.realign(),this.broadcastParameter(mpl$lab$view$SimView.en.ASPECT_RATIO))}setCenterX(a){mpl$lab$util$Util.veryDifferent(this.centerX_,a)&&(this.centerX_=a,this.modifySimRect())}setCenterY(a){mpl$lab$util$Util.veryDifferent(this.centerY_,a)&&(this.centerY_=a,this.modifySimRect())}setCoordMap(a){if(!mpl$lab$view$CoordMap.isDuckType(a))throw"not a CoordMap: "+a;this.coordMap_=
a;this.changed_=!0;this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabView.COORD_MAP_CHANGED))}setHeight(a){mpl$lab$util$Util.veryDifferent(this.height_,a)&&(this.height_=a,this.scaleTogether_&&(this.width_=this.height_/this.ratio_),this.modifySimRect())}setHorizAlign(a){this.horizAlign_=mpl$lab$view$HorizAlign.stringToEnum(a);this.realign();this.broadcastParameter(mpl$lab$view$SimView.en.HORIZONTAL_ALIGN)}setScaleTogether(a){if(this.scaleTogether_!=
a){if(this.scaleTogether_=a)this.ratio_=this.height_/this.width_;this.changed_=!0;this.broadcastParameter(mpl$lab$view$SimView.en.SCALE_TOGETHER)}}setScreenRect(a){if(!mpl$lab$view$ScreenRect.isDuckType(a))throw"not a ScreenRect: "+a;if(a.isEmpty())throw"empty screenrect";this.screenRect_.equals(a)||(this.screenRect_=a,this.realign(),this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabView.SCREEN_RECT_CHANGED)))}setSimRect(a){if(!mpl$lab$util$DoubleRect.isDuckType(a))throw"not a DoubleRect: "+
a;a.equals(this.simRect_)||(this.simRect_=a,this.realign(),this.broadcastParameter(mpl$lab$view$SimView.en.WIDTH),this.broadcastParameter(mpl$lab$view$SimView.en.HEIGHT),this.broadcastParameter(mpl$lab$view$SimView.en.CENTER_X),this.broadcastParameter(mpl$lab$view$SimView.en.CENTER_Y),this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabView.SIM_RECT_CHANGED)))}setVerticalAlign(a){this.verticalAlign_=
mpl$lab$view$VerticalAlign.stringToEnum(a);this.realign();this.broadcastParameter(mpl$lab$view$SimView.en.VERTICAL_ALIGN)}setWidth(a){mpl$lab$util$Util.veryDifferent(this.width_,a)&&(this.width_=a,this.scaleTogether_&&(this.height_=this.width_*this.ratio_),this.modifySimRect())}zoomIn(){this.setHeight(this.height_/this.zoom)}zoomOut(){this.setHeight(this.height_*this.zoom)}}
mpl$lab$view$SimView.en={SCALE_TOGETHER:"scale X-Y together",WIDTH:"width",HEIGHT:"height",CENTER_X:"center-x",CENTER_Y:"center-y",VERTICAL_ALIGN:"vertical-align",HORIZONTAL_ALIGN:"horizontal-align",ASPECT_RATIO:"aspect-ratio"};mpl$lab$view$SimView.de_strings={SCALE_TOGETHER:"X-Y zusammen skalieren",WIDTH:"Breite",HEIGHT:"H\u00f6he",CENTER_X:"Mitte X",CENTER_Y:"Mitte Y",VERTICAL_ALIGN:"Vertikalejustierung",HORIZONTAL_ALIGN:"Horizontalejustierung",ASPECT_RATIO:"Querschnittsverh\u00e4ltnis"};
mpl$lab$view$SimView.i18n="de"===goog.LOCALE?mpl$lab$view$SimView.de_strings:mpl$lab$view$SimView.en;const module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_startTest=a=>mpl$test$TestRig.startTest(a),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertUndefined=
a=>mpl$test$TestRig.assertUndefined(a),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertElementsEquals=(a,b)=>mpl$test$TestRig.assertElementsEquals(a,b),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertNull=a=>mpl$test$TestRig.assertNull(a);
class mpl$lab$util$test$EasyScriptParserTest{static test(){module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_schedule(mpl$lab$util$test$EasyScriptParserTest.testEasyScript1);module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_schedule(mpl$lab$util$test$EasyScriptParserTest.testEasyScript2)}static testEasyScript1(){module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_startTest(mpl$lab$util$test$EasyScriptParserTest.groupName+
"testEasyScript1");const a=new mpl$lab$model$VarsList("position;velocity;work from damping;time;acceleration;kinetic energy;spring energy;total energy".split(";"),"Position;Geschwindigkeit;Arbeit von D\u00e4mpfung;Zeit;Beschleunigung;kinetische Energie;Federenergie;gesamte Energie".split(";"));a.setComputed(2,4,5,6,7);a.setValues([1.1,2.2,3.3,4.4,5.5,6.6,7.7,8.8]);module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("VARIABLES",a.getName());var b=new mpl$lab$view$ScreenRect(0,
0,500,300),c=new mpl$lab$util$DoubleRect(-5,-5,5,5);const d=new mpl$lab$view$SimView("view1",c);d.setScreenRect(b);module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("VIEW1",d.getName());c=new mpl$lab$util$DoubleRect(0,0,1,1);const e=new mpl$lab$view$SimView("view2",c);e.setScreenRect(b);module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("VIEW2",e.getName());
b=document.createElement("textarea");c=document.createElement("input");c.type="text";window.terminal=new mpl$lab$util$Terminal(c,b);const f=window.terminal;mpl$lab$util$Terminal.stdRegex(f);const g=new mpl$lab$util$EasyScriptParser([a,d,e]);g.saveStart();f.setParser(g);f.z.easyScript=g;f.addRegex("easyScript","z.",!1,!0);module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(1.1,f.eval("position"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(1.1,
f.eval("position;"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(1.1,g.parse("position"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(2.2,g.parse("variables.velocity;"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertUndefined(g.parse("foobar"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(a,g.getSubject("VARIABLES"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(d,
g.getSubject("view1"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(e,g.getSubject("view2"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertNull(g.getSubject("foobar"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(a.getParameter("position"),g.getParameter("position"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(a.getParameter("position"),g.getParameter("variables.position"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertNull(g.getParameter("foobar"));
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertThrows(()=>g.getParameter("width"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(d.getParameter("width"),g.getParameter("view1.width"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(e.getParameter("width"),g.getParameter("view2.width"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("",g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(42,
f.eval("kinetic_energy=42"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(42,f.eval("kinetic_energy"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("",g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(3.14,f.eval("POSITION=3.14"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(3.14,f.eval("VARIABLES.POSITION"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(3.14,
f.eval("variables.position"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("POSITION=3.14;",g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(-3.1456,f.eval("VARIABLES.POSITION=-3.1456"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("POSITION=-3.1456;",g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(-3.1456,f.eval("position"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(-3.1456,
f.eval("time;position"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(-3.1456,f.eval("time;position;"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(4.4,f.eval("time;"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(99,g.parse("total_energy=99"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(99,f.eval("total_energy"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("POSITION=-3.1456;",
g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertThrows(function(){f.eval("width")});module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertThrows(function(){f.eval("height")});module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertThrows(function(){f.eval("SCALE_X_Y_TOGETHER")});module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(10,f.eval("view1.width"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(10,
f.eval("view1.width;"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(10,f.eval("VIEW1.width"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(1,f.eval("view2.width"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(1,f.eval("VIEW2.WIDTH;"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(10,f.eval("view1.height"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(!0,
f.eval("view1.SCALE_X_Y_TOGETHER"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(5,f.eval("view1.width=5"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(5,f.eval("view1.height"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("POSITION=-3.1456;VIEW1.WIDTH=5;VIEW1.HEIGHT=5;",g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(!1,f.eval("view1.SCALE_X_Y_TOGETHER=false"));
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(20,f.eval("view1.height=20;"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(5,f.eval("view1.width"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(!1,f.eval("view1.SCALE_X_Y_TOGETHER"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(!0,f.eval("view2.SCALE_X_Y_TOGETHER"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(2,
f.eval("view2.width=2"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(2,f.eval("view2.height"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("POSITION=-3.1456;VIEW1.WIDTH=5;VIEW1.HEIGHT=20;VIEW1.SCALE_X_Y_TOGETHER=false;VIEW2.WIDTH=2;VIEW2.HEIGHT=2;",g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(1,f.eval("position=1;"));mpl$lab$util$Util.ADVANCED||(f.z.va=a,module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(165.1,
f.eval("position=1; z.va.toArray().reduce((r,v)=>r+v.getValue(), 0)")));b="VARIABLES.POSITION VARIABLES.VELOCITY VARIABLES.WORK_FROM_DAMPING VARIABLES.TIME VARIABLES.ACCELERATION VARIABLES.KINETIC_ENERGY VARIABLES.SPRING_ENERGY VARIABLES.TOTAL_ENERGY VIEW1.WIDTH VIEW1.HEIGHT VIEW1.CENTER_X VIEW1.CENTER_Y VIEW1.SCALE_X_Y_TOGETHER VIEW1.VERTICAL_ALIGN VIEW1.HORIZONTAL_ALIGN VIEW1.ASPECT_RATIO VIEW2.WIDTH VIEW2.HEIGHT VIEW2.CENTER_X VIEW2.CENTER_Y VIEW2.SCALE_X_Y_TOGETHER VIEW2.VERTICAL_ALIGN VIEW2.HORIZONTAL_ALIGN VIEW2.ASPECT_RATIO".split(" ");
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertElementsEquals(b,g.names());mpl$lab$util$Util.ADVANCED||(module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertElementsEquals(b,f.eval("var names_=easyScript.names()")),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(b.length,f.eval("names_.length")),module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("VARIABLES.POSITION",String(f.eval("names_.join(' ').match(/VARIABLES\\.\\w+/)"))),
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(8,f.eval("names_.join(' ').match(/VARIABLES\\.\\w+/g).length")));a.deleteVariables(2,1);g.update();module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("POSITION=1;VIEW1.WIDTH=5;VIEW1.HEIGHT=20;VIEW1.SCALE_X_Y_TOGETHER=false;VIEW2.WIDTH=2;VIEW2.HEIGHT=2;",g.script());module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertElementsEquals("VARIABLES.POSITION VARIABLES.VELOCITY VARIABLES.TIME VARIABLES.ACCELERATION VARIABLES.KINETIC_ENERGY VARIABLES.SPRING_ENERGY VARIABLES.TOTAL_ENERGY VIEW1.WIDTH VIEW1.HEIGHT VIEW1.CENTER_X VIEW1.CENTER_Y VIEW1.SCALE_X_Y_TOGETHER VIEW1.VERTICAL_ALIGN VIEW1.HORIZONTAL_ALIGN VIEW1.ASPECT_RATIO VIEW2.WIDTH VIEW2.HEIGHT VIEW2.CENTER_X VIEW2.CENTER_Y VIEW2.SCALE_X_Y_TOGETHER VIEW2.VERTICAL_ALIGN VIEW2.HORIZONTAL_ALIGN VIEW2.ASPECT_RATIO".split(" "),
g.names());b=new mpl$lab$model$ConcreteVariable(a,"FOO_BAR","foo-bar");b.setValue(7);a.addVariable(b);g.update();module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("POSITION=1;FOO_BAR=7;VIEW1.WIDTH=5;VIEW1.HEIGHT=20;VIEW1.SCALE_X_Y_TOGETHER=false;VIEW2.WIDTH=2;VIEW2.HEIGHT=2;",g.script());mpl$lab$util$Util.ADVANCED||(module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertTrue(f.eval('z.va.getVariable(0).getName()=="POSITION"')),
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertFalse(f.eval('z.va.getVariable(0).getName()=="POSITION;"')));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("FULL",f.eval('view1.vertical_align="FULL"'));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("MIDDLE",f.eval("view1.horizontal_align='MIDDLE'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertThrows(()=>new mpl$lab$util$EasyScriptParser([a,
d,e,a]));g.addCommand("how_are_you",()=>"OK","tells how you are");module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("OK",g.parse("how_are_you"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("OK",g.parse("HOW_ARE_YOU"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("OK",f.eval("how_are_you"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("OK",f.eval("HOW_ARE_YOU"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertUndefined(g.parse("\"foo'bar\".match(/.*'.*/)"));
delete window.terminal}static testEasyScript2(){module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_startTest(mpl$lab$util$test$EasyScriptParserTest.groupName+"testEasyScript2");module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("",mpl$lab$util$EasyScriptParser.unquote("''"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("",mpl$lab$util$EasyScriptParser.unquote('""'));
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals(" ",mpl$lab$util$EasyScriptParser.unquote('" "'));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo",mpl$lab$util$EasyScriptParser.unquote("foo"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo",mpl$lab$util$EasyScriptParser.unquote('"foo"'));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo",
mpl$lab$util$EasyScriptParser.unquote("'foo'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals('foo"bar',mpl$lab$util$EasyScriptParser.unquote('"foo\\"bar"'));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo'bar",mpl$lab$util$EasyScriptParser.unquote("'foo\\'bar'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo\\",mpl$lab$util$EasyScriptParser.unquote('"foo\\"'));
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo\nbar",mpl$lab$util$EasyScriptParser.unquote("'foo\\nbar'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo\tbar",mpl$lab$util$EasyScriptParser.unquote("'foo\\tbar'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo\\nbar",mpl$lab$util$EasyScriptParser.unquote("'foo\\\\nbar'"));
module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("foo'bar",mpl$lab$util$EasyScriptParser.unquote("'foo\\'bar'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals('foo"bar',mpl$lab$util$EasyScriptParser.unquote("'foo\\\"bar'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals('"bar',mpl$lab$util$EasyScriptParser.unquote("'\\\"bar'"));module$contents$myphysicslab$lab$util$test$EasyScriptParserTest_assertEquals("bar'",
mpl$lab$util$EasyScriptParser.unquote("'bar\\''"))}}mpl$lab$util$test$EasyScriptParserTest.groupName="EasyScriptParserTest.";const module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$MutableVectorTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$MutableVectorTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$MutableVectorTest{static test(){module$contents$myphysicslab$lab$util$test$MutableVectorTest_schedule(mpl$lab$util$test$MutableVectorTest.testMutableVector);module$contents$myphysicslab$lab$util$test$MutableVectorTest_schedule(mpl$lab$util$test$MutableVectorTest.testMutableVectorSimilar)}static testMutableVector(){module$contents$myphysicslab$lab$util$test$MutableVectorTest_startTest(mpl$lab$util$test$MutableVectorTest.groupName+
"testMutableVector");var a=new mpl$lab$util$MutableVector(20,30);module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(20,a.getX());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(30,a.getY());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertTrue(a.equals(new mpl$lab$util$Vector(20,30)));var b=new mpl$lab$util$Vector(1,1);a.add(b);module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(21,
a.getX());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(31,a.getY());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(window,goog.global);a=mpl$lab$util$MutableVector.clone(b);module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(1,a.getX());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(1,a.getY());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertTrue(a.equals(b));
module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertTrue(b.equals(a));a.multiply(2);module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(2,a.getX());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(2,a.getY());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertFalse(a.equals(b));module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertFalse(b.equals(a));module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertRoughlyEquals(Math.sqrt(8),
a.length(),1E-15);a.subtract(b);module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(1,a.getX());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(1,a.getY());module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertRoughlyEquals(a.length(),a.distanceTo(mpl$lab$util$Vector.ORIGIN),1E-15);b=a.normalize();module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertRoughlyEquals(1,b.length(),1E-15);module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertEquals(b.getX(),
b.getY())}static testMutableVectorSimilar(){module$contents$myphysicslab$lab$util$test$MutableVectorTest_startTest(mpl$lab$util$test$MutableVectorTest.groupName+"testMutableVectorSimilar");const a=new mpl$lab$util$MutableVector(2,3,4),b=new mpl$lab$util$MutableVector(2.01,3.02,4.015);module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertTrue(a.nearEqual(b,.03));module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertTrue(a.nearEqual(b,
.01));module$contents$myphysicslab$lab$util$test$MutableVectorTest_assertFalse(a.nearEqual(b,.001))}}mpl$lab$util$test$MutableVectorTest.groupName="MutableVectorTest.";const module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1 extends mpl$lab$util$AbstractSubject{constructor(){super("MOCK");this.fooness_=!1;this.fooBarness_=!0}getClassName(){return"MockSubject1"}getFooness(){return this.fooness_}setFooness(a){this.fooness_=a}getFooBarness(){return this.fooBarness_}setFooBarness(a){this.fooBarness_=a}}module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOONESS="FOONESS";
module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOOBARNESS="FOO_BARNESS";
class mpl$lab$util$test$ParameterBooleanTest{static test(){module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_schedule(mpl$lab$util$test$ParameterBooleanTest.testParameterBoolean1)}static testParameterBoolean1(){module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_startTest(mpl$lab$util$test$ParameterBooleanTest.groupName+"testParameterBoolean1");const a=new module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1;
module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertFalse(a.getFooness());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(a.getFooBarness());const b=new mpl$lab$util$ParameterBoolean(a,module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOONESS,module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOONESS,()=>a.getFooness(),d=>a.setFooness(d));a.addParameter(b);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals("FOONESS",
b.getName());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(b.nameEquals("fooness"));module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(a,b.getSubject());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(b instanceof mpl$lab$util$ParameterBoolean);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(b,a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOONESS));
module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertFalse(b.getValue());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals("false",b.getAsString());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(void 0,b.setValue(!0));module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(b.getValue());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals("true",b.getAsString());b.setValue(!1);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertFalse(b.getValue());
module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(0,b.getValues().length);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(0,b.getChoices().length);b.setFromString("true");module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(b.getValue());b.setFromString("false");module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertFalse(b.getValue());const c=new mpl$lab$util$ParameterBoolean(a,module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOOBARNESS,
module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOOBARNESS,()=>a.getFooBarness(),d=>a.setFooBarness(d),["on","off"],[!0,!1]);a.addParameter(c);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOOBARNESS,c.getName());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(a,c.getSubject());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(c instanceof
mpl$lab$util$ParameterBoolean);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(c,a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOOBARNESS));module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(c.getValue());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals(void 0,c.setValue(!1));module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertFalse(c.getValue());
c.setValue(!0);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(c.getValue());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals("on",c.getChoices()[0]);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals("true",c.getValues()[0]);c.setValue("true"==c.getValues()[0]);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertTrue(c.getValue());module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals("off",
c.getChoices()[1]);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertEquals("false",c.getValues()[1]);c.setValue("true"==c.getValues()[1]);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertFalse(c.getValue());a.removeParameter(b);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOONESS));a.removeParameter(c);module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_assertThrows(()=>
a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterBooleanTest_MockSubject1.FOOBARNESS))}}mpl$lab$util$test$ParameterBooleanTest.groupName="ParameterBooleanTest.";const module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$ParameterNumberTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$ParameterNumberTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1{constructor(){this.fooBarness_=this.fooness_=0;this.symbol_=""}getFooness(){return this.fooness_}setFooness(a){this.fooness_=a}getFooBarness(){return this.fooBarness_}setFooBarness(a){this.fooBarness_=a}getName(){return""}addObserver(a){}removeObserver(a){}getObservers(){return[]}getParameters(){return[]}getParameter(a){throw"";}getParameterBoolean(a){throw"";}getParameterNumber(a){throw"";}getParameterString(a){throw"";
}broadcastParameter(a){}broadcast(a){}toStringShort(){return"MockSubject1"}}module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOONESS="FOONESS";module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOOBARNESS="FOO_BARNESS";
class module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2 extends mpl$lab$util$AbstractSubject{constructor(){super("MOCK");this.fooBarness_=this.fooness_=0}getClassName(){return"MockSubject2"}getFooness(){return this.fooness_}setFooness(a){this.fooness_=a}getFooBarness(){return this.fooBarness_}setFooBarness(a){this.fooBarness_=a}}module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOONESS="fooness";
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOOBARNESS="foo-barness";class module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3 extends mpl$lab$util$AbstractSubject{constructor(){super("MOCK");this.fooBarness_=this.fooness_=0}getClassName(){return"MockSubject3"}getFooness(){return this.fooness_}setFooness(a){this.fooness_=a}getFooBarness(){return this.fooBarness_}setFooBarness(a){this.fooBarness_=a}}
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3.FOONESS="FOONESS";module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3.FOOBARNESS="FOO_BARNESS";
class module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4 extends mpl$lab$util$AbstractSubject{constructor(){super("MOCK");this.fooness_=.1;this.fooBarness_=1E6;this.baz_=0}getClassName(){return"MockSubject4"}getFooness(){return this.fooness_}setFooness(a){this.fooness_=a}getFooBarness(){return this.fooBarness_}setFooBarness(a){this.fooBarness_=a}getBaz(){return this.baz_}setBaz(a){this.baz_=a}}
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS="FOONESS";module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOOBARNESS="FOO_BARNESS";module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.BAZ="BAZ";
class mpl$lab$util$test$ParameterNumberTest{static test(){module$contents$myphysicslab$lab$util$test$ParameterNumberTest_schedule(mpl$lab$util$test$ParameterNumberTest.testParameterNumber1);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_schedule(mpl$lab$util$test$ParameterNumberTest.testParameterNumber2);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_schedule(mpl$lab$util$test$ParameterNumberTest.testParameterNumber3);
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_schedule(mpl$lab$util$test$ParameterNumberTest.testParameterNumber4)}static testParameterNumber1(){module$contents$myphysicslab$lab$util$test$ParameterNumberTest_startTest(mpl$lab$util$test$ParameterNumberTest.groupName+"testParameterNumber1");const a=new module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1;module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,
a.getFooness());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,a.getFooBarness());const b=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOONESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOONESS,()=>a.getFooness(),d=>a.setFooness(d));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("FOONESS",b.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(b.nameEquals("fooness"));
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,b.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(b instanceof mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("0",b.getAsString());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,
b.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(10,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("10",b.getAsString());b.setValue(parseFloat("3.14159265358979323846"));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3.141592653589793,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("3.141592653589793",String(b.getValue()));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertRoughlyEquals(Math.PI,
b.getValue(),1E-15);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getLowerLimit());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(mpl$lab$util$Util.POSITIVE_INFINITY,b.getUpperLimit());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>b.setValue(-1));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>b.setLowerLimit(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>
b.setUpperLimit(1));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(b,b.setLowerLimit(-100));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(-100,b.getLowerLimit());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,b.setValue(-10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(-10,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(b,b.setUpperLimit(0));
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getUpperLimit());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>b.setValue(1));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(b,b.setLowerLimit(mpl$lab$util$Util.NEGATIVE_INFINITY));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,b.setValue(-1E200));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertRoughlyEquals(-1.0000000000000001E200,
b.getValue(),1E185);const c=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOOBARNESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOOBARNESS,()=>a.getFooBarness(),d=>a.setFooBarness(d));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(mpl$lab$util$Util.toName(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOOBARNESS),
c.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(c.nameEquals(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject1.FOOBARNESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,c.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(c instanceof mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,
c.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,c.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(10,c.getValue());b.setFromString("-7");module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(-7,b.getValue());b.setFromString("-2e-5");module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(-2E-5,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>
b.setFromString("foo"))}static testParameterNumber2(){module$contents$myphysicslab$lab$util$test$ParameterNumberTest_startTest(mpl$lab$util$test$ParameterNumberTest.groupName+"testParameterNumber2");const a=new module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2;module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,a.getFooness());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,a.getFooBarness());
var b=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOONESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOONESS,()=>a.getFooness(),c=>a.setFooness(c));a.addParameter(b);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("FOONESS",b.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,b.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(b instanceof
mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(b,a.getParameterNumber(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,
b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,b.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(10,b.getValue());b.setValue(parseFloat("3.14159265358979323846"));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3.141592653589793,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("3.141592653589793",String(b.getValue()));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertRoughlyEquals(Math.PI,
b.getValue(),1E-15);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getLowerLimit());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(mpl$lab$util$Util.POSITIVE_INFINITY,b.getUpperLimit());b=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOOBARNESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOOBARNESS,
()=>a.getFooBarness(),c=>a.setFooBarness(c));a.addParameter(b);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(mpl$lab$util$Util.toName(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOOBARNESS),b.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,b.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(b instanceof mpl$lab$util$ParameterNumber);
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,b.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(10,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(b,a.getParameterNumber(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject2.FOOBARNESS))}static testParameterNumber3(){module$contents$myphysicslab$lab$util$test$ParameterNumberTest_startTest(mpl$lab$util$test$ParameterNumberTest.groupName+
"testParameterNumber3");const a=new module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3;module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,a.getFooness());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,a.getFooBarness());var b=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3.FOONESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3.FOONESS,
()=>a.getFooness(),c=>a.setFooness(c));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("FOONESS",b.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,b.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(b instanceof mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,
b.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(10,b.getValue());b.setValue(parseFloat("3.14159265358979323846"));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("3.141592653589793",String(b.getValue()));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertRoughlyEquals(Math.PI,b.getValue(),1E-15);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getLowerLimit());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(mpl$lab$util$Util.POSITIVE_INFINITY,
b.getUpperLimit());b=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3.FOOBARNESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3.FOOBARNESS,()=>a.getFooBarness(),c=>a.setFooBarness(c));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject3.FOOBARNESS,b.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,
b.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(b instanceof mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,b.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(void 0,b.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(10,b.getValue())}static testParameterNumber4(){module$contents$myphysicslab$lab$util$test$ParameterNumberTest_startTest(mpl$lab$util$test$ParameterNumberTest.groupName+
"testParameterNumber4");const a=new module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4;var b=Math.PI;const c=Math.E,d=Math.sqrt(2),e=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS,()=>a.getFooness(),h=>a.setFooness(h),["pi","e","sqrt(2)"],[b,c,d]);a.addParameter(e);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS,
e.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,e.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(e instanceof mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertRoughlyEquals(.1,e.getValue(),1E-15);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>e.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertRoughlyEquals(.1,
e.getValue(),1E-15);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(e,a.getParameter(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(e,a.getParameterNumber(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>a.getParameterString(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS));
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3,e.getChoices().length);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3,e.getValues().length);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("pi",e.getChoices()[0]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(b,
Number(e.getValues()[0]));e.setValue(Number(e.getValues()[0]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(b,e.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("e",e.getChoices()[1]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(c,Number(e.getValues()[1]));e.setValue(Number(e.getValues()[1]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(c,e.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("sqrt(2)",
e.getChoices()[2]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(d,Number(e.getValues()[2]));e.setValue(Number(e.getValues()[2]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(d,e.getValue());const f=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOOBARNESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOOBARNESS,()=>a.getFooBarness(),
h=>a.setFooBarness(h),["none","some","lots"],[0,5,1E3]);a.addParameter(f);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOOBARNESS,f.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,f.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(f instanceof mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(1E6,
f.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>f.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(1E6,f.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(f,a.getParameterNumber(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOOBARNESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>a.getParameterString(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS));
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3,f.getChoices().length);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3,f.getValues().length);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("none",f.getChoices()[0]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,
Number(f.getValues()[0]));f.setValue(Number(f.getValues()[0]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,f.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("some",f.getChoices()[1]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(5,Number(f.getValues()[1]));f.setValue(Number(f.getValues()[1]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(5,f.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("lots",
f.getChoices()[2]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(1E3,Number(f.getValues()[2]));f.setValue(Number(f.getValues()[2]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(1E3,f.getValue());b=["red","green","blue","black"];const g=new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.BAZ,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.BAZ,
()=>a.getBaz(),h=>a.setBaz(h),b,module$contents$goog$array_range(b.length));a.addParameter(g);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.BAZ,g.getName());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(a,g.getSubject());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertTrue(g instanceof mpl$lab$util$ParameterNumber);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,
g.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>g.setValue(10));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,g.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(g,a.getParameterNumber(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.BAZ));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>a.getParameterString(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.BAZ));
module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.BAZ));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(4,g.getChoices().length);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(4,g.getValues().length);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("red",g.getChoices()[0]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,
Number(g.getValues()[0]));g.setValue(Number(g.getValues()[0]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(0,g.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("green",g.getChoices()[1]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(1,Number(g.getValues()[1]));g.setValue(Number(g.getValues()[1]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(1,g.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("blue",
g.getChoices()[2]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(2,Number(g.getValues()[2]));g.setValue(Number(g.getValues()[2]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(2,g.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals("black",g.getChoices()[3]);module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3,Number(g.getValues()[3]));g.setValue(Number(g.getValues()[3]));module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertEquals(3,
g.getValue());module$contents$myphysicslab$lab$util$test$ParameterNumberTest_assertThrows(()=>{new mpl$lab$util$ParameterNumber(a,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOOBARNESS,module$contents$myphysicslab$lab$util$test$ParameterNumberTest_MockSubject4.FOOBARNESS,()=>a.getFooBarness(),h=>a.setFooBarness(h),["none","some","lots","too many"],[0,5,1E3])})}}mpl$lab$util$test$ParameterNumberTest.groupName="ParameterNumberTest.";const module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$ParameterStringTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$ParameterStringTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2 extends mpl$lab$util$AbstractSubject{constructor(){super("MOCK");this.fooness_="foo";this.fooBarness_="none"}getClassName(){return"MockSubject2"}getFooness(){return this.fooness_}setFooness(a){this.fooness_=a}getFooBarness(){return this.fooBarness_}setFooBarness(a){this.fooBarness_=a}}module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS="fooness";
module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS="foo-barness";
class mpl$lab$util$test$ParameterStringTest{static test(){module$contents$myphysicslab$lab$util$test$ParameterStringTest_schedule(mpl$lab$util$test$ParameterStringTest.testParameterString1)}static testParameterString1(){module$contents$myphysicslab$lab$util$test$ParameterStringTest_startTest(mpl$lab$util$test$ParameterStringTest.groupName+"testParameterString1");const a=new module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2;
module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("foo",a.getFooness());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("none",a.getFooBarness());const b=new mpl$lab$util$ParameterString(a,module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS,module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS,()=>a.getFooness(),d=>a.setFooness(d));a.addParameter(b);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(mpl$lab$util$Util.toName(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS),
b.getName());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertTrue(b.nameEquals(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(a,b.getSubject());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertTrue(b instanceof mpl$lab$util$ParameterString);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(b,a.getParameterString(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS));
module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows(()=>a.getParameterNumber(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOONESS));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("foo",b.getValue());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(void 0,
b.setValue("baz"));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("baz",b.getValue());b.setValue("qux");module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("qux",b.getValue());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(20,b.getSuggestedLength());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(b,b.setSuggestedLength(10));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(10,
b.getSuggestedLength());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(mpl$lab$util$Util.POSITIVE_INFINITY,b.getMaxLength());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows(()=>b.setMaxLength(2));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(b,b.setMaxLength(10));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(10,b.getMaxLength());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows(()=>
b.setValue("very long string"));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(void 0,b.setValue("grault"));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("grault",b.getValue());b.setFromString("blarg");module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("blarg",b.getValue());const c=new mpl$lab$util$ParameterString(a,module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS,
module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS,()=>a.getFooBarness(),d=>a.setFooBarness(d),["keine","manche","viele"],["none","some","many"]);a.addParameter(c);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(mpl$lab$util$Util.toName(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS),c.getName());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertTrue(c.nameEquals(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS));
module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(a,c.getSubject());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertTrue(c instanceof mpl$lab$util$ParameterString);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("none",c.getValue());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows(()=>c.setValue("any"));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("none",
c.getValue());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(c,a.getParameterString(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows(()=>a.getParameterNumber(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS));module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertThrows(()=>a.getParameterBoolean(module$contents$myphysicslab$lab$util$test$ParameterStringTest_MockSubject2.FOOBARNESS));
c.setValue("some");module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("some",c.getValue());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(3,c.getChoices().length);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals(3,c.getValues().length);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("keine",c.getChoices()[0]);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("none",
c.getValues()[0]);c.setValue(c.getValues()[0]);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("none",c.getValue());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("manche",c.getChoices()[1]);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("some",c.getValues()[1]);c.setValue(c.getValues()[1]);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("some",c.getValue());module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("viele",
c.getChoices()[2]);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("many",c.getValues()[2]);c.setValue(c.getValues()[2]);module$contents$myphysicslab$lab$util$test$ParameterStringTest_assertEquals("many",c.getValue())}}mpl$lab$util$test$ParameterStringTest.groupName="ParameterStringTest.";class mpl$lab$util$Random{getModulus(){}getSeed(){}nextFloat(){}nextInt(){}nextRange(a){}randomInts(a){}setSeed(a){}};class mpl$lab$util$RandomLCG{constructor(a){this.seed_=a=Math.floor(Math.abs(a))%mpl$lab$util$RandomLCG.m;mpl$lab$util$RandomLCG.checkSeed(this.seed_);goog.asserts.assert((mpl$lab$util$RandomLCG.m-1)*mpl$lab$util$RandomLCG.a+mpl$lab$util$RandomLCG.c<Math.pow(2,53))}toString(){return mpl$lab$util$Util.ADVANCED?"":"RandomLCG{seed: "+
this.seed_+"}"}static checkSeed(a){if(0>a)throw"random seed must be 0 or greater "+a;if(a>=mpl$lab$util$RandomLCG.m)throw"random seed must be less than "+mpl$lab$util$RandomLCG.m+" was "+a;if(a!=Math.floor(a))throw"random seed must be an integer "+a;}getModulus(){return mpl$lab$util$RandomLCG.m}getSeed(){return this.seed_}nextFloat(){const a=this.nextInt_();mpl$lab$util$RandomLCG.DEBUG_RANDOM&&console.log(" "+
a);return a/(mpl$lab$util$RandomLCG.m-1)}nextInt(){const a=this.nextInt_();mpl$lab$util$RandomLCG.DEBUG_RANDOM&&console.log(" "+a);return a}nextInt_(){const a=this.seed_*mpl$lab$util$RandomLCG.a+mpl$lab$util$RandomLCG.c,b=mpl$lab$util$RandomLCG.m;this.seed_=a-Math.floor(a/b)*b;mpl$lab$util$RandomLCG.checkSeed(this.seed_);return this.seed_}nextRange(a){a=this.nextRange_(a);
mpl$lab$util$RandomLCG.DEBUG_RANDOM&&console.log(" "+a);return a}nextRange_(a){if(0>=a)throw"n must be positive";const b=this.nextInt_()/mpl$lab$util$RandomLCG.m;return Math.floor(b*a)}randomInts(a){const b=Array(a);var c=Array(a);for(var d=0;d<a;d++)b[d]=-1,c[d]=d;d=a;let e=0;do{const f=this.nextRange_(d--);let g=0;for(let h=0;h<a;h++)if(!(0>c[h])&&g++==f){b[e++]=c[h];c[h]=-1;break}}while(0>b[a-1]);if(mpl$lab$util$RandomLCG.DEBUG_RANDOM){a=
"";for(c=0;c<b.length;c++)a+=" "+b[c];console.log(a)}return b}setSeed(a){mpl$lab$util$RandomLCG.checkSeed(a);this.seed_=a}}mpl$lab$util$RandomLCG.DEBUG_RANDOM=!1;mpl$lab$util$RandomLCG.DEBUG_RANDOM_DEEP=!1;mpl$lab$util$RandomLCG.m=4294967296;mpl$lab$util$RandomLCG.a=1664525;mpl$lab$util$RandomLCG.c=1013904223;const module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$RandomLCGTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$RandomLCGTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$RandomLCGTest{static test(){module$contents$myphysicslab$lab$util$test$RandomLCGTest_schedule(mpl$lab$util$test$RandomLCGTest.testRandom1);module$contents$myphysicslab$lab$util$test$RandomLCGTest_schedule(mpl$lab$util$test$RandomLCGTest.testRandom2)}static testRandom1(){module$contents$myphysicslab$lab$util$test$RandomLCGTest_startTest(mpl$lab$util$test$RandomLCGTest.groupName+"testRandom1");
const a=[1013904223,1196435762,3519870697,2868466484,1649599747,2670642822,1476291629,2748932008,2180890343,2498801434,3421909937,3167820124,2636375307,3801544430,28987765,2210837584,3039689583,1338634754,1649346937,2768872580,2254235155,2326606934,1719328701,1061592568,53332215,1140036074,4224358465,2629538988,1946028059,573775550,1473591045,95141024,1592739711,1618554578,4257218569,2685635028,2617994019,740185638,4194465613,2426187848,967350023,366635194,2557108433,3503432700,353185579,706247310,
408928405,1855199472,1263785871,2223693730,594074265,684458788,3868161075,1929325558,166605533,2640352920,1798252823,2071081866,171871585,2087307084,698505787,3647212126,634580517,1956956480,2017242015,1181484146,1221761321,3441954932,962199875,571258310,3352760941,3763818728,1371701031,1288172122,2012225009,3960962716,4082010443,1249037870,3840393141,3947023760,3754607535,2143919426,1774599097,1818014148,136057427,2672030614,798365181,2575687480,732141879,2569577770,1449661057,3853535724,1541586011,
2732705278,3432461637,320021984,2287935423,697346578,2555167305,2262755092],b=new mpl$lab$util$RandomLCG(0);for(let c=0;100>c;c++){const d=b.nextInt();module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertEquals(a[c],d)}}static testRandom2(){module$contents$myphysicslab$lab$util$test$RandomLCGTest_startTest(mpl$lab$util$test$RandomLCGTest.groupName+"testRandom2");const a=[99,56,96,26,34,96,61,2,51,37,90,26,76,69,44,57,97,32,50,83,53,86,99,11,
66,93,8,36,94,73,13,9,64,1,99,60,15,49,75,14,63,2,49,13,68,3,63,38,65,89,97,91,79,39,47,75,57,45,41,92,62,68,36,42,37,44,25,86,14,60,45,26,30,2,50,90,92,53,7,41,76,91,21,47,74,17,1,80,10,7,18,17,99,75,22,87,14,90,10,68],b=new mpl$lab$util$RandomLCG(99999);for(let c=0;100>c;c++){const d=b.nextRange(100);module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertEquals(a[c],d)}module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertThrows(()=>b.setSeed(-1));module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertThrows(()=>
b.setSeed(b.getModulus()));module$contents$myphysicslab$lab$util$test$RandomLCGTest_assertThrows(()=>b.setSeed(.1))}}mpl$lab$util$test$RandomLCGTest.groupName="RandomLCGTest.";const module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$TerminalTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$TerminalTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$TerminalTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$TerminalTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$TerminalTest_startTest=a=>mpl$test$TestRig.startTest(a),module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotThrows=a=>mpl$test$TestRig.assertNotThrows(a),
module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotNull=a=>mpl$test$TestRig.assertNotNull(a),module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined=a=>mpl$test$TestRig.assertUndefined(a),module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals=(a,b)=>mpl$test$TestRig.assertElementsEquals(a,b);
class mpl$lab$util$test$TerminalTest{static test(){module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal1);module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal2);module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal3);module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal4);
module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal5);module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal6);module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal7);module$contents$myphysicslab$lab$util$test$TerminalTest_schedule(mpl$lab$util$test$TerminalTest.testTerminal8)}static testTerminal1(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+
"testTerminal1");if(!mpl$lab$util$Util.ADVANCED){var a=document.createElement("textarea"),b=document.createElement("input");b.type="text";window.terminal=new mpl$lab$util$Terminal(b,a);b=window.terminal;b.clear();mpl$lab$util$Terminal.stdRegex(b);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,b.eval("2+2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("> 2+2\n4\n",a.value);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("mpl$lab$util$DoubleRect",
b.expand("DoubleRect"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals('replace this mpl$lab$util$DoubleRect "but not this DoubleRect " and  "also not this \\"DoubleRect\\""',b.expand('replace this DoubleRect "but not this DoubleRect " and  "also not this \\"DoubleRect\\""'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(" this mpl$lab$util$Vector is OK 'but not this Vector' and also 'don\\'t process \"this Vector\"' and dont get confused by \"that 'Vector over there'\" or \"this 3\\\" Vector here\"",
b.expand(" this Vector is OK 'but not this Vector' and also 'don\\'t process \"this Vector\"' and dont get confused by \"that 'Vector over there'\" or \"this 3\\\" Vector here\""));b.eval("z.a = 1;");a.value="";b.eval("z.a");module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("> z.a\n1\n",a.value);module$contents$myphysicslab$lab$util$test$TerminalTest_assertTrue(b.eval('Util.toName("foo;")=="FOO;"'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(6,b.eval("{1;2;3+3}"));
module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,b.eval("{1;{2;3}}"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("foo;bar",b.eval('"baz";"foo;"+"bar"'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals('foo"bar',b.eval('"baz";"foo\\""+"bar"'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,b.vars().length);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("parser",b.vars()[0]);window.foobar=
"_FOOBAR_";window.baz="_BAZ_";b.addWhiteList("foobar");b.addWhiteList("baz");module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(5,b.vars().length);module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals(["baz","foobar","parser","result","z"],b.vars());module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("_FOOBAR_",b.eval("foobar"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("_FOOBAR_",window.foobar);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("_BAZ_",
b.eval("baz"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("_BAZ_",window.baz);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("_BAZ__FOOBAR_",b.eval("baz += foobar"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("_BAZ__FOOBAR_",b.eval("baz"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("_BAZ__FOOBAR_",window.baz);window.foobar="barfoo";module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("barfoo",
b.eval("foobar"));delete window.foobar;delete window.baz;delete window.terminal}}static testTerminal2(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+"testTerminal2");if(!mpl$lab$util$Util.ADVANCED){var a=document.createElement("textarea"),b=document.createElement("input");b.type="text";window.terminal=new mpl$lab$util$Terminal(b,a);var c=window.terminal;mpl$lab$util$Terminal.stdRegex(c);
b=new mpl$lab$util$EasyScriptParser([]);b.saveStart();c.setParser(b);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,c.eval("2+2",!0));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,c.eval("result",!0));b=a.value;module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval("result",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(6,c.eval("3+3;result",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval("result",
!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(b,a.value);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,c.eval("result",!0));b=a.value;module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval("  ",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval(" \t ",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval("\t",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval("\n",
!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval(" \n ",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertUndefined(c.eval(" \t \n ",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(b,a.value);module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval("window",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval('"eval"(foo(window))',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>
c.eval("z.a=1; window",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval('this["white"+"List_"]',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetBrackets('this["white"+"List_"]'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval('this.myEval("foo")',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval('this.whiteList_.push("foo")',
!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("window",c.eval('"window"',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("foowhiteList_",c.eval('"foo"+"whiteList_"',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("Eval",c.eval('"myEval".slice(2,6)',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("whiteList_",c.eval('"whiteList_"',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(b,
a.value);module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval("self",!1));c.addWhiteList("self");module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(window,c.eval("self",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(7,c.eval("goog.array.range(10)[7]",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals([2,7],c.eval("z.a=[2, 7]",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals([-2,
1.7],c.eval("[-2, 1.7]",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotThrows(()=>mpl$lab$util$Terminal.vetBrackets("[-2, 1.7]"));var d=0;c.setAfterEval(()=>d++);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(5,c.eval("2+3",!0));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(1,d);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(7,c.eval("4+3",!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(1,
d);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(21,c.eval("7*3",!0));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(2,d);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,c.eval('eval("2+2")',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval('eval("window")',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval('eval("win"+"dow")',!1));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>
c.eval('eval("white"+"List_")',!1));delete window.terminal}}static testTerminal3(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+"testTerminal3");if(!mpl$lab$util$Util.ADVANCED){var a=document.createElement("textarea"),b=document.createElement("input");b.type="text";window.terminal=new mpl$lab$util$Terminal(b,a);var c=window.terminal;mpl$lab$util$Terminal.stdRegex(c);
module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,c.eval("2+2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,c.eval("var foo=3"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,c.eval("foo"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,c.eval("z.foo"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,c.vars().length);module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals(["foo",
"parser","result","z"],c.vars());module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(7,c.eval("foo=7"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(7,c.eval("foo"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(7,c.eval("z.foo"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,c.eval("let bar=4"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(5,c.vars().length);module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals(["bar",
"foo","parser","result","z"],c.vars());module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(28,c.eval("foo*bar"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(42,c.eval("var a=6; var b=7; a*b"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals("a b bar foo parser result z".split(" "),c.vars());module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(7,c.vars().length);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(6,
c.eval("a"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(7,c.eval("b"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(5,c.eval("var b=5"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(30,c.eval("a*b"));c.setVerbose(!0);a.value="";module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(2,c.eval("1;2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("> 1;\n>> 1;\n> 2\n>> 2\n2\n",a.value);a.value=
"";module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(2,c.eval("1//com;ment\n2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("> 1//com;ment\n>> 1//com;ment\n> 2\n>> 2\n2\n",a.value);a.value="";module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(5,c.eval("var b =/* new Vector */5"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("> var b =/* new Vector */5\n>> terminal.z.b =/* new mpl$lab$util$Vector */5\n5\n",a.value);
a.value="";module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,c.eval("3//5; new Vector(1,1)"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("> 3//5; new Vector(1,1)\n>> 3//5; new mpl$lab$util$Vector(1,1)\n3\n",a.value);a.value="";module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(5,c.eval("3 //foo; new Vector(1,1)\n5"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("> 3 //foo; new Vector(1,1)\n>> 3 //terminal.z.foo; new mpl$lab$util$Vector(1,1)\n> 5\n>> 5\n5\n",
a.value);a=String(module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>c.eval("123/*foo*/456")));module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotNull(a.match(/.*SyntaxError.*/i));c.setVerbose(!1);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(30,c.eval("5 * /* multi \n line comment*/ 6"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(30,c.eval("5 * \n 6"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(6,
c.eval("5 \n 6"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(99,c.eval("const foobar2=99"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(99,c.eval("foobar2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(99,c.eval("z.foobar2"));delete window.terminal}}static testTerminal4(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+"testTerminal4");if(!mpl$lab$util$Util.ADVANCED){window.terminal=
new mpl$lab$util$Terminal(null,null);var a=window.terminal;mpl$lab$util$Terminal.stdRegex(a);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,a.eval("2+2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>
a.eval("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("foo;top"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval('alert("foo")'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>
a.eval("foo;document"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval('goog.globalEval("foo")'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval('goog.globalEval("alert(/iq8/)")'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("window.location='https://www.reddit.com'"));delete window.terminal}}static testTerminal5(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+
"testTerminal5");module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetCommand("window",[]));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("window",mpl$lab$util$Terminal.deUnicode("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("window",mpl$lab$util$Terminal.deUnicode("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("window",
mpl$lab$util$Terminal.deUnicode("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("window",mpl$lab$util$Terminal.deUnicode("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("window",mpl$lab$util$Terminal.deUnicode("window"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("window",mpl$lab$util$Terminal.deUnicode("window"));
module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetCommand("foo;top",[]));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetCommand('alert("foo")',[]));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetCommand("foo;document",[]));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>
mpl$lab$util$Terminal.vetCommand('goog.globalEval("foo")',[]));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetCommand('eval("1+2")',[],/\beval\b/g));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetBrackets("terminal['white'+'List_']"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetBrackets("terminal[idx]"));
module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotThrows(()=>mpl$lab$util$Terminal.vetBrackets('var a = ["red", "green", "blue"]'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotThrows(()=>mpl$lab$util$Terminal.vetBrackets("a[2]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>mpl$lab$util$Terminal.vetBrackets("a[1+1]"))}static testTerminal6(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+
"testTerminal6");if(!mpl$lab$util$Util.ADVANCED){window.terminal=new mpl$lab$util$Terminal(null,null);var a=window.terminal;mpl$lab$util$Terminal.stdRegex(a);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,a.eval("2+2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,a.eval("result"));a.eval("var a");module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,a.eval('eval("1+1;a=result")+1'));
module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(3,a.eval("result"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(2,a.eval("a"));delete window.terminal}}static testTerminal7(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+"testTerminal7");if(!mpl$lab$util$Util.ADVANCED){window.terminal=new mpl$lab$util$Terminal(null,null);
var a=window.terminal;mpl$lab$util$Terminal.stdRegex(a);module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("terminal['white'+'List_']"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("whiteList_",a.eval("var idx = 'whiteList_'"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("terminal[idx]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals(["red","green","blue"],
a.eval('var a = ["red", "green", "blue"]'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("blue",a.eval("a[2]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("blue",a.eval("a[ 2]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("blue",a.eval("a[2 ]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("blue",a.eval("a[ 2 ]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("blue",a.eval("a [ 2 ]"));
module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("a[2.1]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("a[-1]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("a[1,2]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("a[1+1]"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("blue",a.eval("Util.get(a, 1+1)"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("orange",
a.eval('Util.set(a, 1+1, "orange")'));module$contents$myphysicslab$lab$util$test$TerminalTest_assertElementsEquals(["red","green","orange"],a.eval("a"));delete window.terminal}}static testTerminal8(){module$contents$myphysicslab$lab$util$test$TerminalTest_startTest(mpl$lab$util$test$TerminalTest.groupName+"testTerminal8");if(!mpl$lab$util$Util.ADVANCED){window.terminal=new mpl$lab$util$Terminal(null,null);var a=window.terminal;
mpl$lab$util$Terminal.stdRegex(a);module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(4,a.eval("2+2"));module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals("mpl$lab$util$DoubleRect",a.expand("DoubleRect"));var b="SIM_VARS.foo=1.00;",c=a.eval('"'+b+'".match(/SIM_VARS.*;/)');module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(b,c[0]);b="foo'bar";c=a.eval('"'+b+"\".match(/.*'.*/)");module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(b,
c[0]);module$contents$myphysicslab$lab$util$test$TerminalTest_assertRoughlyEquals(.5,a.eval("(1/8) + (3/8)"),1E-10);module$contents$myphysicslab$lab$util$test$TerminalTest_assertRoughlyEquals(.5,a.eval("(1\t/8)+ (3 /8)"),1E-10);module$contents$myphysicslab$lab$util$test$TerminalTest_assertRoughlyEquals(.375,a.eval("(1/8);(3/8)"),1E-10);module$contents$myphysicslab$lab$util$test$TerminalTest_assertRoughlyEquals(.375,a.eval("(1\t/8);(3 /8)"),1E-10);b=String(module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>
a.eval('foo"bar')));module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotNull(b.match(/^SyntaxError.*/i));b=String(module$contents$myphysicslab$lab$util$test$TerminalTest_assertThrows(()=>a.eval("'incomplete string")));module$contents$myphysicslab$lab$util$test$TerminalTest_assertNotNull(b.match(/^SyntaxError.*/i));b="foo/bar";c=a.eval('"'+b+'".match(/.*\\/.*/)');module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(b,c[0]);c=a.eval('"'+b+'".match(/.*[/].*/)');module$contents$myphysicslab$lab$util$test$TerminalTest_assertEquals(b,
c[0]);delete window.terminal}}}mpl$lab$util$test$TerminalTest.groupName="TerminalTest.";class mpl$lab$util$Timer{constructor(a){this.legacy_=a||"function"!==typeof requestAnimationFrame;this.timeoutID_=void 0;this.callBack_=null;this.timerCallback_=()=>this.timerCallback();this.period_=0;this.firing_=!1;this.fired_sys_=mpl$lab$util$Util.NaN;this.delta_=0}toString(){return mpl$lab$util$Util.ADVANCED?"":"Timer{period_: "+this.period_+", firing_: "+this.firing_+", timeoutID_: "+this.timeoutID_+", fired_sys_: "+mpl$lab$util$Util.nf7(this.fired_sys_)+
", delta_: "+mpl$lab$util$Util.nf7(this.delta_)+"}"}timerCallback(){if(null!=this.callBack_){var a=mpl$lab$util$Util.systemTime(),b=a-(this.fired_sys_-this.delta_);b>=this.period_&&(this.callBack_(),this.fired_sys_=a,this.delta_=0<this.period_?b%this.period_:0);this.timeoutID_=this.legacy_?setTimeout(this.timerCallback_,0<this.period_?Math.round(1E3*this.period_):17):requestAnimationFrame(this.timerCallback_)}}getPeriod(){return this.period_}isFiring(){return this.firing_}setCallBack(a){this.stopFiring();
this.callBack_=a}setPeriod(a){if(0>a)throw"";this.period_=a}startFiring(){this.firing_||(this.firing_=!0,this.delta_=0,this.fired_sys_=mpl$lab$util$Util.systemTime()-this.period_-1E-7,this.timerCallback())}stopFiring(){this.firing_=!1;void 0!==this.timeoutID_&&(this.legacy_?clearTimeout(this.timeoutID_):cancelAnimationFrame(this.timeoutID_),this.timeoutID_=void 0);this.fired_sys_=NaN;this.delta_=0}};const module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$TimerTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$TimerTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$TimerTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$TimerTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$TimerTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$TimerTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$TimerTest{static test(){module$contents$myphysicslab$lab$util$test$TimerTest_schedule(mpl$lab$util$test$TimerTest.testTimer1);module$contents$myphysicslab$lab$util$test$TimerTest_schedule(mpl$lab$util$test$TimerTest.testTimer2);module$contents$myphysicslab$lab$util$test$TimerTest_schedule(mpl$lab$util$test$TimerTest.testTimer3);module$contents$myphysicslab$lab$util$test$TimerTest_schedule(mpl$lab$util$test$TimerTest.testTimer4);
module$contents$myphysicslab$lab$util$test$TimerTest_schedule(mpl$lab$util$test$TimerTest.testTimer5);module$contents$myphysicslab$lab$util$test$TimerTest_schedule(mpl$lab$util$test$TimerTest.testTimer6);module$contents$myphysicslab$lab$util$test$TimerTest_schedule(mpl$lab$util$test$TimerTest.testTimer7)}static testTimer1(){module$contents$myphysicslab$lab$util$test$TimerTest_startTest(mpl$lab$util$test$TimerTest.groupName+
"testTimer1");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();let b=0;const c=new mpl$lab$util$Timer(!0);c.setCallBack(()=>b++);module$contents$myphysicslab$lab$util$test$TimerTest_assertRoughlyEquals(0,c.getPeriod(),.001);module$contents$myphysicslab$lab$util$test$TimerTest_assertFalse(c.isFiring());a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(0,b);c.startFiring();module$contents$myphysicslab$lab$util$test$TimerTest_assertTrue(c.isFiring());
a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(59,b);c.stopFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(59,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(118,b);c.setCallBack(null);module$contents$myphysicslab$lab$util$test$TimerTest_assertFalse(c.isFiring());c.startFiring();module$contents$myphysicslab$lab$util$test$TimerTest_assertTrue(c.isFiring());a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(118,
b)}finally{mpl$lab$util$Util.MOCK_CLOCK=!0,a.uninstall()}}static testTimer2(){module$contents$myphysicslab$lab$util$test$TimerTest_startTest(mpl$lab$util$test$TimerTest.groupName+"testTimer2");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();let b=0;const c=new mpl$lab$util$Timer(!1);c.setCallBack(()=>b++);c.setPeriod(.03);a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(0,
b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(34,b);c.stopFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(34,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(68,b)}finally{mpl$lab$util$Util.MOCK_CLOCK=!0,a.uninstall()}}static testTimer3(){module$contents$myphysicslab$lab$util$test$TimerTest_startTest(mpl$lab$util$test$TimerTest.groupName+
"testTimer3");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();let b=0;const c=new mpl$lab$util$Timer(!0);c.setCallBack(()=>b++);c.setPeriod(1/30);module$contents$myphysicslab$lab$util$test$TimerTest_assertRoughlyEquals(1/30,c.getPeriod(),.001);a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(0,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(30,
b);c.stopFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(30,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(60,b)}finally{mpl$lab$util$Util.MOCK_CLOCK=!0,a.uninstall()}}static testTimer4(){module$contents$myphysicslab$lab$util$test$TimerTest_startTest(mpl$lab$util$test$TimerTest.groupName+"testTimer4");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=
!0;a.install();let b=0;const c=new mpl$lab$util$Timer(!1);c.setCallBack(()=>b++);c.setPeriod(.04);module$contents$myphysicslab$lab$util$test$TimerTest_assertRoughlyEquals(.04,c.getPeriod(),.001);a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(0,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(26,b);c.stopFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(26,b);
c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(52,b)}finally{mpl$lab$util$Util.MOCK_CLOCK=!0,a.uninstall()}}static testTimer5(){module$contents$myphysicslab$lab$util$test$TimerTest_startTest(mpl$lab$util$test$TimerTest.groupName+"testTimer5");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();let b=0;const c=new mpl$lab$util$Timer(!1);
c.setCallBack(()=>b++);module$contents$myphysicslab$lab$util$test$TimerTest_assertRoughlyEquals(0,c.getPeriod(),.001);a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(0,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(51,b);c.stopFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(51,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(102,b)}finally{mpl$lab$util$Util.MOCK_CLOCK=
!0,a.uninstall()}}static testTimer6(){module$contents$myphysicslab$lab$util$test$TimerTest_startTest(mpl$lab$util$test$TimerTest.groupName+"testTimer6");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();let b=0;const c=new mpl$lab$util$Timer(!0);c.setCallBack(()=>b++);c.setPeriod(.025);module$contents$myphysicslab$lab$util$test$TimerTest_assertRoughlyEquals(.025,c.getPeriod(),.001);a.tick(1E3);
module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(0,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(41,b);c.stopFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(41,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(82,b)}finally{mpl$lab$util$Util.MOCK_CLOCK=!0,a.uninstall()}}static testTimer7(){module$contents$myphysicslab$lab$util$test$TimerTest_startTest(mpl$lab$util$test$TimerTest.groupName+
"testTimer7");const a=new goog.testing.MockClock;try{mpl$lab$util$Util.MOCK_CLOCK=!0;a.install();let b=0;const c=new mpl$lab$util$Timer;c.setCallBack(()=>b++);c.setPeriod(.025);module$contents$myphysicslab$lab$util$test$TimerTest_assertRoughlyEquals(.025,c.getPeriod(),.001);a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(0,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(41,
b);c.stopFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(41,b);c.startFiring();a.tick(1E3);module$contents$myphysicslab$lab$util$test$TimerTest_assertEquals(82,b)}finally{mpl$lab$util$Util.MOCK_CLOCK=!0,a.uninstall()}}}mpl$lab$util$test$TimerTest.groupName="TimerTest.";const module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$UtilTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$UtilTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$UtilTest{static test(){module$contents$myphysicslab$lab$util$test$UtilTest_schedule(mpl$lab$util$test$UtilTest.testUtil)}static testUtil(){module$contents$myphysicslab$lab$util$test$UtilTest_startTest(mpl$lab$util$test$UtilTest.groupName+"testUtil");module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.veryDifferent(2E-14,3.1E-14));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(mpl$lab$util$Util.veryDifferent(2E-14,
2.9E-14));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.veryDifferent(112345.678901234,112345.678901236));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(mpl$lab$util$Util.veryDifferent(112345.678901234,112345.6789012349));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.veryDifferent(2E-10,3.1E-10,1E-10));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(mpl$lab$util$Util.veryDifferent(2E-10,
2.9E-10,1E-10));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.veryDifferent(112345.6789,112345.679,1E-10,1E6));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(mpl$lab$util$Util.veryDifferent(112345.6789,112345.67899,1E-10,1E6));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(mpl$lab$util$Util.veryDifferent(1.2345678969481254E-8,1.234567893829028E-8));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(mpl$lab$util$Util.veryDifferent(1.2345678969481254E-8,
1.234567893829028E-8,1E-8,1E-8));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.veryDifferent(1.2345678969481254E-8,1.234567893829028E-8,1E-10,1E-8));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.veryDifferent(1.2345678969481254E-8,1.234567893829028E-8,void 0,1E-8));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.veryDifferent(NaN,
3.1));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.veryDifferent(99,NaN));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.veryDifferent(NaN,NaN));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1.12000",mpl$lab$util$Util.NF5(1.12));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1.001",mpl$lab$util$Util.nf5(1.001));
module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1.12",mpl$lab$util$Util.nf5(1.12));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1.12",mpl$lab$util$Util.nf7(1.12));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1.001",mpl$lab$util$Util.nf7(1.001));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1.00100",mpl$lab$util$Util.NF5(1.001));
module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("2",mpl$lab$util$Util.nf5(2));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("2",mpl$lab$util$Util.nf7(2));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("2.00000",mpl$lab$util$Util.NF5(2));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(isFinite(mpl$lab$util$Util.NaN));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(isFinite(mpl$lab$util$Util.POSITIVE_INFINITY));
module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(isFinite(mpl$lab$util$Util.NEGATIVE_INFINITY));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(isFinite(1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("00",mpl$lab$util$Util.numToHexChar2(0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("00",mpl$lab$util$Util.numToHexChar2(1E-4));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("ff",
mpl$lab$util$Util.numToHexChar2(1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("ff",mpl$lab$util$Util.numToHexChar2(.9999));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("f0",mpl$lab$util$Util.numToHexChar2(.9375));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("e0",mpl$lab$util$Util.numToHexChar2(.875));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("80",
mpl$lab$util$Util.numToHexChar2(.5));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("20",mpl$lab$util$Util.numToHexChar2(.125));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("10",mpl$lab$util$Util.numToHexChar2(.0625));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("e6",mpl$lab$util$Util.numToHexChar2(.9));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1a",
mpl$lab$util$Util.numToHexChar2(.1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("0",mpl$lab$util$Util.numToHexChar1(0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("0",mpl$lab$util$Util.numToHexChar1(1E-4));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("f",mpl$lab$util$Util.numToHexChar1(1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("f",
mpl$lab$util$Util.numToHexChar1(.9999));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("f",mpl$lab$util$Util.numToHexChar1(.9375));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("e",mpl$lab$util$Util.numToHexChar1(.875));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("8",mpl$lab$util$Util.numToHexChar1(.5));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("2",
mpl$lab$util$Util.numToHexChar1(.125));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("1",mpl$lab$util$Util.numToHexChar1(.0625));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("e",mpl$lab$util$Util.numToHexChar1(.9));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("2",mpl$lab$util$Util.numToHexChar1(.1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#ff0000",
mpl$lab$util$Util.colorString6(1,0,0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#00ff00",mpl$lab$util$Util.colorString6(0,1,0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#0000ff",mpl$lab$util$Util.colorString6(0,0,1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#80ff20",mpl$lab$util$Util.colorString6(.5,1,.125));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#e6e01a",
mpl$lab$util$Util.colorString6(.9,.875,.1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#f00",mpl$lab$util$Util.colorString3(1,0,0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#0f0",mpl$lab$util$Util.colorString3(0,1,0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#00f",mpl$lab$util$Util.colorString3(0,0,1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#8f2",
mpl$lab$util$Util.colorString3(.5,1,.125));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("#ee2",mpl$lab$util$Util.colorString3(.9,.875,.1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO",mpl$lab$util$Util.toName("foo"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO2",mpl$lab$util$Util.toName("foo2"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO_BAR",
mpl$lab$util$Util.toName("foo bar"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO_BAR",mpl$lab$util$Util.toName("foo-bar"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO_BAR",mpl$lab$util$Util.toName("FOO BAR"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO_BAR",mpl$lab$util$Util.toName("FOO-BAR"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO_BAR",
mpl$lab$util$Util.toName("FOO_BAR"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO",mpl$lab$util$Util.validName("FOO"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO2",mpl$lab$util$Util.validName("FOO2"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("FOO_BAR",mpl$lab$util$Util.validName("FOO_BAR"));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>
mpl$lab$util$Util.validName("1FOO"));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.validName("foo"));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.validName("FOO BAR"));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.validName("FOO-BAR"));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>
mpl$lab$util$Util.validName("FOO+"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("abcd",mpl$lab$util$Util.take("abcdefghijklmnopqrstuvwxyz",4));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("wxyz",mpl$lab$util$Util.take("abcdefghijklmnopqrstuvwxyz",-4));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("abcd",mpl$lab$util$Util.drop("abcdefghijklmnopqrstuvwxyz",
-22));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("wxyz",mpl$lab$util$Util.drop("abcdefghijklmnopqrstuvwxyz",22));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.testNumber(NaN));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(0,mpl$lab$util$Util.testNumber(0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(Number.POSITIVE_INFINITY,
mpl$lab$util$Util.testNumber(Number.POSITIVE_INFINITY));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(Number.NEGATIVE_INFINITY,mpl$lab$util$Util.testNumber(Number.NEGATIVE_INFINITY));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(0,mpl$lab$util$Util.testFinite(0));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.testFinite(NaN));
module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.testFinite(Number.POSITIVE_INFINITY));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.testFinite(Number.NEGATIVE_INFINITY));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(1,mpl$lab$util$Util.limitAngle(1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-1,mpl$lab$util$Util.limitAngle(-1));
module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(0,mpl$lab$util$Util.limitAngle(0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(Math.PI,mpl$lab$util$Util.limitAngle(Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-Math.PI,mpl$lab$util$Util.limitAngle(-Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(Math.PI-.001,mpl$lab$util$Util.limitAngle(Math.PI-
.001));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-Math.PI+.001,mpl$lab$util$Util.limitAngle(-Math.PI+.001));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(1,mpl$lab$util$Util.limitAngle(1+2*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-1,mpl$lab$util$Util.limitAngle(-1+2*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(0,mpl$lab$util$Util.limitAngle(2*
Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-Math.PI,mpl$lab$util$Util.limitAngle(Math.PI+2*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(Math.PI-.001,mpl$lab$util$Util.limitAngle(Math.PI-.001+2*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(-Math.PI+.001,mpl$lab$util$Util.limitAngle(-Math.PI+.001+2*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(1,
mpl$lab$util$Util.limitAngle(1-2*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-1,mpl$lab$util$Util.limitAngle(-1-2*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(0,mpl$lab$util$Util.limitAngle(-(2*Math.PI)));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(Math.PI,mpl$lab$util$Util.limitAngle(-Math.PI-2*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(Math.PI-
.001,mpl$lab$util$Util.limitAngle(Math.PI-.001-2*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(-Math.PI+.001,mpl$lab$util$Util.limitAngle(-Math.PI+.001-2*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(1,mpl$lab$util$Util.limitAngle(1+4*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-1,mpl$lab$util$Util.limitAngle(-1+
4*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(0,mpl$lab$util$Util.limitAngle(4*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-Math.PI,mpl$lab$util$Util.limitAngle(Math.PI+4*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(Math.PI-.001,mpl$lab$util$Util.limitAngle(Math.PI-.001+4*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(-Math.PI+
.001,mpl$lab$util$Util.limitAngle(-Math.PI+.001+4*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(1,mpl$lab$util$Util.limitAngle(1-4*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(-1,mpl$lab$util$Util.limitAngle(-1-4*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(0,mpl$lab$util$Util.limitAngle(-(4*Math.PI)));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(Math.PI,
mpl$lab$util$Util.limitAngle(-Math.PI-4*Math.PI));module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(Math.PI-.001,mpl$lab$util$Util.limitAngle(Math.PI-.001-4*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertRoughlyEquals(-Math.PI+.001,mpl$lab$util$Util.limitAngle(-Math.PI+.001-4*Math.PI),1E-15);module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.uniqueElements(["1",
"2","3"]));module$contents$myphysicslab$lab$util$test$UtilTest_assertFalse(mpl$lab$util$Util.uniqueElements(["1","2","3","2"]));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.uniqueElements(["1","2","3","2.1"]));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.uniqueElements(["1"]));module$contents$myphysicslab$lab$util$test$UtilTest_assertTrue(mpl$lab$util$Util.uniqueElements([]));
const a=["red","green","blue"];module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(a[0],mpl$lab$util$Util.get(a,0));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(a[1],mpl$lab$util$Util.get(a,1));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(a[2],mpl$lab$util$Util.get(a,2));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("orange",mpl$lab$util$Util.set(a,
2,"orange"));module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals("orange",mpl$lab$util$Util.get(a,2));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.set(a,-1,"marooon"));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.set(a,3.1,"marooon"));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.get(a,
-1));module$contents$myphysicslab$lab$util$test$UtilTest_assertThrows(()=>mpl$lab$util$Util.get(a,3.1));if(!mpl$lab$util$Util.ADVANCED){let b=1;try{goog.asserts.assert(!1),b=2}catch(c){}module$contents$myphysicslab$lab$util$test$UtilTest_assertEquals(1,b)}}}mpl$lab$util$test$UtilTest.groupName="UtilTest.";const module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$util$test$VectorTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$util$test$VectorTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$util$test$VectorTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$util$test$VectorTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$util$test$VectorTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$util$test$VectorTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$util$test$VectorTest{static test(){module$contents$myphysicslab$lab$util$test$VectorTest_schedule(mpl$lab$util$test$VectorTest.testVector);module$contents$myphysicslab$lab$util$test$VectorTest_schedule(mpl$lab$util$test$VectorTest.testVectorSimilar);module$contents$myphysicslab$lab$util$test$VectorTest_schedule(mpl$lab$util$test$VectorTest.testVectorMath)}static testVector(){module$contents$myphysicslab$lab$util$test$VectorTest_startTest(mpl$lab$util$test$VectorTest.groupName+
"testVector");var a=new mpl$lab$util$Vector(2.1,3.2);module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(2.1,a.getX());module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(3.2,a.getY());var b=new mpl$lab$util$Vector(1,1);module$contents$myphysicslab$lab$util$test$VectorTest_assertRoughlyEquals(Math.sqrt(2),b.length(),1E-15);module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(1,b.getX());module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(1,
b.getY());module$contents$myphysicslab$lab$util$test$VectorTest_assertTrue(b.equals(new mpl$lab$util$MutableVector(1,1)));a=a.add(b);module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(3.1,a.getX());module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(4.2,a.getY());b=b.multiply(2);module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(2,b.getX());module$contents$myphysicslab$lab$util$test$VectorTest_assertRoughlyEquals(Math.sqrt(8),
b.length(),1E-15);a=b.subtract(b);module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(0,a.getX());module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(0,a.getY());module$contents$myphysicslab$lab$util$test$VectorTest_assertTrue(a.equals(mpl$lab$util$Vector.ORIGIN));module$contents$myphysicslab$lab$util$test$VectorTest_assertRoughlyEquals(b.length(),b.distanceTo(mpl$lab$util$Vector.ORIGIN),1E-15);b=b.normalize();module$contents$myphysicslab$lab$util$test$VectorTest_assertRoughlyEquals(1,
b.length(),1E-15);module$contents$myphysicslab$lab$util$test$VectorTest_assertEquals(b.getX(),b.getY());a=mpl$lab$util$Vector.clone(b);module$contents$myphysicslab$lab$util$test$VectorTest_assertTrue(a.equals(b));module$contents$myphysicslab$lab$util$test$VectorTest_assertTrue(b.equals(a));module$contents$myphysicslab$lab$util$test$VectorTest_assertThrows(()=>new mpl$lab$util$Vector(NaN,NaN));module$contents$myphysicslab$lab$util$test$VectorTest_assertThrows(()=>
new mpl$lab$util$Vector(1,NaN));module$contents$myphysicslab$lab$util$test$VectorTest_assertThrows(()=>new mpl$lab$util$Vector(NaN,1))}static testVectorSimilar(){module$contents$myphysicslab$lab$util$test$VectorTest_startTest(mpl$lab$util$test$VectorTest.groupName+"testVectorSimilar");const a=new mpl$lab$util$Vector(2,3),b=new mpl$lab$util$Vector(2.01,3.02);module$contents$myphysicslab$lab$util$test$VectorTest_assertTrue(a.nearEqual(b,
.01));module$contents$myphysicslab$lab$util$test$VectorTest_assertFalse(a.nearEqual(b,.003));module$contents$myphysicslab$lab$util$test$VectorTest_assertFalse(a.nearEqual(b))}static testVectorMath(){module$contents$myphysicslab$lab$util$test$VectorTest_startTest(mpl$lab$util$test$VectorTest.groupName+"testVectorMath");const a=new mpl$lab$util$Vector(2,3),b=new mpl$lab$util$Vector(1,1);module$contents$myphysicslab$lab$util$test$VectorTest_assertRoughlyEquals(5,
a.dotProduct(b),1E-15)}}mpl$lab$util$test$VectorTest.groupName="VectorTest.";class mpl$lab$model$ConcreteLine extends mpl$lab$model$AbstractSimObject{constructor(a,b,c){super(a);this.startPt_=goog.isObject(b)?b:mpl$lab$util$Vector.ORIGIN;this.endPt_=goog.isObject(c)?c:mpl$lab$util$Vector.ORIGIN}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+", startPoint: "+this.getStartPoint()+", endPoint: "+this.getEndPoint()+"}"}getClassName(){return"ConcreteLine"}getBoundsWorld(){return mpl$lab$util$DoubleRect.make(this.getStartPoint(),
this.getEndPoint())}getEndPoint(){return this.endPt_}getStartPoint(){return this.startPt_}getVector(){return this.getEndPoint().subtract(this.getStartPoint())}setEndPoint(a){this.endPt_=a;this.setChanged()}setStartPoint(a){this.startPt_=a;this.setChanged()}similar(a,b){return a instanceof mpl$lab$model$ConcreteLine&&a.getStartPoint().nearEqual(this.getStartPoint(),b)?a.getEndPoint().nearEqual(this.getEndPoint(),b):!1}};const module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$model$test$ConcreteLineTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$model$test$ConcreteLineTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$model$test$ConcreteLineTest{static test(){module$contents$myphysicslab$lab$model$test$ConcreteLineTest_schedule(mpl$lab$model$test$ConcreteLineTest.testConcreteLine);module$contents$myphysicslab$lab$model$test$ConcreteLineTest_schedule(mpl$lab$model$test$ConcreteLineTest.testConcreteLineSimilar)}static testConcreteLine(){module$contents$myphysicslab$lab$model$test$ConcreteLineTest_startTest(mpl$lab$model$test$ConcreteLineTest.groupName+
"testConcreteLine");var a=new mpl$lab$model$ConcreteLine("line0");module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertFalse(a.isMassObject());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals("LINE0",a.getName());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertTrue(a.nameEquals("line0"));module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(0,a.getVector().length());a=new mpl$lab$model$ConcreteLine("line1");
module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals("LINE1",a.getName());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertTrue(a.nameEquals("line1"));module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(0,a.getVector().length());a.setStartPoint(new mpl$lab$util$Vector(2,0));a.setEndPoint(new mpl$lab$util$Vector(0,2));module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(2,
a.getStartPoint().getX());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(0,a.getStartPoint().getY());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(0,a.getEndPoint().getX());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(2,a.getEndPoint().getY());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertRoughlyEquals(Math.sqrt(8),a.getVector().length(),1E-15);const b=a.getBoundsWorld();module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertTrue(b.equals(new mpl$lab$util$DoubleRect(0,
0,2,2)));a=a.getVector();module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(-2,a.getX());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(2,a.getY());a=new mpl$lab$model$ConcreteLine("line2",mpl$lab$util$Vector.ORIGIN,new mpl$lab$util$Vector(1,1));module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertTrue(a.nameEquals("line2"));module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(0,
a.getStartPoint().getX());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(0,a.getStartPoint().getY());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(1,a.getEndPoint().getX());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertEquals(1,a.getEndPoint().getY());module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertRoughlyEquals(Math.sqrt(2),a.getVector().length(),1E-15)}static testConcreteLineSimilar(){module$contents$myphysicslab$lab$model$test$ConcreteLineTest_startTest(mpl$lab$model$test$ConcreteLineTest.groupName+
"testConcreteLineSimilar");const a=new mpl$lab$model$ConcreteLine("line1");a.setStartPoint(new mpl$lab$util$Vector(2,0));a.setEndPoint(new mpl$lab$util$Vector(0,2));const b=new mpl$lab$model$ConcreteLine("line2");b.setStartPoint(new mpl$lab$util$Vector(2.01,.01));b.setEndPoint(new mpl$lab$util$Vector(.02,2.02));module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertTrue(a.similar(b,
.021));module$contents$myphysicslab$lab$model$test$ConcreteLineTest_assertFalse(a.similar(b,.015))}}mpl$lab$model$test$ConcreteLineTest.groupName="ConcreteLineTest.";class mpl$lab$model$EnergyInfo{constructor(a,b,c,d,e){this.potential_=a||0;this.translational_=b||0;this.rotational_=void 0===c?mpl$lab$util$Util.NaN:c;this.workDone_=void 0===d?mpl$lab$util$Util.NaN:d;this.initialEnergy_=void 0===e?mpl$lab$util$Util.NaN:e}toString(){return mpl$lab$util$Util.ADVANCED?"":"EnergyInfo{potential_: "+mpl$lab$util$Util.NF(this.potential_)+
", translational_: "+mpl$lab$util$Util.NF(this.translational_)+", rotational_: "+mpl$lab$util$Util.NF(this.rotational_)+", workDone_: "+mpl$lab$util$Util.NF(this.workDone_)+", initialEnergy_: "+mpl$lab$util$Util.NF(this.initialEnergy_)+"}"}getInitialEnergy(){return this.initialEnergy_}getPotential(){return this.potential_}getRotational(){return this.rotational_}getTotalEnergy(){let a=this.potential_+this.translational_;
isNaN(this.rotational_)||(a+=this.rotational_);return a}getTranslational(){return this.translational_}getWorkDone(){return this.workDone_}setInitialEnergy(a){this.initialEnergy_=a}setPotential(a){this.potential_=a}setRotational(a){this.rotational_=a}setTranslational(a){this.translational_=a}setWorkDone(a){this.workDone_=a}};const module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertFalse=a=>
mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$model$test$EnergyInfoTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$model$test$EnergyInfoTest_startTest=a=>mpl$test$TestRig.startTest(a),module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertNaN=
a=>mpl$test$TestRig.assertNaN(a);
class mpl$lab$model$test$EnergyInfoTest{static test(){module$contents$myphysicslab$lab$model$test$EnergyInfoTest_schedule(mpl$lab$model$test$EnergyInfoTest.testEnergyInfo1)}static testEnergyInfo1(){module$contents$myphysicslab$lab$model$test$EnergyInfoTest_startTest(mpl$lab$model$test$EnergyInfoTest.groupName+"testEnergyInfo1");var a=new mpl$lab$model$EnergyInfo;module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(0,
a.getPotential());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(0,a.getTranslational());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertNaN(a.getRotational());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertNaN(a.getWorkDone());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertNaN(a.getInitialEnergy());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(0,a.getTotalEnergy());a.setPotential(3);a.setTranslational(2);
a.setRotational(1);a.setWorkDone(5);a.setInitialEnergy(10);module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(1,a.getRotational());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(6,a.getTotalEnergy());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(5,a.getWorkDone());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(10,a.getInitialEnergy());a=new mpl$lab$model$EnergyInfo(-10,2);module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(-8,
a.getTotalEnergy());a=new mpl$lab$model$EnergyInfo(6,4,2);module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(12,a.getTotalEnergy());a=new mpl$lab$model$EnergyInfo(6,4,2,100,200);module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(12,a.getTotalEnergy());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(100,a.getWorkDone());module$contents$myphysicslab$lab$model$test$EnergyInfoTest_assertEquals(200,
a.getInitialEnergy())}}mpl$lab$model$test$EnergyInfoTest.groupName="EnergyInfoTest.";class mpl$lab$model$ParametricPath{getFinishTValue(){}getName(a){}getStartTValue(){}isClosedLoop(){}nameEquals(a){}x_func(a){}y_func(a){}};class mpl$lab$model$PathIterator{nextPoint(a){}};class mpl$lab$model$Path extends mpl$lab$model$SimObject{getIterator(a){}getSequence(){}};class mpl$lab$model$PathPoint{constructor(a,b){this.y=this.x=0;this.p=a||0;this.radius=this.slope=mpl$lab$util$Util.NaN;this.radius_flag=b||!1;this.direction=1;this.idx=-1;this.dydp=this.dxdp=this.slopeY=this.slopeX=this.normalYdp=this.normalXdp=this.normalY=this.normalX=0}toString(){return mpl$lab$util$Util.ADVANCED?"":"PathPoint{p="+mpl$lab$util$Util.NF(this.p)+" x="+mpl$lab$util$Util.NF(this.x)+
" y="+mpl$lab$util$Util.NF(this.y)+" slope="+mpl$lab$util$Util.NF(this.slope)+" radius="+mpl$lab$util$Util.NF(this.radius)+" radius_flag="+this.radius_flag+" direction="+this.direction+" index="+this.idx+" normalX="+mpl$lab$util$Util.NF(this.normalX)+" normalY="+mpl$lab$util$Util.NF(this.normalY)+" normalXdp="+mpl$lab$util$Util.NF(this.normalXdp)+" normalYdp="+
mpl$lab$util$Util.NF(this.normalYdp)+" slopeX="+mpl$lab$util$Util.NF(this.slopeX)+" slopeY="+mpl$lab$util$Util.NF(this.slopeY)+" dxdp="+mpl$lab$util$Util.NF(this.dxdp)+" dydp="+mpl$lab$util$Util.NF(this.dydp)+"}"}copyFrom(a){this.x=a.x;this.y=a.y;this.p=a.p;this.slope=a.slope;this.radius=a.radius;this.radius_flag=a.radius_flag;this.direction=a.direction;this.idx=a.idx;this.normalX=
a.normalX;this.normalY=a.normalY;this.normalXdp=a.normalXdp;this.normalYdp=a.normalYdp;this.slopeX=a.slopeX;this.slopeY=a.slopeY;this.dydp=this.dxdp=a.dxdp}distanceToNormalLine(a){goog.asserts.assert(1E-15>Math.abs(this.normalX*this.normalX+this.normalY*this.normalY-1));if(1E-16>Math.abs(this.normalX))return Math.abs(a.getX()-this.x);{const b=-this.normalY,c=this.normalX,d=this.normalY*this.x-this.normalX*this.y;return Math.abs(b*a.getX()+c*a.getY()+d)/Math.sqrt(b*b+c*c)}}getNormal(){return new mpl$lab$util$Vector(this.normalX,
this.normalY)}getPosition(){return new mpl$lab$util$Vector(this.x,this.y)}getSlope(){return new mpl$lab$util$Vector(this.slopeX,this.slopeY)}getX(){return this.x}getY(){return this.y}getZ(){return 0}};class mpl$lab$model$NumericalPath extends mpl$lab$model$AbstractSimObject{constructor(a,b){super(a.getName());this.tableLength_=b||mpl$lab$model$NumericalPath.DATA_POINTS;this.xvals=mpl$lab$util$Util.newNumberArray(this.tableLength_);this.yvals=mpl$lab$util$Util.newNumberArray(this.tableLength_);this.pvals=mpl$lab$util$Util.newNumberArray(this.tableLength_);
this.dxvals=mpl$lab$util$Util.newNumberArray(this.tableLength_);this.dyvals=mpl$lab$util$Util.newNumberArray(this.tableLength_);this.nxVals=mpl$lab$util$Util.newNumberArray(this.tableLength_);this.nyVals=mpl$lab$util$Util.newNumberArray(this.tableLength_);this.nxpVals=mpl$lab$util$Util.newNumberArray(this.tableLength_);this.nypVals=mpl$lab$util$Util.newNumberArray(this.tableLength_);
this.closedLoop=a.isClosedLoop();this.plen=0;this.bounds=mpl$lab$util$DoubleRect.EMPTY_RECT;this.make_table(a);goog.asserts.assert(this.pvals[0]<this.pvals[this.pvals.length-1]);goog.asserts.assert(mpl$lab$model$NumericalPath.isMonotonic(this.pvals));this.x_monotonic=mpl$lab$model$NumericalPath.isMonotonic(this.xvals);this.startPoint_=new mpl$lab$model$PathPoint(this.getStartPValue());this.endPoint_=new mpl$lab$model$PathPoint(this.getFinishPValue());
this.map_p_to_slope(this.startPoint_);this.map_p_to_slope(this.endPoint_)}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+", length: "+mpl$lab$util$Util.NF5(this.getLength())+", closedLoop: "+this.closedLoop+", bounds: "+this.bounds+"}"}getClassName(){return"NumericalPath"}static binarySearch(a,b){let c,d,e;const f=a.length;if(2>f)throw"array must have more than one element";const g=a[0]<a[f-1];c=Math.floor(f/2);g?(d=0,e=
f-1):(d=f-1,e=0);if(g){if(b<a[0])return-1;if(b>=a[f-1])return f}else{if(b<a[f-1])return f;if(b>=a[0])return-1}for(;1<Math.abs(e-d);)a[c]<=b?g?d=c:e=c:g?e=c:d=c,c=g?d+Math.floor((e-d)/2):e+Math.floor((d-e)/2);g?goog.asserts.assert(a[c]<=b&&b<a[c+1]," i="+c+" x="+b+" not between "+a[c]+" and "+a[c+1]):goog.asserts.assert(a[c+1]<=b&&b<a[c]," i="+c+" x="+b+" not between "+a[c]+" and "+a[c+1]);return c}deriv3(a,b,c){goog.asserts.assert(0<=b);goog.asserts.assert(b<=this.tableLength_-3);const d=this.pvals[b],
e=this.pvals[b+1],f=this.pvals[b+2];switch(c){case 0:c=d;break;case 1:c=e;break;case 2:c=f;break;default:throw"";}let g=a[b]*(2*c-e-f)/((d-e)*(d-f));g+=a[b+1]*(2*c-d-f)/((e-d)*(e-f));return g+=a[b+2]*(2*c-d-e)/((f-d)*(f-e))}distanceSquared(a,b){const c=a.getX()-this.xvals[b];a=a.getY()-this.yvals[b];return c*c+a*a}distanceSquared2(a,b,c){var d=mpl$lab$model$NumericalPath.interp4(this.pvals,this.xvals,b,c-1,this.closedLoop);b=mpl$lab$model$NumericalPath.interp4(this.pvals,
this.yvals,b,c-1,this.closedLoop);d=a.getX()-d;a=a.getY()-b;return d*d+a*a}findNearestGlobal(a){const b=new mpl$lab$model$PathPoint,c=a.getX();a=a.getY();let d=mpl$lab$util$Util.POSITIVE_INFINITY;for(let f=0;f<this.tableLength_;f++){var e=c-this.xvals[f];const g=a-this.yvals[f];e=e*e+g*g;e<d&&(d=e,b.x=this.xvals[f],b.y=this.yvals[f],b.p=this.pvals[f],b.idx=f)}return b}findNearestLocal(a,b){let c=this.modk(b.idx),d=Math.floor(this.tableLength_/20),e=
this.plen/20,f=this.pvals[c],g=0;do{var h=void 0;let l;var k=void 0;1<d?(f=this.pvals[c],h=this.distanceSquared(a,this.modk(c-d)),l=this.distanceSquared(a,c),k=this.distanceSquared(a,this.modk(c+d))):(h=this.mod_p(f-e),h=this.distanceSquared2(a,h,this.linearSearch(h,c)),l=this.distanceSquared2(a,f,c),k=this.mod_p(f+e),k=this.distanceSquared2(a,k,this.linearSearch(k,c)));1E3<g&&mpl$lab$util$Util.DEBUG&&console.log(g+" y0="+mpl$lab$util$Util.NF5(h)+" y1="+
mpl$lab$util$Util.NF5(l)+" y2="+mpl$lab$util$Util.NF5(k)+" p="+mpl$lab$util$Util.NF5(f)+" d="+mpl$lab$util$Util.NF7(e)+" dk="+d+" k="+c);h<l&&h<k?1<d?(c=this.modk(c-d),f=this.pvals[c]):(f=this.mod_p(f-e),c=this.linearSearch(f,c)):k<l?(goog.asserts.assert(k<h),1<d?(c=this.modk(c+d),f=this.pvals[c]):(f=this.mod_p(f+e),c=this.linearSearch(f,c))):1<d?(d=Math.floor(d/2),goog.asserts.assert(1<=d),1==d&&(e=this.tableSpacing(c))):
(goog.asserts.assert(1==d),e/=2);g++}while(1<d||1E-6<e);this.closedLoop?(a=this.mod_p(b.p),b.p=a<this.plen/6&&f>5*this.plen/6?b.p+(f-this.plen-a):f<this.plen/6&&a>5*this.plen/6?b.p+(f+this.plen-a):b.p+(f-a)):b.p=f;b.idx=c}findPointByDistance(a,b,c){var d=this.findNearestGlobal(a);this.findNearestLocal(a,d);const e=d.p;this.findNearestLocal(b,d);d=d.p;b=this.map_p_to_vector(d);let f=a.distanceTo(b);debugger;1E-6>f&&(d=e+c,b=this.map_p_to_vector(d),f=a.distanceTo(b));let g=f-c;for(;1E-10<Math.abs(g);)d=
e+c/f*(d-e),b=this.map_p_to_vector(d),f=a.distanceTo(b),g=f-c;return b}getBoundsWorld(){return this.bounds}getFinishPValue(){return this.pvals[this.pvals.length-1]}getIterator(a){return new module$contents$myphysicslab$lab$model$NumericalPath_PointsIterator(this,a)}getLength(){return this.getFinishPValue()-this.getStartPValue()}getSequence(){return 0}getStartPValue(){return this.pvals[0]}getTableLength(){return this.tableLength_}static interp4(a,b,c,d,e){e=a.length;if(b.length!=e)throw"";d>e-4?d=
e-4:0>d&&(d=0);mpl$lab$util$Util.DEBUG&&0<d&&d<e-4&&goog.asserts.assert(a[d+1]<=c&&c<a[d+2]);let f,g;e=b[d+0];f=(b[d+1]-e)/(a[d+1]-a[d+0]);g=(b[d+2]-(e+f*(a[d+2]-a[d+0])))/((a[d+2]-a[d+0])*(a[d+2]-a[d+1]));b=b[d+3]-(e+f*(a[d+3]-a[d+0])+g*(a[d+3]-a[d+0])*(a[d+3]-a[d+1]));b/=(a[d+3]-a[d+0])*(a[d+3]-a[d+1])*(a[d+3]-a[d+2]);return((b*(c-a[d+2])+g)*(c-a[d+1])+f)*(c-a[d+0])+e}isClosedLoop(){return this.closedLoop}static isMonotonic(a){const b=a.length;if(2>b)throw"array must have more than one element";
const c=a[0]<a[b-1];for(let d=1;d<b;d++)if(c){if(a[d-1]>a[d])return!1}else if(a[d-1]<a[d])return!1;return!0}limit_p(a){if(this.closedLoop)return this.mod_p(a);a<this.pvals[0]?a=this.pvals[0]:a>this.pvals[this.tableLength_-1]&&(a=this.pvals[this.tableLength_-1]);return a}linearSearch(a,b){b>this.tableLength_-2&&(b=this.tableLength_-2);0>b&&(b=0);if(Math.abs(this.pvals[b]-a)>this.plen/20)mpl$lab$util$Util.DEBUG&&console.log("use binary not linear search "+mpl$lab$util$Util.NF5(a)+
" "+mpl$lab$util$Util.NF5(this.pvals[b])),b=mpl$lab$model$NumericalPath.binarySearch(this.pvals,a);else for(;!(this.pvals[b]<=a&&a<this.pvals[b+1]);)if(a<this.pvals[b])if(0<b)--b;else break;else if(b<this.tableLength_-2)b+=1;else break;mpl$lab$util$Util.DEBUG&&b<this.tableLength_-2&&goog.asserts.assert(this.pvals[b]<=a&&a<this.pvals[b+1]);return b}make_table(a){var b=a.getStartTValue(),c=a.getFinishTValue();mpl$lab$model$NumericalPath.debug&&
mpl$lab$util$Util.DEBUG&&console.log("make_table "+this.getName());{c=(c-b)/(this.tableLength_-1);let d=0;this.pvals[0]=0;let e,f,g,h;e=f=this.xvals[0]=a.x_func(b);g=h=this.yvals[0]=a.y_func(b);for(let k=1;k<this.tableLength_;k++){b+=c;this.xvals[k]=a.x_func(b);this.yvals[k]=a.y_func(b);const l=this.xvals[k]-this.xvals[k-1],m=this.yvals[k]-this.yvals[k-1];d+=Math.sqrt(l*l+m*m);this.pvals[k]=d;this.xvals[k]<e&&(e=this.xvals[k]);this.xvals[k]>f&&(f=this.xvals[k]);this.yvals[k]<
g&&(g=this.yvals[k]);this.yvals[k]>h&&(h=this.yvals[k])}this.bounds=new mpl$lab$util$DoubleRect(e,g,f,h);this.plen=this.pvals[this.tableLength_-1]-this.pvals[0]}for(a=0;a<this.tableLength_;a++)0==a?(this.dxvals[0]=this.deriv3(this.xvals,0,0),this.dyvals[0]=this.deriv3(this.yvals,0,0)):a==this.tableLength_-1?(this.dxvals[a]=this.deriv3(this.xvals,a-2,2),this.dyvals[a]=this.deriv3(this.yvals,a-2,2)):(this.dxvals[a]=this.deriv3(this.xvals,a-1,1),this.dyvals[a]=this.deriv3(this.yvals,
a-1,1)),1E-16>Math.abs(this.dxvals[a])?(this.nxVals[a]=0>this.dyvals[a]?1:-1,this.nyVals[a]=0):1E-16>Math.abs(this.dyvals[a])?(this.nxVals[a]=0,this.nyVals[a]=0<this.dxvals[a]?1:-1):(c=-this.dxvals[a]/this.dyvals[a],goog.asserts.assert(isFinite(c)),b=Math.sqrt(1+c*c),this.nxVals[a]=1/b,this.nyVals[a]=c/b,0>(0<this.dxvals[a]?1:-1)*c&&(this.nxVals[a]=-this.nxVals[a],this.nyVals[a]=-this.nyVals[a]));for(a=0;a<this.tableLength_;a++)0==a?(this.nxpVals[0]=this.deriv3(this.nxVals,0,0),this.nypVals[0]=this.deriv3(this.nyVals,
0,0)):a==this.tableLength_-1?(this.nxpVals[a]=this.deriv3(this.nxVals,a-2,2),this.nypVals[a]=this.deriv3(this.nyVals,a-2,2)):(this.nxpVals[a]=this.deriv3(this.nxVals,a-1,1),this.nypVals[a]=this.deriv3(this.nyVals,a-1,1));mpl$lab$util$Util.DEBUG&&this.closedLoop&&console.log("WARNING:  derivative of normal not calculated at loop point")}map_p_to_index(a){let b=mpl$lab$model$NumericalPath.binarySearch(this.pvals,a);0>b&&(b=0);b>this.tableLength_-1&&(b=
this.tableLength_-1);goog.asserts.assert(this.pvals[b]<=a||0==b);return b}map_p_to_vector(a){return new mpl$lab$util$Vector(this.map_p_to_x(a),this.map_p_to_y(a))}map_p_to_x(a){a=this.mod_p(a);const b=mpl$lab$model$NumericalPath.binarySearch(this.pvals,a);return mpl$lab$model$NumericalPath.interp4(this.pvals,this.xvals,a,b-1,this.closedLoop)}map_p_to_y(a){a=this.mod_p(a);const b=mpl$lab$model$NumericalPath.binarySearch(this.pvals,
a);return mpl$lab$model$NumericalPath.interp4(this.pvals,this.yvals,a,b-1,this.closedLoop)}map_x_to_p(a){if(!this.x_monotonic)throw"x is not monotonic";const b=mpl$lab$model$NumericalPath.binarySearch(this.xvals,a);return mpl$lab$model$NumericalPath.interp4(this.xvals,this.pvals,a,b-1,this.closedLoop)}map_x_to_y(a){if(!this.x_monotonic)throw"x is not monotonic";const b=mpl$lab$model$NumericalPath.binarySearch(this.xvals,
a);return mpl$lab$model$NumericalPath.interp4(this.xvals,this.yvals,a,b-1,this.closedLoop)}map_x_to_y_p(a){if(!this.x_monotonic)throw"x is not monotonic";const b=mpl$lab$model$NumericalPath.binarySearch(this.xvals,a.x);a.y=mpl$lab$model$NumericalPath.interp4(this.xvals,this.yvals,a.x,b-1,this.closedLoop);a.p=mpl$lab$model$NumericalPath.interp4(this.xvals,this.pvals,a.x,b-1,this.closedLoop)}mod_p(a){this.closedLoop&&
(0>a||a>this.plen)&&(a-=this.plen*Math.floor(a/this.plen));return a}modk(a){if(this.closedLoop){for(;0>a;)a+=this.tableLength_;for(;a>=this.tableLength_;)a-=this.tableLength_}else 0>a?a=0:a>=this.tableLength_&&(a=this.tableLength_-1);goog.asserts.assert(-1<a);goog.asserts.assert(a<this.tableLength_);return a}map_p_to_slope(a){var b=a.p;const c=this.mod_p(a.p);let d=a.idx;if(0>d||d>this.tableLength_-2||this.pvals[d]>c||this.pvals[d+1]<=c)a.idx=d=mpl$lab$model$NumericalPath.binarySearch(this.pvals,
c);0>d&&(d=0);d>=this.tableLength_-1&&(d=this.tableLength_-2);mpl$lab$util$Util.DEBUG&&0<d&&d<this.tableLength_-2&&goog.asserts.assert(this.pvals[d]<=c&&c<this.pvals[d+1]);if(!this.closedLoop){if(c<this.getStartPValue()){a.copyFrom(this.startPoint_);a.p=c;a.idx=d;b=a.slope;a.x=this.startPoint_.x+(c-this.getStartPValue())/Math.sqrt(1+b*b);a.y=this.startPoint_.y+b*(a.x-this.startPoint_.x);return}if(c>this.getFinishPValue()){a.copyFrom(this.endPoint_);a.p=c;a.idx=d;b=a.slope;
a.x=this.endPoint_.x+(c-this.getFinishPValue())/Math.sqrt(1+b*b);a.y=this.endPoint_.y+b*(a.x-this.endPoint_.x);return}}a.x=mpl$lab$model$NumericalPath.interp4(this.pvals,this.xvals,c,d-1,this.closedLoop);a.y=mpl$lab$model$NumericalPath.interp4(this.pvals,this.yvals,c,d-1,this.closedLoop);a.dydp=mpl$lab$model$NumericalPath.interp4(this.pvals,this.dyvals,c,d-1,this.closedLoop);a.dxdp=mpl$lab$model$NumericalPath.interp4(this.pvals,
this.dxvals,c,d-1,this.closedLoop);if(1E-12>Math.abs(a.dxdp))a.dxdp=0,0<a.dydp?(a.direction=1,a.slope=a.radius=mpl$lab$util$Util.POSITIVE_INFINITY,a.slopeX=0,a.slopeY=1,a.normalX=-1):(a.direction=-1,a.slope=a.radius=mpl$lab$util$Util.NEGATIVE_INFINITY,a.slopeX=0,a.slopeY=-1,a.normalX=1),a.normalY=0,goog.asserts.assert(!isNaN(a.slope));else{a.direction=0<a.dxdp?1:-1;a.slope=a.dydp/a.dxdp;goog.asserts.assert(!isNaN(a.slope));var e=Math.sqrt(1+a.slope*
a.slope);a.slopeX=1/e;a.slopeY=a.slope/e;-1==a.direction&&(a.slopeX=-a.slopeX,a.slopeY=-a.slopeY);goog.asserts.assert(!isNaN(a.slope));if(1E-12<Math.abs(a.slope)){e=-1/a.slope;const f=Math.sqrt(1+e*e);a.normalX=1/f;a.normalY=e/f;0<a.direction*a.slope&&(a.normalX=-a.normalX,a.normalY=-a.normalY)}else a.normalX=0,a.normalY=0<a.direction?1:-1}a.normalXdp=mpl$lab$model$NumericalPath.interp4(this.pvals,this.nxpVals,c,d-1,this.closedLoop);a.normalYdp=mpl$lab$model$NumericalPath.interp4(this.pvals,
this.nypVals,c,d-1,this.closedLoop);if(a.radius_flag)if(2>d||d>this.tableLength_-4)a.radius=mpl$lab$util$Util.POSITIVE_INFINITY;else if(a.radius=(this.pvals[d+2]-this.pvals[d-1])/(Math.atan((this.yvals[d+3]-this.yvals[d+1])/(this.xvals[d+3]-this.xvals[d+1]))-Math.atan((this.yvals[d]-this.yvals[d-2])/(this.xvals[d]-this.xvals[d-2]))),isNaN(a.radius)||!isFinite(a.slope))a.radius=0<a.slope?mpl$lab$util$Util.POSITIVE_INFINITY:mpl$lab$util$Util.NEGATIVE_INFINITY;
goog.asserts.assert(a.p==b)}printTable(){if(mpl$lab$util$Util.DEBUG)for(let a=0;a<this.tableLength_;a++)this.printPoint(a)}printPoint(a){if(mpl$lab$util$Util.DEBUG){let b="p="+mpl$lab$util$Util.NF5(this.pvals[a]);b+=" x="+mpl$lab$util$Util.NF5(this.xvals[a])+" y="+mpl$lab$util$Util.NF5(this.yvals[a])+" dx="+mpl$lab$util$Util.NF5(this.dxvals[a])+" dy="+mpl$lab$util$Util.NF5(this.dyvals[a]);
console.log(b)}}tableSpacing(a){if(this.closedLoop)return a=this.modk(a-1),this.pvals[this.modk(a+2)]-this.pvals[a];a=this.modk(a);a=0==a?0:a==this.tableLength_-1?this.tableLength_-3:a-1;return this.pvals[a+2]-this.pvals[a]}}
class module$contents$myphysicslab$lab$model$NumericalPath_PointsIterator{constructor(a,b){b=Math.min(b,a.getTableLength());this.path_=a;const c=a.getStartPValue();a=a.getFinishPValue();if(a<=c)throw"path data is out of order";this.delta_=(a-c)/b;this.idx_=-1}nextPoint(a){const b=this.path_.getTableLength();if(this.idx_>=b-1)return!1;if(0>this.idx_)this.idx_=0;else{const c=this.path_.pvals[this.idx_];do if(this.idx_++,this.idx_>b-1){this.idx_=b-1;break}while(this.path_.pvals[this.idx_]-c<this.delta_)}a.setTo(this.path_.xvals[this.idx_],
this.path_.yvals[this.idx_],0);return!0}}mpl$lab$model$NumericalPath.DATA_POINTS=9E3;mpl$lab$model$NumericalPath.debug=!1;class mpl$sims$roller$AbstractPath{constructor(a,b,c,d,e){this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(a));this.localName_=b||a;this.startTValue_=c;this.finishTValue_=d;this.closedLoop_=e}toString(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+'{name_: "'+this.name_+'", localName_: "'+this.localName_+'", startTValue_: '+mpl$lab$util$Util.NF(this.startTValue_)+
", finishTValue_: "+mpl$lab$util$Util.NF(this.finishTValue_)+", closedLoop_: "+this.closedLoop_+"}"}x_func(a){}y_func(a){}getClassName(){}getName(a){return a?this.localName_:this.name_}getFinishTValue(){return this.finishTValue_}getStartTValue(){return this.startTValue_}isClosedLoop(){return this.closedLoop_}nameEquals(a){return this.name_==mpl$lab$util$Util.toName(a)}setClosedLoop(a){this.closedLoop_=a}setFinishTValue(a){this.finishTValue_=a}setStartTValue(a){this.startTValue_=
a}};class mpl$sims$roller$CirclePath extends mpl$sims$roller$AbstractPath{constructor(a,b,c,d,e,f){"number"!==typeof b&&(b=-3*Math.PI/2);"number"!==typeof c&&(c=Math.PI/2);void 0===d&&(d=!0);e=e||mpl$sims$roller$CirclePath.en.NAME;f=f||mpl$sims$roller$CirclePath.i18n.NAME;super(e,f,b,c,d);this.radius_=a}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+", radius_: "+
mpl$lab$util$Util.NF(this.radius_)+"}"}getClassName(){return"CirclePath"}x_func(a){return this.radius_*Math.cos(a)}y_func(a){return this.radius_*Math.sin(a)}}mpl$sims$roller$CirclePath.en={NAME:"Circle"};mpl$sims$roller$CirclePath.de_strings={NAME:"Kreis"};mpl$sims$roller$CirclePath.i18n="de"===goog.LOCALE?mpl$sims$roller$CirclePath.de_strings:mpl$sims$roller$CirclePath.en;class mpl$sims$roller$CustomPath extends mpl$sims$roller$AbstractPath{constructor(a,b,c,d){"number"!==typeof a&&(a=-3);"number"!==typeof b&&(b=3);c=c||mpl$sims$roller$CustomPath.en.NAME;d=d||mpl$sims$roller$CustomPath.i18n.NAME;super(c,d,a,b,!1);this.equationX_="t";this.equationY_="3 + t*t*(-7 + 1.2*t*t)/6"}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,
-1)+', equationX_: "'+this.equationX_+'", equationY_: "'+this.equationY_+'"}'}getClassName(){return"CustomPath"}getXEquation(){return this.equationX_}getYEquation(){return this.equationY_}setXEquation(a){a=mpl$lab$util$Terminal.deUnicode(a);mpl$lab$util$Terminal.vetCommand(a,["t"],/\beval\b/g);mpl$lab$util$Terminal.vetBrackets(a);this.equationX_=a}setYEquation(a){a=mpl$lab$util$Terminal.deUnicode(a);mpl$lab$util$Terminal.vetCommand(a,
["t"],/\beval\b/g);mpl$lab$util$Terminal.vetBrackets(a);this.equationY_=a}x_func(a){window.t=a;const b=eval('"use strict"; '+this.equationX_);if("number"===typeof b&&isFinite(b))return b;throw'not a finite number "'+this.equationX_+'" when t='+a;}y_func(a){window.t=a;const b=eval('"use strict"; '+this.equationY_);if("number"===typeof b&&isFinite(b))return b;throw'not a finite number "'+this.equationY_+'" when t='+a;}}mpl$sims$roller$CustomPath.en={NAME:"Custom"};
mpl$sims$roller$CustomPath.de_strings={NAME:"Spezial"};mpl$sims$roller$CustomPath.i18n="de"===goog.LOCALE?mpl$sims$roller$CustomPath.de_strings:mpl$sims$roller$CustomPath.en;class mpl$sims$roller$FlatPath extends mpl$sims$roller$AbstractPath{constructor(a,b,c,d){"number"!==typeof a&&(a=-5);"number"!==typeof b&&(b=5);c=c||mpl$sims$roller$FlatPath.en.NAME;d=d||mpl$sims$roller$FlatPath.i18n.NAME;super(c,d,a,b,!1)}getClassName(){return"FlatPath"}x_func(a){return a}y_func(a){return 0}}mpl$sims$roller$FlatPath.en={NAME:"Flat"};
mpl$sims$roller$FlatPath.de_strings={NAME:"Horizontale"};mpl$sims$roller$FlatPath.i18n="de"===goog.LOCALE?mpl$sims$roller$FlatPath.de_strings:mpl$sims$roller$FlatPath.en;class mpl$sims$roller$OvalPath extends mpl$sims$roller$AbstractPath{constructor(a,b,c){b=b||mpl$sims$roller$OvalPath.en.NAME;c=c||mpl$sims$roller$OvalPath.i18n.NAME;super(b,c,0,0,!0);"number"!==typeof a&&(a=2);this.s_=a;this.t0_=Math.PI/2;this.t1_=Math.PI;this.t2_=this.t1_+this.s_;this.t3_=this.t2_+Math.PI;this.t4_=this.t3_+this.s_;this.t5_=this.t4_+Math.PI/2;this.setStartTValue(this.t0_);this.setFinishTValue(this.t5_)}toString(){return mpl$lab$util$Util.ADVANCED?
"":super.toString().slice(0,-1)+", straight: "+mpl$lab$util$Util.NF(this.s_)+"}"}getClassName(){return"OvalPath"}x_func(a){return a<this.t1_?Math.cos(a):a<this.t2_?-1:a<this.t3_?Math.cos(Math.PI+a-this.t2_):a<this.t4_?1:a<this.t5_?Math.cos(a-this.t4_):0}y_func(a){return a<this.t1_?this.s_+Math.sin(a):a<this.t2_?this.s_-(a-this.t1_):a<this.t3_?Math.sin(Math.PI+a-this.t2_):a<this.t4_?a-this.t3_:a<this.t5_?this.s_+Math.sin(a-this.t4_):0}}
mpl$sims$roller$OvalPath.en={NAME:"Oval"};mpl$sims$roller$OvalPath.de_strings={NAME:"Oval"};mpl$sims$roller$OvalPath.i18n="de"===goog.LOCALE?mpl$sims$roller$OvalPath.de_strings:mpl$sims$roller$OvalPath.en;const module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$model$test$NumericalPathTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$model$test$NumericalPathTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$model$test$NumericalPathTest{static test(){module$contents$myphysicslab$lab$model$test$NumericalPathTest_schedule(mpl$lab$model$test$NumericalPathTest.testNumericalPath1);module$contents$myphysicslab$lab$model$test$NumericalPathTest_schedule(mpl$lab$model$test$NumericalPathTest.testNumericalPath2);module$contents$myphysicslab$lab$model$test$NumericalPathTest_schedule(mpl$lab$model$test$NumericalPathTest.testNumericalPath3);
module$contents$myphysicslab$lab$model$test$NumericalPathTest_schedule(mpl$lab$model$test$NumericalPathTest.testNumericalPath4)}static testNumericalPath1(){module$contents$myphysicslab$lab$model$test$NumericalPathTest_startTest(mpl$lab$model$test$NumericalPathTest.groupName+"testNumericalPath1");const a=new mpl$lab$model$NumericalPath(new mpl$sims$roller$CirclePath(3));module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertFalse(a.isMassObject());
var b=a.getStartPValue();module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(0,b);var c=a.getFinishPValue();module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(6*Math.PI,c,1E-6);const d=new mpl$lab$model$PathPoint(0,!0);c=(c-b)/1E3;for(let g=0;1E3>=g;g++){d.p=b+c*g;var e=d.p/3-3*Math.PI/2;a.map_p_to_slope(d);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(3*Math.cos(e),d.x,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(3*
Math.sin(e),d.y,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-Math.sin(e),d.dxdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(Math.cos(e),d.dydp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-Math.cos(e),d.normalX,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-Math.sin(e),d.normalY,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(Math.sin(e)/
3,d.normalXdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-Math.cos(e)/3,d.normalYdp,1E-6);isFinite(d.radius)&&module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(3,d.radius,1E-6);e=-1/Math.tan(e);1E6>Math.abs(e)&&module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(e,d.slope,Math.max(1E-4,1E-4*Math.abs(e)))}b=a.map_p_to_index(-1);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(0,
b);d.idx=0;b=new mpl$lab$util$Vector(3.1,0);a.findNearestLocal(b,d);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(4.5*Math.PI,d.p,1E-6);a.map_p_to_slope(d);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(3,d.x,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,d.y,1E-6);const f=a.findNearestGlobal(b);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(4.5*
Math.PI,f.p,.01);a.map_p_to_slope(f);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(3,f.x,.01);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,f.y,.01);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertThrows(()=>a.map_x_to_p(1));module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertThrows(()=>a.map_x_to_y(0));f.x=1;module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertThrows(()=>a.map_x_to_y_p(f))}static testNumericalPath2(){module$contents$myphysicslab$lab$model$test$NumericalPathTest_startTest(mpl$lab$model$test$NumericalPathTest.groupName+
"testNumericalPath2");var a=g=>Math.log(g+Math.sqrt(g*g+1)),b=new mpl$sims$roller$CustomPath(-1,1);b.setXEquation("t");b.setYEquation("t*t");b=new mpl$lab$model$NumericalPath(b);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertFalse(b.isMassObject());var c=b.getStartPValue();module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(0,c);var d=Math.sqrt(5)+(a(2)-a(-2))/4,e=b.getFinishPValue();module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(d,
e,1E-6);d=new mpl$lab$model$PathPoint(0,!0);e=(e-c)/1E3;for(let g=0;1E3>=g;g++){d.p=c+e*g;b.map_p_to_slope(d);const h=d.x*d.x;var f=2*Math.sqrt(5)+a(2*d.x)-a(-2);const k=Math.sqrt(1+4*h);f+=2*d.x*k;f/=4;module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(f,d.p,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(h,d.y,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-2*d.x/
k,d.normalX,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1/k,d.normalY,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1/k,d.dxdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(2*d.x/k,d.dydp,1E-6);f=4*h+1;module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals((-2+8*h/f)/f,d.normalXdp,1E-4);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-4*
d.x/(f*f),d.normalYdp,1E-4);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(2*d.x,d.slope,1E-6);0<g&&1E3>g&&module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(Math.pow(1+4*d.x*d.x,1.5)/2,d.radius,.002)}a=b.getStartPValue()-Math.sqrt(5);c=new mpl$lab$model$PathPoint(a);b.map_p_to_slope(c);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(a,c.p,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-2,
c.x,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(3,c.y,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-2,c.slope,1E-6);a=b.getFinishPValue()+Math.sqrt(5);c=new mpl$lab$model$PathPoint(a);b.map_p_to_slope(c);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(a,c.p,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(2,c.x,1E-6);
module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(3,c.y,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(2,c.slope,1E-6)}static testNumericalPath3(){module$contents$myphysicslab$lab$model$test$NumericalPathTest_startTest(mpl$lab$model$test$NumericalPathTest.groupName+"testNumericalPath3");const a=new mpl$lab$model$NumericalPath(new mpl$sims$roller$OvalPath),
b=new mpl$lab$model$PathPoint(0,!0);b.p=1+Math.PI/2;a.map_p_to_slope(b);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-1,b.x,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1,b.y,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.dxdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-1,b.dydp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1,
b.normalX,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalY,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalXdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalYdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(Number.NEGATIVE_INFINITY,b.slope);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(Number.NEGATIVE_INFINITY,
b.radius);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(0,b.slopeX);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(-1,b.slopeY);b.p=3+3*Math.PI/2;a.map_p_to_slope(b);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1,b.x,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1,b.y,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.dxdp,
1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1,b.dydp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(-1,b.normalX,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalY,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalXdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalYdp,
1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(Number.POSITIVE_INFINITY,b.slope);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(Number.POSITIVE_INFINITY,b.radius);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(0,b.slopeX);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(1,b.slopeY)}static testNumericalPath4(){module$contents$myphysicslab$lab$model$test$NumericalPathTest_startTest(mpl$lab$model$test$NumericalPathTest.groupName+
"testNumericalPath4");const a=new mpl$lab$model$NumericalPath(new mpl$sims$roller$FlatPath),b=new mpl$lab$model$PathPoint(0,!0);b.p=5;a.map_p_to_slope(b);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.x,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.y,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1,b.dxdp,
1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.dydp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(0,b.slope);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(1,b.slopeX);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(0,b.slopeY);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertEquals(Number.POSITIVE_INFINITY,b.radius);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,
b.normalX,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(1,b.normalY,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalXdp,1E-6);module$contents$myphysicslab$lab$model$test$NumericalPathTest_assertRoughlyEquals(0,b.normalYdp,1E-6)}}mpl$lab$model$test$NumericalPathTest.groupName="NumericalPathTest.";const module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$model$test$PointMassTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$model$test$PointMassTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$model$test$PointMassTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$model$test$PointMassTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$model$test$PointMassTest{static test(){module$contents$myphysicslab$lab$model$test$PointMassTest_schedule(mpl$lab$model$test$PointMassTest.testPointMassAngle);module$contents$myphysicslab$lab$model$test$PointMassTest_schedule(mpl$lab$model$test$PointMassTest.testPointMass);module$contents$myphysicslab$lab$model$test$PointMassTest_schedule(mpl$lab$model$test$PointMassTest.testPointMassSimilar);
module$contents$myphysicslab$lab$model$test$PointMassTest_schedule(mpl$lab$model$test$PointMassTest.testPointMassThrows)}static testPointMassAngle(){module$contents$myphysicslab$lab$model$test$PointMassTest_startTest(mpl$lab$model$test$PointMassTest.groupName+"testPointMassAngle");const a=mpl$lab$model$PointMass.makeOval(1,2,"point1");a.setAngle(-Math.PI/4);const b=1/(2*Math.sqrt(2));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(-.5,
1)).nearEqual(new mpl$lab$util$Vector(b,3*b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(.5,1)).nearEqual(new mpl$lab$util$Vector(3*b,b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(-.5,-1)).nearEqual(new mpl$lab$util$Vector(-3*b,-b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(.5,
-1)).nearEqual(new mpl$lab$util$Vector(-b,-3*b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(b,3*b)).nearEqual(new mpl$lab$util$Vector(-.5,1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(3*b,b)).nearEqual(new mpl$lab$util$Vector(.5,1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(-3*
b,-b)).nearEqual(new mpl$lab$util$Vector(-.5,-1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(-b,-3*b)).nearEqual(new mpl$lab$util$Vector(.5,-1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(3*b,a.getTopWorld(),1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(3*b,a.getRightWorld(),1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(-3*
b,a.getBottomWorld(),1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(-3*b,a.getLeftWorld(),1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.getBoundsWorld().nearEqual(new mpl$lab$util$DoubleRect(-3*b,-3*b,3*b,3*b)));const c=new mpl$lab$util$Vector(0,1),d=1/Math.sqrt(2);module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.rotateBodyToWorld(c).nearEqual(new mpl$lab$util$Vector(d,
d)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.rotateWorldToBody(c).nearEqual(new mpl$lab$util$Vector(-d,d)));a.setPosition(new mpl$lab$util$Vector(1,1));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(-.5,1)).nearEqual(new mpl$lab$util$Vector(1+b,1+3*b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(.5,
1)).nearEqual(new mpl$lab$util$Vector(1+3*b,1+b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(-.5,-1)).nearEqual(new mpl$lab$util$Vector(1-3*b,1-b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.bodyToWorld(new mpl$lab$util$Vector(.5,-1)).nearEqual(new mpl$lab$util$Vector(1-b,1-3*b)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(1+
b,1+3*b)).nearEqual(new mpl$lab$util$Vector(-.5,1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(1+3*b,1+b)).nearEqual(new mpl$lab$util$Vector(.5,1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(1-3*b,1-b)).nearEqual(new mpl$lab$util$Vector(-.5,-1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.worldToBody(new mpl$lab$util$Vector(1-
b,1-3*b)).nearEqual(new mpl$lab$util$Vector(.5,-1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(1+3*b,a.getTopWorld(),1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(1+3*b,a.getRightWorld(),1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(1-3*b,a.getBottomWorld(),1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertRoughlyEquals(1-3*b,a.getLeftWorld(),
1E-14);module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.getBoundsWorld().nearEqual(new mpl$lab$util$DoubleRect(1-3*b,1-3*b,1+3*b,1+3*b)))}static testPointMass(){module$contents$myphysicslab$lab$model$test$PointMassTest_startTest(mpl$lab$model$test$PointMassTest.groupName+"testPointMass");var a=mpl$lab$model$PointMass.makeCircle(1,"point1");module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a instanceof
mpl$lab$model$PointMass);module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a instanceof mpl$lab$model$AbstractSimObject);module$contents$myphysicslab$lab$model$test$PointMassTest_assertFalse(a instanceof mpl$lab$model$SimObject);module$contents$myphysicslab$lab$model$test$PointMassTest_assertFalse(a instanceof mpl$lab$model$MassObject);module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.isMassObject());
module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals("POINT1",a.getName());module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.nameEquals("point1"));module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(Number.POSITIVE_INFINITY,a.getExpireTime());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(1,a.getMass());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(0,a.getPosition().getX());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(0,
a.getPosition().getY());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(1,a.getWidth());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(1,a.getHeight());module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.getBoundsWorld().equals(new mpl$lab$util$DoubleRect(-.5,-.5,.5,.5)));const b=mpl$lab$model$PointMass.makeCircle(1,"point2").setMass(5);module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals("POINT2",
b.getName());module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(b.nameEquals("point2"));module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(5,b.getMass());b.setPosition(new mpl$lab$util$Vector(97,98));module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(97,b.getPosition().getX());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(98,b.getPosition().getY());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(1,
b.getWidth());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(1,b.getHeight());module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(b.getBoundsWorld().equals(new mpl$lab$util$DoubleRect(96.5,97.5,97.5,98.5)));a.setPosition(b.getPosition().subtract(new mpl$lab$util$Vector(1,1)));module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(96,a.getPosition().getX());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(97,
a.getPosition().getY());module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.getBoundsWorld().equals(new mpl$lab$util$DoubleRect(95.5,96.5,96.5,97.5)));b.setVelocity(new mpl$lab$util$Vector(6,-7));module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(6,b.getVelocity().getX());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(-7,b.getVelocity().getY());a.setVelocity(b.getVelocity().multiply(2));
module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(12,a.getVelocity().getX());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(-14,a.getVelocity().getY());a=new mpl$lab$util$Vector(1,1);module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(b.rotateBodyToWorld(a).equals(a));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(b.rotateWorldToBody(a).equals(a));var c=b.bodyToWorld(a);module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(98,
c.getX());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(99,c.getY());c=b.worldToBody(c);module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(c.getX(),a.getX());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(c.getY(),a.getY());b.setExpireTime(99);module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(99,b.getExpireTime());module$contents$myphysicslab$lab$model$test$PointMassTest_assertThrows(()=>new mpl$lab$model$PointMass("1"))}static testPointMassSimilar(){module$contents$myphysicslab$lab$model$test$PointMassTest_startTest(mpl$lab$model$test$PointMassTest.groupName+
"testPointMassSimilar");const a=mpl$lab$model$PointMass.makeCircle(1);a.setPosition(new mpl$lab$util$Vector(2,-2));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.similar(a));const b=mpl$lab$model$PointMass.makeCircle(1).setMass(5);b.setPosition(new mpl$lab$util$Vector(2.01,-2.02));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(a.similar(b,.015));module$contents$myphysicslab$lab$model$test$PointMassTest_assertFalse(a.similar(b,
.007));const c=mpl$lab$model$PointMass.makeSquare(1);c.setShape(mpl$lab$model$ShapeType.OVAL);c.setPosition(new mpl$lab$util$Vector(2,-2));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(c.similar(c));const d=mpl$lab$model$PointMass.makeSquare(1);d.setShape(mpl$lab$model$ShapeType.OVAL);d.setPosition(new mpl$lab$util$Vector(2.01,-2.02));
module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(c.similar(d,.015));module$contents$myphysicslab$lab$model$test$PointMassTest_assertFalse(c.similar(d,.007));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(c.similar(a,.01));module$contents$myphysicslab$lab$model$test$PointMassTest_assertTrue(d.similar(b,.01));module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(c.getWidth(),a.getWidth());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(c.getHeight(),
a.getHeight());module$contents$myphysicslab$lab$model$test$PointMassTest_assertEquals(c.getShape(),a.getShape())}static testPointMassThrows(){module$contents$myphysicslab$lab$model$test$PointMassTest_startTest(mpl$lab$model$test$PointMassTest.groupName+"testPointMassThrows");const a=new mpl$lab$model$PointMass("point1",0);module$contents$myphysicslab$lab$model$test$PointMassTest_assertThrows(()=>a.setPosition(3));module$contents$myphysicslab$lab$model$test$PointMassTest_assertThrows(()=>
a.setPosition(null));module$contents$myphysicslab$lab$model$test$PointMassTest_assertThrows(()=>a.setPosition("0"));module$contents$myphysicslab$lab$model$test$PointMassTest_assertThrows(()=>a.setPosition(a))}}mpl$lab$model$test$PointMassTest.groupName="PointMassTest.";class mpl$lab$model$Arc extends mpl$lab$model$AbstractSimObject{constructor(a,b,c,d){super(a);this.startAngle_=b;this.angle_=0;this.radius_=c;this.center_=d}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+", startAngle_: "+mpl$lab$util$Util.NF(this.startAngle_)+", angle_: "+mpl$lab$util$Util.NF(this.angle_)+", radius_: "+mpl$lab$util$Util.NF(this.radius_)+
", center_: "+this.center_+"}"}getClassName(){return"Arc"}getAngle(){return this.angle_}getBoundsWorld(){return mpl$lab$util$DoubleRect.makeCentered(this.center_,this.radius_,this.radius_)}getCenter(){return this.center_}getRadius(){return this.radius_}getStartAngle(){return this.startAngle_}setAngle(a){this.angle_=a;this.setChanged()}setCenter(a){this.center_=a;this.setChanged()}setRadius(a){this.radius_=a;this.setChanged()}setStartAngle(a){this.startAngle_=a;this.setChanged()}similar(a,
b){return!(a instanceof mpl$lab$model$Arc)||mpl$lab$util$Util.veryDifferent(a.startAngle_,this.startAngle_,b)||mpl$lab$util$Util.veryDifferent(a.angle_,this.angle_,b)||mpl$lab$util$Util.veryDifferent(a.radius_,this.radius_,b)?!1:a.getCenter().nearEqual(this.center_,b)}};class mpl$lab$model$SimList extends mpl$lab$util$AbstractSubject{constructor(){super("SIM_LIST");this.elements_=[];this.tolerance_=.1}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", tolerance_: "+mpl$lab$util$Util.NF(this.tolerance_)+", elements_: ["+this.elements_.map((a,b)=>b+": "+a.toStringShort())+"]"+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?
"":super.toStringShort().slice(0,-1)+", length: "+this.elements_.length+"}"}getClassName(){return"SimList"}add(a){for(let c=0;c<arguments.length;c++){const d=arguments[c];if(!d)throw"cannot add invalid SimObject";var b=d.getExpireTime();if(isFinite(b))for(;b=this.getSimilar(d);)this.remove(b);this.elements_.includes(d)||(this.elements_.push(d),this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$SimList.OBJECT_ADDED,d)))}}addAll(a){for(let b=
0,c=a.length;b<c;b++)this.add(a[b])}clear(){this.removeAll(this.toArray())}contains(a){return this.elements_.includes(a)}get(a){if("number"===typeof a){if(0<=a&&a<this.elements_.length)return this.elements_[a]}else if("string"===typeof a){a=mpl$lab$util$Util.toName(a);const b=module$contents$goog$array_find(this.elements_,function(c,d,e){return c.getName()==a});if(null!=b)return b}throw"SimList did not find "+a;}getArc(a){const b=this.get(a);if(b instanceof mpl$lab$model$Arc)return b;
throw"no Arc named "+a;}getConcreteLine(a){const b=this.get(a);if(b instanceof mpl$lab$model$ConcreteLine)return b;throw"no ConcreteLine named "+a;}getPointMass(a){const b=this.get(a);if(b instanceof mpl$lab$model$PointMass)return b;throw"no PointMass named "+a;}getSimilar(a,b){const c=void 0===b?this.tolerance_:b;return module$contents$goog$array_find(this.elements_,function(d,e,f){return d.similar(a,c)})}getSpring(a){const b=this.get(a);if(b instanceof
mpl$lab$model$Spring)return b;throw"no Spring named "+a;}getTolerance(){return this.tolerance_}indexOf(a){return this.elements_.indexOf(a)}length(){return this.elements_.length}remove(a){module$contents$goog$array_remove(this.elements_,a)&&this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$SimList.OBJECT_REMOVED,a))}removeAll(a){for(let b=0,c=a.length;b<c;b++)this.remove(a[b])}removeTemporary(a){for(let b=this.elements_.length-
1;0<=b;b--){const c=this.elements_[b];c.getExpireTime()<a&&(this.elements_.splice(b,1),this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$SimList.OBJECT_REMOVED,c)))}}setTolerance(a){this.tolerance_=a}toArray(){return Array.from(this.elements_)}}mpl$lab$model$SimList.OBJECT_ADDED="OBJECT_ADDED";mpl$lab$model$SimList.OBJECT_MODIFIED="OBJECT_MODIFIED";
mpl$lab$model$SimList.OBJECT_REMOVED="OBJECT_REMOVED";const module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$model$test$SimListTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$model$test$SimListTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$model$test$SimListTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$model$test$SimListTest_startTest=a=>mpl$test$TestRig.startTest(a),module$contents$myphysicslab$lab$model$test$SimListTest_assertNull=a=>mpl$test$TestRig.assertNull(a);
class module$contents$myphysicslab$lab$model$test$SimListTest_MockObserver1{constructor(){this.numSprings=this.numLines=this.numRectangles=this.numPoints=0}observe(a){const b=a.getValue();a.nameEquals(mpl$lab$model$SimList.OBJECT_ADDED)?b instanceof mpl$lab$model$Spring?this.numSprings++:b instanceof mpl$lab$model$PointMass?b.getShape()==mpl$lab$model$ShapeType.OVAL?this.numPoints++:b.getShape()==mpl$lab$model$ShapeType.RECTANGLE&&
this.numRectangles++:b instanceof mpl$lab$model$ConcreteLine&&this.numLines++:a.nameEquals(mpl$lab$model$SimList.OBJECT_REMOVED)&&(b instanceof mpl$lab$model$Spring?this.numSprings--:b instanceof mpl$lab$model$PointMass?b.getShape()==mpl$lab$model$ShapeType.OVAL?this.numPoints--:b.getShape()==mpl$lab$model$ShapeType.RECTANGLE&&this.numRectangles--:b instanceof
mpl$lab$model$ConcreteLine&&this.numLines--)}toStringShort(){return"MockObserver1"}}
class mpl$lab$model$test$SimListTest{static test(){module$contents$myphysicslab$lab$model$test$SimListTest_schedule(mpl$lab$model$test$SimListTest.testSimList);module$contents$myphysicslab$lab$model$test$SimListTest_schedule(mpl$lab$model$test$SimListTest.testSimListThrows)}static testSimList(){module$contents$myphysicslab$lab$model$test$SimListTest_startTest(mpl$lab$model$test$SimListTest.groupName+"testSimList");
const a=new module$contents$myphysicslab$lab$model$test$SimListTest_MockObserver1,b=mpl$lab$model$PointMass.makeCircle(1,"point1");b.setPosition(new mpl$lab$util$Vector(2,-2));const c=mpl$lab$model$PointMass.makeCircle(1,"point2");c.setPosition(new mpl$lab$util$Vector(2.01,-2.02));const d=new mpl$lab$model$ConcreteLine("line1");d.setStartPoint(new mpl$lab$util$Vector(2,
0));d.setEndPoint(new mpl$lab$util$Vector(0,2));d.setExpireTime(3);const e=new mpl$lab$model$ConcreteLine("line2");e.setStartPoint(new mpl$lab$util$Vector(2.01,.01));e.setEndPoint(new mpl$lab$util$Vector(.02,2.02));e.setExpireTime(3);const f=new mpl$lab$model$ConcreteLine("line3");f.setStartPoint(new mpl$lab$util$Vector(2.01,.01));f.setEndPoint(new mpl$lab$util$Vector(.02,
2.02));f.setExpireTime(3);const g=new mpl$lab$model$ConcreteLine("line4");g.setStartPoint(new mpl$lab$util$Vector(20,20));g.setEndPoint(new mpl$lab$util$Vector(40,40));g.setExpireTime(3);const h=new mpl$lab$model$Spring("spring1",b,mpl$lab$util$Vector.ORIGIN,c,mpl$lab$util$Vector.ORIGIN,2,12),k=mpl$lab$model$PointMass.makeRectangle(3,
2,"rect1").setMass(2),l=new mpl$lab$model$SimList;module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(.1,l.getTolerance());module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,l.length());l.addObserver(a);l.add(b);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(1,l.length());l.add(c);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(2,l.length());l.add(f,h);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(4,
l.length());l.add(k);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(5,l.length());module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue(d.similar(f,.1));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(f,l.getSimilar(d));l.add(d);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(5,l.length());module$contents$myphysicslab$lab$model$test$SimListTest_assertFalse(l.contains(f));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(b,
l.get(0));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(c,l.get(1));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(h,l.get(2));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(k,l.get(3));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(d,l.get(4));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,l.indexOf(b));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(1,l.indexOf(c));
module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(2,l.indexOf(h));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(3,l.indexOf(k));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(4,l.indexOf(d));module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue(l.contains(b));module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue(l.contains(c));module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue(l.contains(d));
module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue(l.contains(h));module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue(l.contains(k));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(b,l.get("point1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(b,l.getPointMass("point1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(c,l.get("point2"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(c,
l.getPointMass("point2"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(d,l.get("line1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(d,l.getConcreteLine("line1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(h,l.get("spring1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(h,l.getSpring("spring1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(k,l.get("rect1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(k,
l.getPointMass("rect1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(d,l.getSimilar(e,.05));module$contents$myphysicslab$lab$model$test$SimListTest_assertNull(l.getSimilar(e,.01));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(2,a.numPoints);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(1,a.numLines);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(1,a.numSprings);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(1,
a.numRectangles);l.removeObserver(a);l.add(g);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(1,a.numLines);l.remove(g);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(1,a.numLines);l.addObserver(a);l.add(g);module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue(l.contains(g));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(2,a.numLines);l.removeTemporary(10);module$contents$myphysicslab$lab$model$test$SimListTest_assertFalse(l.contains(g));
module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows(()=>l.get("line4"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,a.numLines);l.clear();module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,l.toArray().length);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,a.numPoints);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,a.numLines);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,
a.numSprings);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(0,a.numRectangles)}static testSimListThrows(){module$contents$myphysicslab$lab$model$test$SimListTest_startTest(mpl$lab$model$test$SimListTest.groupName+"testSimListThrows");const a=new mpl$lab$model$SimList,b=module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows(()=>a.add(null));module$contents$myphysicslab$lab$model$test$SimListTest_assertTrue("string"===
typeof b);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals("cannot add invalid SimObject",b);const c=new mpl$lab$model$PointMass("point1");a.add(c);module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(c,a.get("point1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertEquals(c,a.getPointMass("point1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows(()=>a.getSpring("point1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows(()=>
a.getConcreteLine("point1"));module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows(()=>a.get(c));module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows(()=>a.get([0]));module$contents$myphysicslab$lab$model$test$SimListTest_assertThrows(()=>a.get(!0))}}mpl$lab$model$test$SimListTest.groupName="SimListTest.";const module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$model$test$SpringTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$model$test$SpringTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$model$test$SpringTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$model$test$SpringTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$model$test$SpringTest{static test(){module$contents$myphysicslab$lab$model$test$SpringTest_schedule(mpl$lab$model$test$SpringTest.testSpring);module$contents$myphysicslab$lab$model$test$SpringTest_schedule(mpl$lab$model$test$SpringTest.testSpringCompressOnly)}static testSpring(){module$contents$myphysicslab$lab$model$test$SpringTest_startTest(mpl$lab$model$test$SpringTest.groupName+"testSpring");
var a=mpl$lab$model$PointMass.makeCircle(1,"point1").setMass(2);a.setPosition(new mpl$lab$util$Vector(0,1));const b=mpl$lab$model$PointMass.makeCircle(1,"point2").setMass(.5);b.setPosition(new mpl$lab$util$Vector(2,0));{var c=new mpl$lab$util$Vector(0,-2),d=mpl$lab$model$PointMass.makeCircle(1,"fixed").setMass(mpl$lab$util$Util.POSITIVE_INFINITY);
d.setPosition(c);d=new mpl$lab$model$Spring("spring1",d,mpl$lab$util$Vector.ORIGIN,b,mpl$lab$util$Vector.ORIGIN,2,12);module$contents$myphysicslab$lab$model$test$SpringTest_assertFalse(d.isMassObject());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(mpl$lab$util$Vector.ORIGIN,d.getAttach1());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(mpl$lab$util$Vector.ORIGIN,
d.getAttach2());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals("SPRING1",d.getName());module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(d.nameEquals("spring1"));module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(2,d.getRestLength());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(12,d.getStiffness());module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(Math.sqrt(8),d.getLength(),1E-15);const e=Math.sqrt(8)-
2;module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(e,d.getStretch(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(6*e*e,d.getPotentialEnergy(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(d.getStartPoint().equals(c));module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(d.getEndPoint().equals(b.getPosition()));module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(d.getAttach2().equals(mpl$lab$util$Vector.ORIGIN));
b.setPosition(new mpl$lab$util$Vector(1,0));module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(1,d.getEndPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(0,d.getEndPoint().getY());module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(Math.sqrt(5),d.getLength(),1E-15)}c=new mpl$lab$model$Spring("spring1",a,mpl$lab$util$Vector.ORIGIN,b,mpl$lab$util$Vector.ORIGIN,
2,12);module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(mpl$lab$util$Vector.ORIGIN,c.getAttach1());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(0,c.getStartPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(1,c.getStartPoint().getY());module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(Math.sqrt(2),c.getLength(),1E-15);c=new mpl$lab$model$Spring("spring1",
a,new mpl$lab$util$Vector(0,-1),b,mpl$lab$util$Vector.ORIGIN,2,12);module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(0,c.getStartPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(0,c.getStartPoint().getY());c=new mpl$lab$util$Vector(1,1);d=new mpl$lab$model$Spring("spring1",a,new mpl$lab$util$Vector(0,-1),b,c,2,12);module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(c.equals(d.getAttach2()));
module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(2,d.getEndPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(1,d.getEndPoint().getY());module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(Math.sqrt(5),d.getLength(),1E-15);c=new mpl$lab$util$MutableVector(0,-1);a=new mpl$lab$model$Spring("spring1",a,new mpl$lab$util$Vector(0,-1),b,c,2,12);module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(c.equals(a.getAttach2()));
module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(1,a.getEndPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(-1,a.getEndPoint().getY());module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(Math.sqrt(2),a.getLength(),1E-15)}static testSpringCompressOnly(){module$contents$myphysicslab$lab$model$test$SpringTest_startTest(mpl$lab$model$test$SpringTest.groupName+"testSpringCompressOnly");var a=mpl$lab$model$PointMass.makeCircle(1,
"point1").setMass(2);a.setPosition(new mpl$lab$util$Vector(1,1));const b=mpl$lab$model$PointMass.makeCircle(1,"point2").setMass(.5);b.setPosition(new mpl$lab$util$Vector(3,0));{var c=new mpl$lab$util$Vector(0,0);const d=mpl$lab$model$PointMass.makeCircle(1,"fixed").setMass(mpl$lab$util$Util.POSITIVE_INFINITY);d.setPosition(c);c=new mpl$lab$model$Spring("spring1",
d,mpl$lab$util$Vector.ORIGIN,b,mpl$lab$util$Vector.ORIGIN,2,12,!0);module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(mpl$lab$util$Vector.ORIGIN,c.getAttach1());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(mpl$lab$util$Vector.ORIGIN,c.getAttach2());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals("SPRING1",c.getName());module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(c.nameEquals("spring1"));
module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(2,c.getRestLength());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(12,c.getStiffness());module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(2,c.getLength(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(0,c.getStretch(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(0,c.getPotentialEnergy(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(0,
c.getStartPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(0,c.getStartPoint().getY());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(2,c.getEndPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(0,c.getEndPoint().getY());b.setPosition(new mpl$lab$util$Vector(2,2));module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(2,c.getLength(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(0,
c.getStretch(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(0,c.getPotentialEnergy(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(Math.sqrt(2),c.getEndPoint().getX(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(Math.sqrt(2),c.getEndPoint().getY(),1E-15);b.setPosition(new mpl$lab$util$Vector(0,1));module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(1,
c.getLength(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(-1,c.getStretch(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(6,c.getPotentialEnergy(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(c.getEndPoint().equals(b.getPosition()))}a=new mpl$lab$model$Spring("spring1",a,mpl$lab$util$Vector.ORIGIN,b,mpl$lab$util$Vector.ORIGIN,
2,12,!0);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(1,a.getLength(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(-1,a.getStretch(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(6,a.getPotentialEnergy(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertTrue(a.getEndPoint().equals(b.getPosition()));b.setPosition(new mpl$lab$util$Vector(-2,-2));module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(2,
a.getLength(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(0,a.getStretch(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(0,a.getPotentialEnergy(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(1-Math.sqrt(2),a.getEndPoint().getX(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertRoughlyEquals(1-Math.sqrt(2),a.getEndPoint().getY(),1E-15);module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(1,
a.getStartPoint().getX());module$contents$myphysicslab$lab$model$test$SpringTest_assertEquals(1,a.getStartPoint().getY())}}mpl$lab$model$test$SpringTest.groupName="SpringTest.";const module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$model$test$VarsListTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$model$test$VarsListTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$model$test$VarsListTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$model$test$VarsListTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$model$test$VarsListTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$model$test$VarsListTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$model$test$VarsListTest{static test(){module$contents$myphysicslab$lab$model$test$VarsListTest_schedule(mpl$lab$model$test$VarsListTest.testVarsList1);module$contents$myphysicslab$lab$model$test$VarsListTest_schedule(mpl$lab$model$test$VarsListTest.testVarsList2)}static testVarsList1(){module$contents$myphysicslab$lab$model$test$VarsListTest_startTest(mpl$lab$model$test$VarsListTest.groupName+
"testVarsList1");var a="position;velocity;work from damping;time;acceleration;kinetic energy;spring energy;total energy".split(";");const b=new mpl$lab$model$VarsList(a,"Position;Geschwindigkeit;Arbeit von D\u00e4mpfung;Zeit;Beschleunigung;kinetische Energie;Federenergie;gesamte Energie".split(";")),c=b.timeIndex();module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3,c);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("TIME",b.getVariable(c).getName());
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("Zeit",b.getVariable(c).getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getValue(c));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(1).getSequence());var d=b.getVariable("TIME");
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("TIME",d.getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("Zeit",d.getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertTrue(d.nameEquals("time"));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,d.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(b,d.getSubject());b.setValue(0,3);b.setValue(1,-2);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,
b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1,b.getVariable(1).getSequence());d=b.getVariable(0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(d,b.getParameter(a[0]));module$contents$myphysicslab$lab$model$test$VarsListTest_assertTrue(d.nameEquals(a[0]));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("POSITION",d.getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("Position",
d.getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3,d.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(b,d.getSubject());const e=b.getVariable(1);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(e,b.getParameter(a[1]));module$contents$myphysicslab$lab$model$test$VarsListTest_assertTrue(e.nameEquals(a[1]));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("VELOCITY",e.getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("Geschwindigkeit",
e.getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-2,e.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(b,e.getSubject());b.setValue(1,-2.1);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(2,b.getVariable(1).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3,b.getValue(0));
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3,d.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-2.1,b.getValue(1));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-2.1,e.getValue());b.setValue(0,3.1);b.setValue(1,-1.99);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3,b.getVariable(1).getSequence());
b.setValue(c,b.getTime()+.01,!0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());const f=b.getValues(!0),g=b.getTime();module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(.01,g);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3.1,b.getValue(0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1.99,b.getValue(1));d.setValue(3.2);e.setValue(-1.98);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(4,
b.getVariable(1).getSequence());b.setValue(c,b.getTime()+.01,!0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(.02,b.getTime());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3.2,b.getValue(0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3.2,d.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1.98,
b.getValue(1));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1.98,e.getValue());b.setValue(0,3.3);b.setValue(1,-1.97);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(5,b.getVariable(1).getSequence());b.setValue(c,b.getTime()+.01,!0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(.03,b.getTime());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3.3,
b.getValue(0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1.97,b.getValue(1));b.setValues(f,!0);b.setValue(c,g,!0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(g,b.getTime());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3.1,b.getValue(0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1.99,b.getValue(1));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(5,b.getVariable(1).getSequence());b.setValues([5,-2,0]);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(6,b.getVariable(1).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getVariable(7).getSequence());b.setValue(c,0,!0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,
b.getVariable(c).getSequence());b.incrSequence(c);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getTime());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(5,b.getValue(0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-2,b.getValue(1));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getValue(c));
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("VELOCITY",b.getVariable(1).getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertTrue(b.getVariable(1).nameEquals(a[1]));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("Geschwindigkeit",b.getVariable(1).getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("KINETIC_ENERGY",b.getVariable(5).getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertTrue(b.getVariable(5).nameEquals(a[5]));
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("kinetische Energie",b.getVariable(5).getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(a.length,b.numVariables());a=b.toArray().indexOf(b.getVariable("KINETIC_ENERGY"));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(5,a);a=[1,1.1,1.2,1.3,1.4,1.5,1.6,1.7];module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(a.length,b.numVariables());b.setValues(a);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1,
d.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1.1,e.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1.2,b.getValue(2));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1.7,b.getValue(7));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(2,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(7,b.getVariable(1).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1,
b.getVariable(7).getSequence());b.incrSequence(4,5,6,7);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(2,b.getVariable(c).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(7,b.getVariable(1).getSequence());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(2,b.getVariable(7).getSequence())}static testVarsList2(){module$contents$myphysicslab$lab$model$test$VarsListTest_startTest(mpl$lab$model$test$VarsListTest.groupName+
"testVarsList2");var a=new mpl$lab$model$VarsList([],[]);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,a.numVariables());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1,a.timeIndex());a=new mpl$lab$model$VarsList(["foo"],["foo"]);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(1,a.numVariables());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1,a.timeIndex());
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("FOO",a.getVariable(0).getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("foo",a.getVariable(0).getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,a.getValue(0));a=a.getVariable(0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("FOO",a.getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("foo",a.getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,
a.getValue());a=new mpl$lab$model$VarsList(["foo","bar"],["foo","bar"]);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(2,a.numVariables());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(-1,a.timeIndex());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("FOO",a.getVariable(0).getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("BAR",a.getVariable(1).getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("foo",
a.getVariable(0).getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("bar",a.getVariable(1).getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,a.getValue(0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,a.getValue(1));var b=a.getVariable(0);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("FOO",b.getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("foo",b.getName(!0));
module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getValue());b=a.getVariable(1);module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("BAR",b.getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("bar",b.getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,b.getValue());a.addVariable(new mpl$lab$model$ConcreteVariable(a,"baz","baz"));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(3,
a.numVariables());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("BAZ",a.getVariable(2).getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("baz",a.getVariable(2).getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,a.getValue(2));a=a.getVariable("BAZ");module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("BAZ",a.getName());module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals("baz",
a.getName(!0));module$contents$myphysicslab$lab$model$test$VarsListTest_assertEquals(0,a.getValue());module$contents$myphysicslab$lab$model$test$VarsListTest_assertThrows(()=>new mpl$lab$model$VarsList(["foo","foo"],["foo","foo"]))}}mpl$lab$model$test$VarsListTest.groupName="VarsListTest.";class mpl$lab$engine2D$Vertex extends mpl$lab$util$Printable{getCurvature(){}getEdge1(){}getEdge2(){}getID(){}highlight(){}isEndPoint(){}locBody(){}locBodyX(){}locBodyY(){}safeGetEdge2(){}setEdge1(a){}setEdge2(a){}};class mpl$lab$engine2D$Edge extends mpl$lab$util$Printable{constructor(){super()}addPath(a){}chordError(){}distanceToEdge(a){}distanceToLine(a){}distanceToPoint(a){}findVertexContact(a,b,c){}forgetPosition(){}getBody(){}getBottomBody(){}getCenterOfCurvature(a){}getCentroidBody(){}getCentroidRadius(){}getCentroidWorld(){}getCurvature(a){}getIndex(){}getLeftBody(){}getNormalBody(a){}getPointOnEdge(a){}getRightBody(){}getTopBody(){}getVertex1(){}getVertex2(){}getDecoratedVertexes(){}highlight(){}improveAccuracyEdge(a,
b){}intersection(a,b){}intersectionPossible(a,b){}maxDistanceTo(a){}pointOffset(a,b){}setCentroidRadius(a){}setVertex2(a){}testCollisionEdge(a,b,c){}};class mpl$lab$engine2D$DebugEngine2D{debugCircle(a,b,c,d){}debugLine(a,b,c,d){}getTime(){}myPrint(a,b){}}mpl$lab$engine2D$DebugEngine2D.PROXIMITY_TEST=!0;class mpl$lab$engine2D$UtilEngine{constructor(){throw"";}static square(a){return a*a}static addColumnToMatrix(a,b){const c=a.length;if(b.length!=c)throw"";const d=mpl$lab$engine2D$UtilEngine.newEmptyMatrix(c,c+1);for(let e=0;e<c;e++)for(let f=0;f<c;f++)d[e][f]=a[e][f];for(a=0;a<c;a++)d[a][c]=b[a];return d}static checkArrayNaN(a){if(mpl$lab$util$Util.DEBUG){let b=!0;for(let c=0,d=a.length;c<d;c++)b=b&&!isNaN(a[c]);b||(mpl$lab$engine2D$UtilEngine.printArray("fail NaN ",
a),goog.asserts.fail("checkArrayNaN"))}}static colinearity(a){goog.asserts.assert(3==a.length);const b=mpl$lab$util$Vector.clone(a[1]).subtract(a[0]).normalize();a=mpl$lab$util$Vector.clone(a[2]).subtract(a[0]).normalize();return null==b||null==a?0:Math.abs(b.dotProduct(a))}static countBoolean(a,b){let c=0;for(let d=0;d<b;d++)a[d]&&c++;return c}static distanceToLine(a,b,c){if(Math.abs(b.getX())<mpl$lab$util$Vector.TINY_POSITIVE)c=
Math.abs(c.getX()-a.getX());else if(Math.abs(b.getY())<mpl$lab$util$Vector.TINY_POSITIVE)c=Math.abs(c.getY()-a.getY());else{const d=b.getY()/b.getX();b=(-a.getY()+c.getY()+d*a.getX()+c.getX()/d)/(1/d+d);a=a.getY()+d*(b-a.getX());b=c.getX()-b;c=c.getY()-a;c=Math.sqrt(b*b+c*c)}return c}static findMinimumSimplex(a,b,c,d){if(2>d.length)throw mpl$lab$util$Util.DEBUG?"info array length < 2":"";if(3!=a.length)throw mpl$lab$util$Util.DEBUG?
"must pass 3 points":"";const e=Array(3);for(var f=0;3>f;f++)e[f]=b(a[f]);e[0]>e[1]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,0,1);e[1]>e[2]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,1,2);e[0]>e[1]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,0,1);const g=new mpl$lab$util$MutableVector(0,0),h=new mpl$lab$util$MutableVector(0,0),k=new mpl$lab$util$MutableVector(0,
0),l=new mpl$lab$util$MutableVector(0,0),m=new mpl$lab$util$MutableVector(0,0),p=new mpl$lab$util$MutableVector(0,0);f=0;for(var t;(t=mpl$lab$engine2D$UtilEngine.maxDistance(a))>c;){goog.asserts.assert(e[0]<=e[1]);goog.asserts.assert(e[1]<=e[2]);f++;if(mpl$lab$engine2D$UtilEngine.debugSimplex_)for(console.log("iteration "+f+" max dist "+mpl$lab$util$Util.NF5(t)),
t=0;3>t;t++)console.log(t+". "+mpl$lab$util$Util.NF5(e[t])+" at "+a[t]);if(1E4<f)return mpl$lab$engine2D$UtilEngine.debugSimplex_&&(b=mpl$lab$engine2D$UtilEngine.colinearity(a),console.log("FAILURE colinearity = "+mpl$lab$util$Util.NF5(b)+" value="+mpl$lab$util$Util.NF5(e[0]))),d[0]=f,d[1]=1,mpl$lab$util$Vector.clone(a[0]);g.setToVector(a[0]).add(a[1]).divide(2);
h.setToVector(g).multiply(2).subtract(a[2]);t=b(h);mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Reflection "+mpl$lab$util$Util.NF5(t)+" at "+h);if(t<e[1])if(t>=e[0])mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Reflection, good but not best "),e[2]=t,a[2].setToVector(h),mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,1,2);else{k.setToVector(h).multiply(2).subtract(g);var y=b(k);mpl$lab$engine2D$UtilEngine.debugSimplex_&&
console.log("Expansion "+mpl$lab$util$Util.NF5(y)+" at "+k);y<t?(mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Expansion best (better than reflection) "),e[2]=y,a[2].setToVector(k)):(mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Reflection best (better than expansion) "),e[2]=t,a[2].setToVector(h));mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,1,2);mpl$lab$engine2D$UtilEngine.swapPointValue(e,
a,0,1)}else l.setToVector(a[2]).add(g).divide(2),t=b(l),mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Contraction1 "+mpl$lab$util$Util.NF5(t)+" at "+l),p.setToVector(a[2].divide(2)),m.setToVector(g).multiply(1.5).subtract(p),y=b(m),mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Contraction2 "+mpl$lab$util$Util.NF5(y)+" at "+m),t<e[2]&&t<y?(mpl$lab$engine2D$UtilEngine.debugSimplex_&&
console.log("Contraction1 better than worst "),e[2]=t,a[2].setToVector(l),e[2]<e[1]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,1,2),e[1]<e[0]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,0,1)):y<e[2]?(mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Contraction2 better than worst "),e[2]=y,a[2].setToVector(m),e[2]<e[1]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,1,2),e[1]<e[0]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,
a,0,1)):(mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Reduction "),a[1].add(a[0]).divide(2),a[2].add(a[0]).divide(2),e[1]=b(a[1]),e[2]=b(a[2]),mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Reduction1 "+mpl$lab$util$Util.NF5(e[1])+" at "+a[1]),mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("Reduction2 "+mpl$lab$util$Util.NF5(e[2])+" at "+a[2]),e[0]>e[1]&&
mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,0,1),e[1]>e[2]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,1,2),e[0]>e[1]&&mpl$lab$engine2D$UtilEngine.swapPointValue(e,a,0,1))}.01<e[0]&&mpl$lab$engine2D$UtilEngine.debugSimplex_&&console.log("did not go to zero "+e[0]);d[0]=f;d[1]=0;return mpl$lab$util$Vector.clone(a[0])}static formatArray(a,b,c,d){d=d||mpl$lab$util$Util.NF5E;
b=b||0;if(b>=a.length)throw"";c=b+(c||a.length-b);let e="";for(;b<c;b++)e+="["+b+"]"+d(a[b])+", ";return e}static linesIntersect(a,b,c,d){let e=a.getX();a=a.getY();let f=b.getX();b=b.getY();let g=c.getX();c=c.getY();let h=d.getX(),k=d.getY();var l=e>f?e:f;if(g>l&&h>l)return null;l=e<f?e:f;if(g<l&&h<l)return null;l=a>b?a:b;if(c>l&&k>l)return null;l=a<b?a:b;if(c<l&&k<l)return null;if(1E-16>Math.abs(f-e)){if(1E-16>Math.abs(h-g))return null;var m=e;d=(k-c)/(h-g)*(m-g)+c;b<a&&(l=a,a=b,b=l);h<g&&(l=g,g=
h,h=l);k<c&&(l=c,c=k,k=l);return a-1E-14<=d&&d<=b+1E-14&&g-1E-14<=m&&m<=h+1E-14&&c-1E-14<=d&&d<=k+1E-14?new mpl$lab$util$Vector(m,d):null}if(1E-16>Math.abs(h-g))return m=g,d=(b-a)/(f-e)*(m-e)+a,b<a&&(l=a,a=b,b=l),f<e&&(l=e,e=f,f=l),k<c&&(l=c,c=k,k=l),e-1E-14<=m&&m<=f+1E-14&&a-1E-14<=d&&d<=b+1E-14&&c-1E-14<=d&&d<=k+1E-14?new mpl$lab$util$Vector(m,d):null;l=(b-a)/(f-e);m=(k-c)/(h-g);if(1E-16>Math.abs(m-l))return null;1E-16>Math.abs(m)?(d=(c+k)/2,m=(d-
a)/l+e):1E-16>Math.abs(l)?(d=(a+b)/2,m=(d-c)/m+g):(m=(m*g-l*e-c+a)/(m-l),d=l*(m-e)+a);b<a&&(l=a,a=b,b=l);f<e&&(l=e,e=f,f=l);h<g&&(l=g,g=h,h=l);k<c&&(l=c,c=k,k=l);return e-1E-14<=m&&m<=f+1E-14&&a-1E-14<=d&&d<=b+1E-14&&g-1E-14<=m&&m<=h+1E-14&&c-1E-14<=d&&d<=k+1E-14?new mpl$lab$util$Vector(m,d):null}static maxDistance(a){goog.asserts.assert(3==a.length);let b=a[0].distanceSquaredTo(a[1]),c=a[0].distanceSquaredTo(a[2]);c>b&&(b=c);c=a[1].distanceSquaredTo(a[2]);c>b&&(b=c);return Math.sqrt(b)}static maxSize(a,
b){let c=0;b=b||a.length;for(let d=0;d<b;d++){const e=Math.abs(a[d]);e>c&&(c=e)}return c}static minValue(a,b){let c=mpl$lab$util$Util.POSITIVE_INFINITY;b=b||a.length;for(let d=0;d<b;d++)a[d]<c&&(c=a[d]);return c}static printArray(a,b,c,d){if(mpl$lab$util$Util.DEBUG){c=c||mpl$lab$util$Util.NF7E;d=d||b.length;for(let e=0;e<d;e++)a+=" ["+e+"]="+c(b[e]);console.log(a)}}static printArray2(a,b,c,d){if(mpl$lab$util$Util.DEBUG){c=
c||mpl$lab$util$Util.NF7E;d=d||b.length;a+=" ";for(let e=0;e<d;e++)a+=c(b[e])+", ";console.log(a)}}static printArray3(a,b,c){if(mpl$lab$util$Util.DEBUG){for(let e=0,f=b.length;e<f;e++){var d=void 0;d=b[e];void 0!==d?(d=d.toFixed(2),"0.00"===d&&(d="     ")):d="undef";a+=d+c}console.log(a)}}static printArrayIndices(a,b,c){if(mpl$lab$util$Util.DEBUG){a+=" [";for(let d=0;d<c;d++)b[d]&&(a+=d+", ");console.log(a+"]")}}static printArrayPermutation(a,
b,c,d,e){if(mpl$lab$util$Util.DEBUG){d=d||mpl$lab$util$Util.NF7;e=e||b.length;for(let f=0;f<e;f++)a+=d(b[c[f]])+", ";console.log(a)}}static printList(a,b){if(mpl$lab$util$Util.DEBUG){a+=" [";for(let c=0,d=b.length;c<d;c++)a+=b[c].toString()+", ";console.log(a+"]")}}static printMatrix2(a,b,c,d){if(mpl$lab$util$Util.DEBUG)for(c=c||mpl$lab$util$Util.NF7E,d=d||b.length,console.log(a),
a=0;a<d;a++)mpl$lab$engine2D$UtilEngine.printArray2("",b[a],c,d)}static printMatrix3(a,b,c){if(mpl$lab$util$Util.DEBUG){console.log(a);for(let d=0,e=b.length;d<e;d++)mpl$lab$engine2D$UtilEngine.printArray3("",b[c[d]],",")}}static printMatrixPermutation(a,b,c,d,e,f){if(mpl$lab$util$Util.DEBUG)for(console.log(a),f=f||b.length,a=0;a<f;a++)mpl$lab$engine2D$UtilEngine.printArrayPermutation("",
b[c[a]],d,e,f+1)}static matrixMultiply(a,b,c){const d=b.length;goog.asserts.assert(a.length>=d);goog.asserts.assert(a[0].length>=d);goog.asserts.assert(!c||c.length>=d);const e=Array(d);for(let f=0;f<d;f++){e[f]=0;for(let g=0;g<d;g++)e[f]+=a[f][g]*b[g];c&&(e[f]+=-c[f])}return e}static matrixSolveError(a,b,c){a=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,b,c);return a[mpl$lab$engine2D$UtilEngine.maxIndex(a)]}static matrixSolve4(a,b,c,d){d=void 0===d?
mpl$lab$engine2D$UtilEngine.MATRIX_SOLVE_ZERO_TOL:d;a=mpl$lab$engine2D$UtilEngine.addColumnToMatrix(a,c);return mpl$lab$engine2D$UtilEngine.matrixSolve3(a,b,d,Array(b.length))}static matrixSolve3(a,b,c,d){const e=mpl$lab$engine2D$UtilEngine.MATRIX_SOLVE_DEBUG,f=b.length;goog.asserts.assert(a.length>=f);goog.asserts.assert(a[0].length>=f+1);mpl$lab$util$Util.DEBUG&&e&&console.log("maxtrixSolve3 n="+
f);goog.asserts.assert(d.length>=f);const g=Array(f+1);var h=Array(f);for(var k=0;k<f;k++){d[k]=k;g[k]=k;h[k]=0;for(var l=0;l<f;l++)Math.abs(a[k][l])>h[k]&&(h[k]=Math.abs(a[k][l]));if(h[k]<mpl$lab$engine2D$UtilEngine.SMALL_POSITIVE)return mpl$lab$util$Util.DEBUG&&(console.log("no unique solution, because row "+k+" is zero; n="+f),mpl$lab$engine2D$UtilEngine.printMatrix2("A",a,mpl$lab$util$Util.NF7,f)),
k}g[f]=f;l=k=0;a:for(var m=0;m<f;m++){mpl$lab$util$Util.DEBUG&&l++>2*f&&console.log("matrixSolv3 loopCtr="+l+" c="+m+" n="+f);for(var p=0;;){var t=k,y=Math.abs(a[d[t]][g[m]])/h[d[t]];for(let x=k+1;x<f;x++){let A=Math.abs(a[d[x]][g[m]])/h[d[x]];A>y&&(y=A,t=x)}if(Math.abs(a[d[t]][g[m]])<c){e&&mpl$lab$util$Util.DEBUG&&console.log("largest scaled entry in column "+m+" is small: "+mpl$lab$util$Util.NFE(a[d[t]][g[m]]));if(p>=f-1-m){e&&
mpl$lab$util$Util.DEBUG&&console.log("columnSwaps="+p+" >= "+(f-1)+" - "+m);break a}e&&mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilEngine.printArray("before column swap; c="+m,g);t=g[m];for(y=m;y<f-1;y++)g[y]=g[y+1];g[f-1]=t;p++;e&&mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilEngine.printArray("after column swap",g)}else{d[k]!=d[t]&&(p=d[k],d[k]=d[t],d[t]=p);for(p=k+1;p<f;p++)for(t=
a[d[p]][g[m]]/a[d[k]][g[m]],y=0;y<f+1;y++)a[d[p]][g[y]]-=t*a[d[k]][g[y]];e&&mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilEngine.printMatrixPermutation("A "+f,a,d,g,mpl$lab$util$Util.NFE,f);k++;break}}}k--;e&&mpl$lab$util$Util.DEBUG&&console.log("last row treated: r = "+k);if(k<f-1)for(h=k+1;h<f;h++)if(.1<Math.abs(a[d[h]][f]))return d[h];h=f-1;for(l=f;0<=k;){m=-1;for(p=h;p>=k;p--)Math.abs(a[d[k]][g[p]])>
c&&(m=p);-1!=m&&m!=h&&(h=m,e&&mpl$lab$util$Util.DEBUG&&console.log("move left in row  r = "+k+" to c="+h+" A[r,c]="+mpl$lab$util$Util.NFE(a[d[k]][g[h]])));if(Math.abs(a[d[k]][g[h]])<c)e&&mpl$lab$util$Util.DEBUG&&console.log("zero on diagonal move up a row r="+k+" c="+h+" A[r,c]="+mpl$lab$util$Util.NFE(a[d[k]][g[h]])),k--;else{e&&mpl$lab$util$Util.DEBUG&&console.log("r="+k+" c="+
h+" A[r,c]="+mpl$lab$util$Util.NFE(a[d[k]][g[h]]));if(1<l-h)for(m=h+1;m<l;m++)b[g[m]]=0;l=h;m=0;for(p=h+1;p<f;p++)m+=a[d[k]][g[p]]*b[g[p]];b[g[h]]=(a[d[k]][f]-m)/a[d[k]][g[h]];h--;k--}}return-1}static matrixIsSingular(a,b,c,d){let e=mpl$lab$util$Util.POSITIVE_INFINITY,f=0;for(let g=0;g<b;g++){const h=Math.abs(a[c[g]][g]);h<e&&(e=h);h>f&&(f=h)}return Math.abs(e)<d}static maxIndex(a){let b=0,c=-1;for(let d=0,e=a.length;d<e;d++)Math.abs(a[d])>b&&(b=Math.abs(a[d]),
c=d);return c}static nearness(a,b,c){if(a==mpl$lab$util$Util.NaN||b==mpl$lab$util$Util.NaN)throw"";a=a==mpl$lab$util$Util.POSITIVE_INFINITY?0<b?b:a:b==mpl$lab$util$Util.POSITIVE_INFINITY?0<a?a:b:0<a&&0<b?a<b?a:b:0>a?-a:-b;goog.asserts.assert(0<a);return a==mpl$lab$util$Util.POSITIVE_INFINITY?c:2*a*Math.sqrt(2*c/a)}static newEmptyMatrix(a,b){b=b||a;const c=Array(a);for(let d=0;d<
a;d++)c[d]=new Float64Array(b);return c}static newMatrixFromArray(a,b){if(b.length<a*a)throw"";const c=mpl$lab$engine2D$UtilEngine.newEmptyMatrix(a);let d=0;for(let e=0;e<a;e++)for(let f=0;f<a;f++)f<a&&(c[e][f]=b[d]),d++;return c}static newMatrixFromArray2(a,b){if(b.length<a*(a+1))throw"a.length="+b.length+" n="+a;const c=mpl$lab$engine2D$UtilEngine.newEmptyMatrix(a);let d=0;for(let e=0;e<a;e++)for(let f=0;f<a+1;f++)f<a&&(c[e][f]=b[d]),d++;return c}static swapPointValue(a,
b,c,d){const e=a[c];a[c]=a[d];a[d]=e;a=b[c];b[c]=b[d];b[d]=a}static vectorAdd(a,b){const c=a.length;goog.asserts.assert(b.length==c);const d=Array(c);for(let e=0;e<c;e++)d[e]=a[e]+b[e];return d}static vectorLength(a){let b=0;for(let c=0,d=a.length;c<d;c++)b+=a[c]*a[c];return Math.sqrt(b)}}mpl$lab$engine2D$UtilEngine.debugEngine2D=null;mpl$lab$engine2D$UtilEngine.SMALL_POSITIVE=1E-10;
mpl$lab$engine2D$UtilEngine.SMALL_NEGATIVE=-1E-10;mpl$lab$engine2D$UtilEngine.TOLERANCE=1E-10;mpl$lab$engine2D$UtilEngine.MATRIX_SOLVE_ZERO_TOL=1E-10;mpl$lab$engine2D$UtilEngine.MATRIX_SOLVE_DEBUG=!1;mpl$lab$engine2D$UtilEngine.debugSimplex_=!1;class mpl$lab$engine2D$AbstractEdge{constructor(a,b,c){this.v1_=b;this.v2_=c;this.centroid_body_=this.v1_.locBody().add(this.v2_.locBody()).multiply(.5);this.centroid_world_=null;this.centroidRadius_=mpl$lab$util$Util.NaN;this.body_=a;this.index_=-1;this.isStraight=!1}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", v1_: "+this.v1_.toStringShort()+", v2_: "+this.v2_.toStringShort()+", centroid_body_: "+
this.centroid_body_+", centroidRadius_: "+mpl$lab$util$Util.NF5(this.centroidRadius_)}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+'{body_.name: "'+this.body_.getName()+'", index_: '+this.getIndex()+"}"}addPath(a){}chordError(){}distanceToEdge(a){}distanceToLine(a){}distanceToPoint(a){}findVertexContact(a,b,c){}forgetPosition(){this.centroid_world_=null}getBody(){return this.body_}getBottomBody(){}getCenterOfCurvature(a){}getCentroidBody(){return this.centroid_body_}getCentroidRadius(){isNaN(this.centroidRadius_)&&
(this.centroidRadius_=1.25*this.maxDistanceTo(this.centroid_body_));return this.centroidRadius_}getCentroidWorld(){null==this.centroid_world_&&(this.centroid_world_=this.body_.bodyToWorld(this.centroid_body_));return this.centroid_world_}getClassName(){}getCurvature(a){}getDecoratedVertexes(){return[]}getIndex(){if(-1==this.index_&&(this.index_=this.body_.getEdges_().indexOf(this),-1==this.index_))throw"";return this.index_}getLeftBody(){}getNormalBody(a){}getPointOnEdge(a){}getRightBody(){}getTopBody(){}getVertex1(){return this.v1_}getVertex2(){return this.v2_}highlight(){}improveAccuracyEdge(a,
b){}intersection(a,b){}intersectionPossible(a,b){var c=this.getCentroidWorld();const d=a.getCentroidWorld();c=c.subtract(d).lengthSquared();a=mpl$lab$engine2D$UtilEngine.square(a.getCentroidRadius()+this.getCentroidRadius()+b);return c<a}maxDistanceTo(a){}pointOffset(a,b){const c=this.getNormalBody(a);return a.add(c.multiply(b))}setCentroidRadius(a){this.centroidRadius_=a}setVertex2(a){this.v2_=a}testCollisionEdge(a,b,c){}}
mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE=1E-10;class mpl$lab$model$Collision{bilateral(){}closeEnough(a){}contact(){}getDetectedTime(){}getDistance(){}getEstimatedTime(){}getImpulse(){}getVelocity(){}illegalState(){}isColliding(){}isTouching(){}needsHandling(){}setNeedsHandling(a){}updateCollision(a){}};class mpl$lab$engine2D$LocalCoords{constructor(){this.loc_world_=this.cm_body_=mpl$lab$util$Vector.ORIGIN;this.sinAngle_=0;this.cosAngle_=1}toString(){return mpl$lab$util$Util.ADVANCED?"":"LocalCoords{loc_world_: "+this.loc_world_+", cm_body_: "+this.cm_body_+", sinAngle_: "+mpl$lab$util$Util.NF(this.sinAngle_)+", cosAngle_: "+mpl$lab$util$Util.NF(this.cosAngle_)+"}"}bodyToWorld(a){var b=
a.getX()-this.cm_body_.getX();const c=a.getY()-this.cm_body_.getY();a=this.loc_world_.getX()+(b*this.cosAngle_-c*this.sinAngle_);b=this.loc_world_.getY()+(b*this.sinAngle_+c*this.cosAngle_);return new mpl$lab$util$Vector(a,b)}set(a,b,c,d){this.cm_body_=a;this.loc_world_=b;this.sinAngle_=c;this.cosAngle_=d}worldToBody(a){var b=a.getX()-this.loc_world_.getX();const c=a.getY()-this.loc_world_.getY(),d=-this.sinAngle_,e=this.cosAngle_;a=this.cm_body_.getX()+(b*e-c*d);b=this.cm_body_.getY()+
(b*d+c*e);return new mpl$lab$util$Vector(a,b)}};class mpl$lab$engine2D$RigidBody extends mpl$lab$model$MassObject{addNonCollide(a){}doesNotCollide(a){}eraseOldCoords(){}getAccuracy(){}getDistanceTol(){}getElasticity(){}getOldCoords(){}getVarsIndex(){}getVelocityTol(){}removeNonCollide(a){}saveOldCoords(){}setAccuracy(a){}setDistanceTol(a){}setElasticity(a){}setVelocityTol(a){}};class mpl$lab$engine2D$Connector extends mpl$lab$model$SimObject{addCollision(a,b,c){}align(){}getBody1(){}getBody2(){}getNormalDistance(){}getPosition1(){}getPosition2(){}updateCollision(a){}};class mpl$lab$engine2D$RigidBodyCollision{constructor(a,b,c){this.primaryBody=a;this.normalBody=b;this.joint=c;this.distanceTol_=Math.max(a.getDistanceTol(),b.getDistanceTol());this.targetGap_=c?0:this.distanceTol_/2;c=Math.max(a.getAccuracy(),b.getAccuracy());if(0>=c||1<c)throw"accuracy must be between 0 and 1, is "+c;this.accuracy_=c*this.distanceTol_/2;this.velocityTol_=Math.max(a.getVelocityTol(),b.getVelocityTol());this.elasticity_=Math.min(a.getElasticity(),b.getElasticity());
this.ballNormal=this.ballObject=this.mustHandle_=this.normalFixed=!1;this.impact1=mpl$lab$util$Vector.ORIGIN;this.impact2=null;this.detectedDistance_=this.distance=mpl$lab$util$Util.NaN;this.normal=mpl$lab$util$Vector.NORTH;this.normal_dt=null;this.detectedVelocity_=this.normalVelocity_=this.radius2=this.radius1=mpl$lab$util$Util.NaN;this.creator="";this.force=this.impulse=this.updateTime_=this.estimate_=
this.detectedTime_=mpl$lab$util$Util.NaN}toString(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+"{distance: "+mpl$lab$util$Util.NF5E(this.distance)+", normalVelocity_: "+mpl$lab$util$Util.NF5E(this.normalVelocity_)+', body: "'+this.primaryBody.getName()+'", normalBody: "'+this.normalBody.getName()+'", impact1: '+this.impact1+", contact: "+this.contact()+", joint: "+this.joint+", elasticity_: "+
mpl$lab$util$Util.nf5(this.elasticity_)+", targetGap_: "+mpl$lab$util$Util.NF5E(this.targetGap_)+", accuracy_: "+mpl$lab$util$Util.NF7(this.accuracy_)+", mustHandle_: "+this.mustHandle_+", impact2: "+(null!=this.impact2?this.impact2:"null")+", normal: "+this.normal+", ballObject: "+this.ballObject+", ballNormal: "+this.ballNormal+", estimate_: "+mpl$lab$util$Util.NF7(this.estimate_)+", detectedTime_: "+
mpl$lab$util$Util.NF7(this.detectedTime_)+", detectedDistance_: "+mpl$lab$util$Util.NF5E(this.detectedDistance_)+", detectedVelocity_: "+mpl$lab$util$Util.NF5E(this.detectedVelocity_)+", impulse: "+mpl$lab$util$Util.NF5E(this.impulse)+", force: "+mpl$lab$util$Util.NF5E(this.force)+", updateTime_: "+mpl$lab$util$Util.NF7(this.updateTime_)+", creator: "+this.creator+
"}"}bilateral(){return this.joint}checkConsistent(){goog.asserts.assert(isFinite(this.accuracy_));goog.asserts.assert(isFinite(this.detectedTime_));goog.asserts.assert(isFinite(this.detectedDistance_));goog.asserts.assert(isFinite(this.detectedVelocity_));goog.asserts.assert(isFinite(this.distance));goog.asserts.assert(isFinite(this.getNormalVelocity()));goog.asserts.assert(null!=this.primaryBody);goog.asserts.assert(null!=this.normalBody);goog.asserts.assert(isFinite(this.normal.getX()));goog.asserts.assert(isFinite(this.normal.getY()));
goog.asserts.assert(isFinite(this.impact1.getX()));goog.asserts.assert(isFinite(this.impact1.getY()));goog.asserts.assert(1E-12>Math.abs(this.normal.length()-1));this.ballNormal&&goog.asserts.assert(!isNaN(this.radius2)||null!=this.normal_dt)}closeEnough(a){return this.contact()?!0:a?(mpl$lab$util$Util.DEBUG&&0<this.distance&&this.distance<this.targetGap_-this.accuracy_&&console.log("%cTINY DISTANCE%c "+this,"background:#f9c","color:black","background:#fc6","color:black"),
0<this.distance&&this.distance<this.targetGap_+this.accuracy_):this.distance>this.targetGap_-this.accuracy_&&this.distance<this.targetGap_+this.accuracy_}contact(){return this.joint||Math.abs(this.getNormalVelocity())<this.velocityTol_&&0<this.distance&&this.distance<this.distanceTol_}distanceToHalfGap(){return this.distance-this.targetGap_}getClassName(){}getConnector(){return null}getDetectedTime(){return this.detectedTime_}getDistance(){return this.distance}getElasticity(){return this.elasticity_}getEstimatedTime(){return this.estimate_}getImpact1(){return this.impact1}getImpact2(){return this.impact2}getImpulse(){return this.impulse}getLateralVelocity(){return(new mpl$lab$util$Vector(-this.normal.getY(),
this.normal.getX())).dotProduct(this.getRelativeVelocity())}getNormalBody(){return this.normalBody}getNormalVelocity(){isNaN(this.normalVelocity_)&&(this.normalVelocity_=this.normal.dotProduct(this.getRelativeVelocity()),goog.asserts.assert(!isNaN(this.normalVelocity_)));return this.normalVelocity_}getR1(){return this.impact1.subtract(this.primaryBody.getPosition())}getR2(){return(this.impact2?this.impact2:this.impact1).subtract(this.normalBody.getPosition())}getPrimaryBody(){return this.primaryBody}getRelativeVelocity(){var a=
0,b=0,c=0,d=0;if(isFinite(this.primaryBody.getMass())){a=this.getU1();b=a.getX();a=a.getY();goog.asserts.assert(isFinite(b)&&isFinite(a),"not a number: rax, ray");var e=this.primaryBody.getVelocity(),f=this.primaryBody.getAngularVelocity();a=e.getX()-f*a;b=e.getY()+f*b}isFinite(this.normalBody.getMass())&&(c=this.getU2(),d=c.getX(),c=c.getY(),goog.asserts.assert(isFinite(d)&&isFinite(c),"not a number: rbx, rby"),e=this.normalBody.getVelocity(),f=this.normalBody.getAngularVelocity(),c=e.getX()-f*c,
d=e.getY()+f*d);return new mpl$lab$util$Vector(a-c,b-d)}getU1(){return this.getR1()}getU2(){return this.getR2()}getVelocity(){return this.getNormalVelocity()}hasBody(a){return this.primaryBody==a||this.normalBody==a}hasEdge(a){return!1}hasVertex(a){return!1}illegalState(){return this.joint?!1:0>this.distance}isColliding(){return this.joint?!1:0>this.distance||this.getNormalVelocity()<-this.velocityTol_&&this.distance<this.targetGap_-this.accuracy_?!0:!1}isTouching(){return this.joint||
this.distance<this.distanceTol_}needsHandling(){return this.mustHandle_}setDetectedTime(a){if(isFinite(this.detectedTime_))throw"detectedTime_ already set "+this;this.detectedTime_=a;this.detectedDistance_=this.distance;const b=this.getNormalVelocity();this.detectedVelocity_=b;this.estimate_=mpl$lab$util$Util.NaN;this.joint||(goog.asserts.assert(isFinite(this.distance)),goog.asserts.assert(isFinite(b)),-.001>b&&(this.estimate_=a+(this.targetGap_-this.distance)/b))}setNeedsHandling(a){this.mustHandle_=
a}similarTo(a){}updateCollision(a){if(!isFinite(this.distance))throw"distance is NaN "+this;this.normalVelocity_=mpl$lab$util$Util.NaN;this.checkConsistent();this.updateTime_=a;(this.needsHandling()||!this.contact())&&0>this.getNormalVelocity()?this.updateEstimatedTime(a,!0):this.estimate_=mpl$lab$util$Util.NaN}updateEstimatedTime(a,b){const c=this.detectedTime_;var d=this.distance,e=this.getNormalVelocity(),f=this.detectedVelocity_,g=c-a;1E-12>=g||
(f=(f-e)/g,1E-12>Math.abs(f)||(g=Math.sqrt(e*e-2*f*(d-this.targetGap_)),d=a+(-e+g)/f,e=a+(-e-g)/f,b&&(b=!1,d>a&&d<c&&(this.estimate_=d,b=!0),e>a&&e<c&&(!b||e<d)&&(this.estimate_=e))))}};class mpl$lab$engine2D$EdgeEdgeCollision extends mpl$lab$engine2D$RigidBodyCollision{constructor(a,b){super(a.getBody(),b.getBody(),!1);this.primaryEdge=a;this.normalEdge=b;this.u2_=this.u1_=null}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+", primaryEdge: "+this.primaryEdge.getIndex()+", normalEdge: "+this.normalEdge.getIndex()+"}"}getClassName(){return"EdgeEdgeCollision"}checkConsistent(){super.checkConsistent();
goog.asserts.assert(null!=this.primaryEdge);goog.asserts.assert(this.primaryEdge.isStraight==!this.ballObject);goog.asserts.assert(null!=this.normalEdge);goog.asserts.assert(this.normalEdge.isStraight==!this.ballNormal)}getU1(){if(null!=this.u1_)return this.u1_;if(this.ballObject){const a=this.primaryEdge;goog.asserts.assert(this.primaryBody==a.getBody());return this.u1_=this.primaryBody.bodyToWorld(a.getCenterBody()).subtract(this.primaryBody.getPosition())}return this.getR1()}getU2(){if(null!=this.u2_)return this.u2_;
if(this.ballNormal){const a=this.normalEdge;goog.asserts.assert(this.normalBody==a.getBody());return this.u2_=this.normalBody.bodyToWorld(a.getCenterBody()).subtract(this.normalBody.getPosition())}return this.getR2()}hasEdge(a){return null==a?!1:a==this.normalEdge||a==this.primaryEdge}similarTo(a){if(!(a.hasBody(this.primaryBody)&&a.hasBody(this.normalBody)&&a.hasEdge(this.normalEdge)&&a.hasEdge(this.primaryEdge)))return!1;const b=mpl$lab$engine2D$UtilEngine.nearness(this.radius1,
this.radius2,this.distanceTol_);return this.impact1.subtract(a.impact1).lengthSquared()>b*b||.9>Math.abs(this.normal.dotProduct(a.normal))?!1:!0}updateCollision(a){this.u2_=this.u1_=null;this.primaryEdge.improveAccuracyEdge(this,this.normalEdge);super.updateCollision(a)}};class mpl$lab$engine2D$CornerEdgeCollision extends mpl$lab$engine2D$RigidBodyCollision{constructor(a,b){const c=a.getEdge1();if(null==c)throw"CornerEdgeCollision: null edge; vertex="+a;super(c.getBody(),b.getBody(),!1);this.vertex=a;this.normalEdge=b;this.primaryEdge=c;this.u2_=null;this.primaryEdge2=a.isEndPoint()?a.getEdge2():null;this.radius1=a.getCurvature();this.ballObject=!1}toString(){return mpl$lab$util$Util.ADVANCED?
"":super.toString().slice(0,-1)+", vertex-id: "+this.vertex.getID()+", primaryEdge-idx: "+this.primaryEdge.getIndex()+", primaryEdge2-idx: "+(null!=this.primaryEdge2?this.primaryEdge2.getIndex():"null")+", normalEdge-idx: "+this.normalEdge.getIndex()+"}"}getClassName(){return"CornerEdgeCollision"}checkConsistent(){super.checkConsistent();goog.asserts.assert(null!=this.primaryEdge);goog.asserts.assert(this.primaryEdge==this.vertex.getEdge1());this.vertex.isEndPoint()?(goog.asserts.assert(null!=this.primaryEdge2),
goog.asserts.assert(this.primaryEdge2==this.vertex.getEdge2())):goog.asserts.assert(null==this.primaryEdge2);goog.asserts.assert(0==this.ballObject);goog.asserts.assert(this.normalEdge.isStraight==!this.ballNormal)}getU2(){if(null!=this.u2_)return this.u2_;if(this.ballNormal){var a=this.normalBody.worldToBody(this.impact2?this.impact2:this.impact1);a=this.normalEdge.getCenterOfCurvature(a);if(null!=a)return this.u2_=this.normalBody.bodyToWorld(a).subtract(this.normalBody.getPosition())}return this.getR2()}hasEdge(a){return null==
a?!1:a==this.normalEdge||a==this.primaryEdge||this.primaryEdge2==a}hasVertex(a){return a==this.vertex}similarTo(a){if(!a.hasBody(this.primaryBody)||!a.hasBody(this.normalBody))return!1;if(a.hasVertex(this.vertex))return!0;if(!a.hasEdge(this.normalEdge)||!a.hasEdge(this.primaryEdge)&&!a.hasEdge(this.primaryEdge2))return!1;const b=mpl$lab$engine2D$UtilEngine.nearness(this.radius1,this.radius2,this.distanceTol_);return this.impact1.subtract(a.impact1).lengthSquared()>b*b||.9>
Math.abs(this.normal.dotProduct(a.normal))?!1:!0}updateCollision(a){this.u2_=null;var b=this.primaryBody.bodyToWorld(this.vertex.locBody());b=this.normalBody.worldToBody(b);const c=this.normalEdge.getPointOnEdge(b);null!=c&&(this.impact1=this.normalBody.bodyToWorld(c[0]),this.normal=this.normalBody.rotateBodyToWorld(c[1]),this.distance=this.normalEdge.distanceToLine(b),super.updateCollision(a))}};class mpl$lab$engine2D$UtilityCollision{constructor(){throw"";}static addCollision(a,b){if(null==b)throw"";const c=[];let d=!0;if(!b.joint){if(!isFinite(b.distance))throw"distance is NaN "+b;a.forEach(e=>{if(b.similarTo(e)){var f=e.getDetectedTime(),g=b.getDetectedTime();goog.asserts.assert(isFinite(f));goog.asserts.assert(isFinite(g));f>g+1E-14?d=!1:g>f+1E-14?c.push(e):b.distance<e.distance?c.push(e):d=!1}})}0<c.length&&c.forEach(e=>module$contents$goog$array_remove(a,e));
d&&a.push(b);return d}static checkVertexes(a,b,c,d){const e=c.worldToBody(b.getCentroidWorld());let f=b.getSpecialNormalWorld();null!=f&&(f=c.rotateWorldToBody(f),mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilityCollision.specialNormalRotate++);c.getVertexes_().forEach(function(g){if(!b.nonCollideEdge(g.getEdge1())||!b.nonCollideEdge(g.getEdge2())){var h=b.worldToBody(c.bodyToWorld(g.locBody())),k=h,l=0,m=b.getOldCoords(),p=c.getOldCoords();if(null!=
m&&null!=p)k=m.worldToBody(p.bodyToWorld(g.locBody())),l=h.distanceSquaredTo(k);else if(null!=m||null!=p)throw"problem with old copy in checkVertexes";l=.01<l?Math.sqrt(l):.1;if(null!=f){if(m=g.locBody().subtract(e).dotProduct(f),p=b.getCentroidRadius()+b.getDistanceTol(),m>p)return}else if(m=b.getCentroidRadius()+b.getDistanceTol()+l,m*=m,g.locBody().subtract(e).lengthSquared()>m)return;mpl$lab$engine2D$UtilityCollision.testCollisionVertex(a,b,g,h,k,l,d)}})}static intersectionPossible(a,
b,c){if(null!=a.getSpecialNormalWorld())return mpl$lab$engine2D$UtilityCollision.intersectionPossibleSpecial(a,b,c);if(null!=b.getSpecialNormalWorld())return mpl$lab$engine2D$UtilityCollision.intersectionPossibleSpecial(b,a,c);{const d=b.getCentroidWorld().subtract(a.getCentroidWorld()).lengthSquared();a=b.getCentroidRadius()+a.getCentroidRadius()+c;return d<a*a}}static intersectionPossibleSpecial(a,b,c){var d=a.getSpecialNormalWorld();if(null==d)throw"";
d=b.getCentroidWorld().subtract(a.getCentroidWorld()).dotProduct(d);a=b.getCentroidRadius()+a.getCentroidRadius()+c;mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilityCollision.specialNormalRotate++;return d<a}static makeCollision(a,b,c,d,e,f){const g=new mpl$lab$engine2D$CornerEdgeCollision(c,b);c=c.getEdge1();if(null==c)throw"";c.getBody();c=b.getBody();g.distance=b.distanceToLine(e);e=c.bodyToWorld(d);g.impact1=e;e=c.rotateBodyToWorld(b.getNormalBody(d));
g.normal=e;g.radius2=b.getCurvature(d);g.ballNormal=isFinite(g.radius2);g.creator=mpl$lab$util$Util.DEBUG?"testCollisionVertex":"";g.setDetectedTime(f);mpl$lab$engine2D$UtilityCollision.addCollision(a,g)}static printCollisionStatistics(){let a="";0<mpl$lab$engine2D$UtilityCollision.vertexBodyCollisionTests&&(a+="vertex/body collisions: "+mpl$lab$engine2D$UtilityCollision.vertexBodyCollisionTests);0<mpl$lab$engine2D$UtilityCollision.edgeEdgeCollisionTests&&
(a+=" edge/edge collisions: "+mpl$lab$engine2D$UtilityCollision.edgeEdgeCollisionTests);0<a.length&&console.log(a);0<mpl$lab$engine2D$UtilityCollision.specialNormalRotate&&console.log("special normal rotate: "+mpl$lab$engine2D$UtilityCollision.specialNormalRotate+" hits "+mpl$lab$engine2D$UtilityCollision.specialNormalHits+" misses "+mpl$lab$engine2D$UtilityCollision.specialNormalMisses);
mpl$lab$engine2D$UtilityCollision.vertexBodyCollisionTests=0;mpl$lab$engine2D$UtilityCollision.edgeEdgeCollisionTests=0;mpl$lab$engine2D$UtilityCollision.specialNormalRotate=0;mpl$lab$engine2D$UtilityCollision.specialNormalHits=0;mpl$lab$engine2D$UtilityCollision.specialNormalMisses=0}static subsetCollisions1(a){let b;const c=[];if(0==a.length)return c;c.push(a[0]);const d=[];b=
c[0];isFinite(b.primaryBody.getMass())&&d.push(b.primaryBody);null!=b.normalBody&&isFinite(b.normalBody.getMass())&&d.push(b.normalBody);let e;do{e=c.length;for(let f=0,g=a.length;f<g;f++)b=a[f],c.includes(b)||(d.includes(b.primaryBody)?(c.push(b),isFinite(b.normalBody.getMass())&&!d.includes(b.normalBody)&&d.push(b.normalBody)):d.includes(b.normalBody)&&(c.push(b),isFinite(b.primaryBody.getMass())&&!d.includes(b.primaryBody)&&d.push(b.primaryBody)))}while(e<c.length);return c}static subsetCollisions2(a,
b,c,d,e){if(0==a.length)return[];goog.asserts.assert(a.includes(b));const f=[];f.push(b);const g=[];isFinite(b.primaryBody.getMass())&&g.push(b.primaryBody);isFinite(b.normalBody.getMass())&&g.push(b.normalBody);if(c)for(let h=0,k=a.length;h<k;h++)c=a[h],f.includes(c)||c.joint||!(d[h]<e)||c.primaryBody!=b.primaryBody&&c.normalBody!=b.normalBody&&c.primaryBody!=b.normalBody&&c.normalBody!=b.primaryBody||(f.push(c),g.includes(c.primaryBody)||g.push(c.primaryBody),g.includes(c.normalBody)||g.push(c.normalBody));
do{b=f.length;for(let h=0,k=a.length;h<k;h++)c=a[h],f.includes(c)||(g.includes(c.primaryBody)&&c.joint?(f.push(c),isFinite(c.normalBody.getMass())&&!g.includes(c.normalBody)&&g.push(c.normalBody)):g.includes(c.normalBody)&&c.joint&&(f.push(c),isFinite(c.primaryBody.getMass())&&!g.includes(c.primaryBody)&&g.push(c.primaryBody)))}while(b<f.length);return f}static testCollisionVertex(a,b,c,d,e,f,g){mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilityCollision.vertexBodyCollisionTests++;
var h=c.getEdge1();if(null==h)throw mpl$lab$util$Util.DEBUG?"vertex2 has no edge: "+c:"";const k=h.getBody();goog.asserts.assertObject(k);const l=b.getDistanceTol();if(d.getX()<b.getLeftBody()-l&&e.getX()<b.getLeftBody()||d.getX()>b.getRightBody()+l&&e.getX()>b.getRightBody()||d.getY()<b.getBottomBody()-l&&e.getY()<b.getBottomBody()||d.getY()>b.getTopBody()+l&&e.getY()>b.getTopBody()){if(mpl$lab$util$Util.DEBUG&&b.probablyPointInside(d))throw"probablyPointInside: "+
d+" "+b;}else for(var m=!1;;){mpl$lab$util$Util.DEBUG&&m&&(console.log("*****  PROBABLY POINT INSIDE v_body="+d),h=k,h.printAll(),console.log("testCollisionVertex "+b.getName()+" "+h.getName()+" v: "+c.getID()),console.log("vertex2="+c),console.log("v_body="+d),console.log("v_body_old="+e),console.log("travelDist="+f));let p=null,t=null,y=mpl$lab$util$Util.POSITIVE_INFINITY;b.getEdges_().forEach(x=>{mpl$lab$util$Util.DEBUG&&m&&
console.log("\n===== test edge "+x);if(!k.nonCollideEdge(x)){var A=x.getCentroidRadius()+l+f;A*=A;if(x.getCentroidBody().distanceSquaredTo(d)>A)mpl$lab$util$Util.DEBUG&&m&&(console.log("not in range "+k.getName()+" vertex2="+c.getID()+" edge1="+x.getIndex()),console.log("v_body="+d),console.log("maxRadiusSqr="+A),console.log("e1.centroid_body.distanceSquaredTo(v_body)="+x.getCentroidBody().distanceSquaredTo(d)));else if(mpl$lab$engine2D$UtilityCollision.HIGHLIGHT_COLLISION_TESTING&&
mpl$lab$util$Util.DEBUG&&(x.highlight(),c.highlight()),mpl$lab$util$Util.DEBUG&&m&&console.log("v_body="+d+" e1="+x),A=x.intersection(d,e),null==A){if(mpl$lab$util$Util.DEBUG&&m&&(console.log("!!!!! no intersection found  !!!!!"),console.log("v_body="+d+" v_body_old="+e),console.log("v_body.x="+mpl$lab$util$Util.NFSCI(d.getX())),console.log("v_body_old.x="+mpl$lab$util$Util.NFSCI(e.getX())),
console.log("e1="+x)),!mpl$lab$engine2D$UtilityCollision.DISABLE_MIDPOINT_VERTEX_CONTACT||c.isEndPoint())A=x.findVertexContact(c,d,l),mpl$lab$util$Util.DEBUG&&m&&console.log("findVertexContact "+A),null!=A&&(goog.asserts.assert(null!=A),goog.asserts.assert(A.primaryBody==k),goog.asserts.assert(A.normalBody==b),A.setDetectedTime(g),mpl$lab$engine2D$UtilityCollision.addCollision(a,A))}else goog.asserts.assert(d!=e),A.forEach(J=>
{if(mpl$lab$util$Util.DEBUG&&m&&null!=mpl$lab$engine2D$UtilEngine.debugEngine2D){var F=b.bodyToWorld(J);mpl$lab$engine2D$UtilEngine.debugEngine2D.debugCircle("dot",F,.1)}F=e.subtract(J).length();mpl$lab$util$Util.DEBUG&&m&&console.log("distance_old="+y+" d="+F);F<y&&(y=F,t=J,p=x,mpl$lab$util$Util.DEBUG&&m&&console.log("edge1="+p))})}});if(null!=p&&null!=t){mpl$lab$engine2D$UtilityCollision.makeCollision(a,
p,c,t,d,g);break}else if(mpl$lab$util$Util.DEBUG){h=null==b.getSpecialNormalWorld()&&b.probablyPointInside(d);if(!h)break;if(m)throw"probablyPointInside: v_body="+d+"\nvertex2="+c+"\nbody1="+b+"\nbody2="+k;m=!0;console.log("no intersection found;  probablyInside="+h)}else break}}}mpl$lab$engine2D$UtilityCollision.edgeEdgeCollisionTests=0;mpl$lab$engine2D$UtilityCollision.specialNormalHits=0;
mpl$lab$engine2D$UtilityCollision.specialNormalMisses=0;mpl$lab$engine2D$UtilityCollision.specialNormalRotate=0;mpl$lab$engine2D$UtilityCollision.vertexBodyCollisionTests=0;mpl$lab$engine2D$UtilityCollision.DISABLE_MIDPOINT_VERTEX_CONTACT=!0;mpl$lab$engine2D$UtilityCollision.DISABLE_EDGE_EDGE=!1;
mpl$lab$engine2D$UtilityCollision.HIGHLIGHT_COLLISION_TESTING=!1;class mpl$lab$engine2D$CircleCircle{constructor(){throw"";}static improveAccuracy(a,b,c){var d=b.getBody();const e=c.getBody();goog.asserts.assert(a.getPrimaryBody()==d);goog.asserts.assert(a.getNormalBody()==e);a.impact1.getX();a.impact1.getY();if(c.outsideIsOut()||b.outsideIsOut()){e.bodyToWorld(c.getCenterBody());d=d.bodyToWorld(b.getCenterBody());d=e.worldToBody(d);d=c.bodyToEdge(d);var f=d.length();if(c.outsideIsOut()&&b.outsideIsOut())a.distance=f-(c.getRadius()+b.getRadius());
else if(!c.outsideIsOut()&&b.outsideIsOut())a.distance=c.getRadius()-b.getRadius()-f;else if(c.outsideIsOut()&&!b.outsideIsOut())a.distance=b.getRadius()-c.getRadius()-f;else throw"";b=d.multiply(1/f);d=c.edgeToWorld(b.multiply(c.getRadius()));a.impact1=d;c.outsideIsOut()||(b=b.multiply(-1));a.normal=e.rotateBodyToWorld(b)}}static testCollision(a,b,c,d){if(!mpl$lab$engine2D$UtilityCollision.DISABLE_EDGE_EDGE&&(b.outsideIsOut()||c.outsideIsOut()))if(b.outsideIsOut()&&c.outsideIsOut()){var e=
b.getBody().bodyToWorld(b.getCenterBody());if(c.isWithinArc2(e)&&(e=c.getBody().bodyToWorld(c.getCenterBody()),e=b.getBody().worldToBody(e),e=b.bodyToEdge(e),b.isWithinArc(e))){var f=e.length(),g=c.getRadius(),h=b.getRadius();g=f-(g+h);g>b.getBody().getDistanceTol()||(0<g?mpl$lab$engine2D$CircleCircle.addCollision(!0,a,b,c,g,f,e,d):(h=c.depthOfArc()>b.depthOfArc()?c.depthOfArc():b.depthOfArc(),g<-h||mpl$lab$engine2D$CircleCircle.addCollision(!1,a,b,
c,g,f,e,d)))}}else goog.asserts.assert(b.outsideIsOut()!=c.outsideIsOut()),e=b.outsideIsOut()?b:c,c=b.outsideIsOut()?c:b,e.getRadius()>c.getRadius()||(f=c.getBody().bodyToWorld(c.getCenterBody()),e.isWithinReflectedArc2(f)&&(f=e.getBody().bodyToWorld(e.getCenterBody()),f=c.getBody().worldToBody(f),f=c.bodyToEdge(f),c.isWithinArc(f)&&(g=f.length(),h=c.getRadius()-e.getRadius()-g,h>b.getBody().getDistanceTol()||(0<h?mpl$lab$engine2D$CircleCircle.addCollision(!0,a,c,e,h,g,f,d):
h<-e.depthOfArc()||mpl$lab$engine2D$CircleCircle.addCollision(!1,a,c,e,h,g,f,d)))))}static addCollision(a,b,c,d,e,f,g,h){const k=new mpl$lab$engine2D$EdgeEdgeCollision(d,c);k.distance=e;k.ballNormal=!0;k.ballObject=!0;k.creator=mpl$lab$util$Util.DEBUG?"CircleCircle":"";f=g.multiply(1/f);g=c.edgeToWorld(f.multiply(c.getRadius()));k.impact1=g;c.outsideIsOut()||(f=f.multiply(-1));k.normal=c.getBody().rotateBodyToWorld(f);k.radius1=
(d.outsideIsOut()?1:-1)*d.getRadius();k.radius2=(c.outsideIsOut()?1:-1)*c.getRadius();a&&(k.radius1+=e/2,k.radius2+=e/2);k.setDetectedTime(h);mpl$lab$engine2D$UtilityCollision.addCollision(b,k)}};class mpl$lab$engine2D$CornerCornerCollision extends mpl$lab$engine2D$RigidBodyCollision{constructor(a,b){const c=a.getEdge1(),d=b.getEdge1();if(null==c||null==d)throw"CornerCornerCollision: null edge; vertex="+a+"; normalVertex="+b;super(c.getBody(),d.getBody(),!1);this.vertex=a;this.normalVertex=b}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString().slice(0,-1)+", vertex-ID: "+this.vertex.getID()+", normalVertex-ID: "+
this.normalVertex.getID()+"}"}getClassName(){return"CornerCornerCollision"}checkConsistent(){super.checkConsistent();goog.asserts.assert(null!=this.normalVertex)}hasVertex(a){return a==this.vertex||a==this.normalVertex}similarTo(a){return a.hasBody(this.primaryBody)&&a.hasBody(this.normalBody)?a.hasVertex(this.vertex)||a.hasVertex(this.normalVertex)?!0:!1:!1}updateCollision(a){goog.asserts.assert(null!=this.normalVertex);var b=this.primaryBody.bodyToWorld(this.vertex.locBody());b=this.normalBody.worldToBody(b);
this.impact1=this.normalBody.bodyToWorld(this.normalVertex.locBody());this.distance=this.normalVertex.locBody().distanceTo(b);if(!isFinite(this.distance))throw"";b=b.subtract(this.normalVertex.locBody()).normalize();if(null==b)throw"";this.normal=this.normalBody.rotateBodyToWorld(b);super.updateCollision(a)}};class mpl$lab$engine2D$StraightEdge extends mpl$lab$engine2D$AbstractEdge{constructor(a,b,c,d){super(a,b,c);this.outsideIsUp_=d;b.setEdge2(this);c.setEdge1(this);this.isStraight=!0}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString()+", outsideIsUp_: "+this.outsideIsUp_+"}"}addPath(a){a.lineTo(this.v2_.locBodyX(),this.v2_.locBodyY())}checkVertexVertex(a,b,c){let d=this.v1_.locBody().distanceTo(b);if(1E-6<=d&&d<=.6*
c)return this.makeVertexVertex(this.v1_,a,b,d);d=this.v2_.locBody().distanceTo(b);return 1E-6<=d&&d<=.6*c?this.makeVertexVertex(this.v2_,a,b,d):null}chordError(){return 0}distanceToEdge(a){if(a.isStraight)throw"";return a.distanceToEdge(this)}distanceToLine(a){var b=a.getX();var c=a.getY();var d=this.v1_.locBodyX(),e=this.v2_.locBodyX(),f=this.v1_.locBodyY(),g=this.v2_.locBodyY();Math.abs(e-d)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE?c=this.outsideIsUp_?b-d:d-b:Math.abs(g-
f)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE?c=this.outsideIsUp_?c-f:f-c:(g=(g-f)/(e-d),e=(-f+c+b/g+g*d)/(1/g+g),d=f+g*(e-d),b-=e,f=c-d,b=Math.sqrt(b*b+f*f),c<d&&(b=-b),c=this.outsideIsUp_?b:-b);if(isNaN(c))throw mpl$lab$util$Util.DEBUG?"distanceToLine NaN "+a+" "+this.v1_+" "+this.v2_:"";return c}distanceToPoint(a){var b=a.getX();a=a.getY();var c=this.v1_.locBodyX();const d=this.v2_.locBodyX();var e=this.v1_.locBodyY(),f=this.v2_.locBodyY();if(Math.abs(d-
c)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE)return e>f&&(a>e||a<f)||f>e&&(a>f||a<e)?mpl$lab$util$Util.POSITIVE_INFINITY:this.outsideIsUp_?b-c:c-b;if(Math.abs(f-e)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE)return c>d&&(b>c||b<d)||d>c&&(b>d||b<c)?mpl$lab$util$Util.POSITIVE_INFINITY:this.outsideIsUp_?a-e:e-a;{const g=(f-e)/(d-c);f=(-e+a+b/g+g*c)/(1/g+g);e+=g*(f-c);if(c<d&&(f<c||f>d)||d<c&&(f<d||f>c))return mpl$lab$util$Util.POSITIVE_INFINITY;
b-=f;c=a-e;b=Math.sqrt(b*b+c*c);a<e&&(b=-b);return this.outsideIsUp_?b:-b}}findVertexContact(a,b,c){var d=b.getX(),e=b.getY();const f=this.v1_.locBodyX(),g=this.v2_.locBodyX();var h=this.v1_.locBodyY(),k=this.v2_.locBodyY();if(Math.abs(g-f)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE){var l=(f+g)/2;if(h>k&&(e>h||e<k)||k>h&&(e>k||e<h))return this.checkVertexVertex(a,b,c);k=this.outsideIsUp_?d-l:l-d;if(0>k||k>c)return null;a=new mpl$lab$engine2D$CornerEdgeCollision(a,
this);a.distance=k;c=this.body_.bodyToWorld(new mpl$lab$util$Vector(l,e));a.impact1=c;c=this.body_.rotateBodyToWorld(new mpl$lab$util$Vector(this.outsideIsUp_?1:-1,0));a.normal=c;a.ballNormal=!1;a.radius2=mpl$lab$util$Util.POSITIVE_INFINITY;a.creator=mpl$lab$util$Util.DEBUG?"StraightEdge.findVertexContactVert":"";return a}if(Math.abs(k-h)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE){k=
(h+k)/2;if(f>g&&(d>f||d<g)||g>f&&(d>g||d<f))return this.checkVertexVertex(a,b,c);e=this.outsideIsUp_?e-k:k-e;if(0>e||e>c)return null;a=new mpl$lab$engine2D$CornerEdgeCollision(a,this);a.distance=e;c=this.body_.bodyToWorld(new mpl$lab$util$Vector(d,k));a.impact1=c;c=this.body_.rotateBodyToWorld(new mpl$lab$util$Vector(0,this.outsideIsUp_?1:-1));a.normal=c;a.ballNormal=!1;a.radius2=mpl$lab$util$Util.POSITIVE_INFINITY;
a.creator=mpl$lab$util$Util.DEBUG?"StraightEdge.findVertexContactHoriz":"";return a}k=(k-h)/(g-f);l=(-h+e+d/k+k*f)/(1/k+k);h+=k*(l-f);if(f<g&&(l<f||l>g)||g<f&&(l<g||l>f))return this.checkVertexVertex(a,b,c);d-=l;b=e-h;d=Math.sqrt(d*d+b*b);e<h&&(d=-d);d=this.outsideIsUp_?d:-d;if(0>d||d>c)return null;a=new mpl$lab$engine2D$CornerEdgeCollision(a,this);a.distance=d;c=this.body_.bodyToWorld(new mpl$lab$util$Vector(l,h));a.impact1=
c;c=Math.sqrt(1+k*k);c=this.body_.rotateBodyToWorld(new mpl$lab$util$Vector(-k/c,1/c));this.outsideIsUp_||(c=c.multiply(-1));a.normal=c;a.ballNormal=!1;a.radius2=mpl$lab$util$Util.POSITIVE_INFINITY;a.creator=mpl$lab$util$Util.DEBUG?"StraightEdge.findVertexContact":"";return a}getBottomBody(){const a=this.v1_.locBodyY(),b=this.v2_.locBodyY();return a<b?a:b}getCenterOfCurvature(a){return null}getClassName(){return"StraightEdge"}getCurvature(a){return mpl$lab$util$Util.POSITIVE_INFINITY}getLeftBody(){const a=
this.v1_.locBodyX(),b=this.v2_.locBodyX();return a<b?a:b}getNormalBody(a){a=this.v1_.locBodyX();var b=this.v2_.locBodyX();const c=this.v1_.locBodyY(),d=this.v2_.locBodyY();if(Math.abs(b-a)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE)return new mpl$lab$util$Vector(this.outsideIsUp_?1:-1,0);if(Math.abs(d-c)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE)return new mpl$lab$util$Vector(0,this.outsideIsUp_?1:-1);
b=(d-c)/(b-a);a=Math.sqrt(1+b*b);b=-b/a;a=1/a;this.outsideIsUp_||(b=-b,a=-a);return new mpl$lab$util$Vector(b,a)}getPointOnEdge(a){const b=this.projectionOntoLine(a);a=this.getNormalBody(a);return[b,a]}getRightBody(){const a=this.v1_.locBodyX(),b=this.v2_.locBodyX();return a>b?a:b}getTopBody(){const a=this.v1_.locBodyY(),b=this.v2_.locBodyY();return a>b?a:b}highlight(){if(null!=mpl$lab$engine2D$UtilEngine.debugEngine2D){const a=this.body_.bodyToWorld(this.v1_.locBody()),
b=this.body_.bodyToWorld(this.v2_.locBody());mpl$lab$engine2D$UtilEngine.debugEngine2D.debugLine("edge",a,b)}}improveAccuracyEdge(a,b){b.isStraight||b.improveAccuracyEdge(a,this)}intersection(a,b){if(a==b)return null;const c=this.v1_.locBody(),d=this.v2_.locBody();a=mpl$lab$engine2D$UtilEngine.linesIntersect(c,d,a,b);return null==a?null:[a]}intersectionPossible(a,b){return a.isStraight?!1:super.intersectionPossible(a,b)}makeVertexVertex(a,b,c,d){goog.asserts.assert(a.getEdge1()==
this||a.getEdge2()==this);b=new mpl$lab$engine2D$CornerCornerCollision(b,a);b.distance=d;const e=this.body_.bodyToWorld(a.locBody());b.impact1=e;a=c.subtract(a.locBody()).normalize();if(null==a)return null;a=this.body_.rotateBodyToWorld(a);b.normal=a;goog.asserts.assert(this.body_==b.normalBody);b.ballObject=!1;b.radius1=mpl$lab$util$Util.NaN;b.ballNormal=!0;b.radius2=d;b.creator=mpl$lab$util$Util.DEBUG?"StraightEdge.makeVertexVertex":
"";return b.contact()?b:null}maxDistanceTo(a){const b=this.v1_.locBody().distanceTo(a);a=this.v2_.locBody().distanceTo(a);return b>a?b:a}projectionOntoLine(a){var b=a.getX();const c=a.getY();a=this.v1_.locBodyX();var d=this.v2_.locBodyX();const e=this.v1_.locBodyY(),f=this.v2_.locBodyY();if(Math.abs(d-a)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE)return new mpl$lab$util$Vector(a,c);if(Math.abs(f-e)<mpl$lab$engine2D$AbstractEdge.TINY_POSITIVE)return new mpl$lab$util$Vector(b,
e);d=(f-e)/(d-a);b=(-e+c+b/d+d*a)/(1/d+d);return new mpl$lab$util$Vector(b,e+d*(b-a))}testCollisionEdge(a,b,c){b.isStraight||b.testCollisionEdge(a,this,c)}};class mpl$lab$engine2D$CircleStraight{constructor(){throw"";}static improveAccuracy(a,b,c){var d=b.getBody(),e=c.getBody();goog.asserts.assert(a.getPrimaryBody()==d);goog.asserts.assert(a.getNormalBody()==e);a.impact1.getX();a.impact1.getY();d=d.bodyToWorld(b.getCenterBody());d=e.worldToBody(d);b=c.pointOffset(d,-b.getRadius());var f=a.contact()?c.projectionOntoLine(d):b;d=e.bodyToWorld(f);f=c.getNormalBody(f);e=e.rotateBodyToWorld(f);a.distance=c.distanceToLine(b);a.impact1=
d;a.normal=e}static testCollision(a,b,c,d){if(!mpl$lab$engine2D$UtilityCollision.DISABLE_EDGE_EDGE&&c.outsideIsOut()){var e=c.getBody().bodyToWorld(c.getCenterBody()),f=b.getBody().worldToBody(e),g=b.pointOffset(f,-c.getRadius()),h=b.getBody().bodyToWorld(g);e=b.distanceToLine(g);if(0<e)e>b.getBody().getDistanceTol()||(g=b.distanceToPoint(g),g!=mpl$lab$util$Util.POSITIVE_INFINITY&&(goog.asserts.assert(1E-8>Math.abs(e-g)),c.isWithinArc2(h)&&(h=b.projectionOntoLine(f),
g=b.getBody().bodyToWorld(h),mpl$lab$engine2D$CircleStraight.addCollision(!0,a,b,c,e,g,h,d))));else{f=c.getBody();var k=b.getBody();f=f.getOldCoords();k=k.getOldCoords();if(null==f||null==k){if(null!=k||null!=f)throw"problem with old copy in CircleStraight";}else{var l=f.bodyToWorld(c.getCenterBody());l=k.worldToBody(l);l=b.pointOffset(l,-c.getRadius());l=k.bodyToWorld(l);l=f.worldToBody(l);l=c.nearestPointByAngle(l);l=f.bodyToWorld(l);l=k.worldToBody(l);0>b.distanceToLine(l)||
!c.isWithinArc2(h)||null!=b.intersection(g,l)&&mpl$lab$engine2D$CircleStraight.addCollision(!1,a,b,c,e,h,g,d)}}}}static addCollision(a,b,c,d,e,f,g,h){const k=new mpl$lab$engine2D$EdgeEdgeCollision(d,c);goog.asserts.assert(d.outsideIsOut());k.ballNormal=!1;k.ballObject=!0;k.radius1=d.getRadius();k.radius2=mpl$lab$util$Util.POSITIVE_INFINITY;goog.asserts.assert(0<k.radius1);a&&(k.radius1+=e);k.distance=e;k.impact1=f;k.creator=mpl$lab$util$Util.DEBUG?
"CircleStraight":"";k.normal=c.getBody().rotateBodyToWorld(c.getNormalBody(g));k.setDetectedTime(h);mpl$lab$engine2D$UtilityCollision.addCollision(b,k)}};class mpl$lab$engine2D$ConcreteVertex{constructor(a,b,c){this.loc_body_=a;this.endPoint_=void 0!==b?b:!0;this.edge_=void 0!==c?c:null;this.edge2_=null;this.id_=mpl$lab$engine2D$ConcreteVertex.next_vertex_id++}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", id_: "+this.id_+", endPoint_: "+this.endPoint_+", body.name: "+(null==this.edge_?"null":'"'+this.edge_.getBody().getName()+'"')+", edge_.index: "+
(null==this.edge_?"-1":this.edge_.getIndex())+", edge2_.index: "+(null==this.edge2_?"-1":this.edge2_.getIndex())+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"ConcreteVertex{loc_body_: "+this.loc_body_+"}"}getID(){return this.id_}isEndPoint(){return this.endPoint_}locBody(){return this.loc_body_}locBodyX(){return this.loc_body_.getX()}locBodyY(){return this.loc_body_.getY()}highlight(){if(null!=this.edge_&&null!=mpl$lab$engine2D$UtilEngine.debugEngine2D){const a=
this.edge_.getBody().bodyToWorld(this.loc_body_);mpl$lab$engine2D$UtilEngine.debugEngine2D.debugCircle("dot",a,.06)}}getCurvature(){let a=mpl$lab$util$Util.POSITIVE_INFINITY;if(null!=this.edge_&&(a=this.edge_.getCurvature(this.loc_body_),null!=this.edge2_)){const b=this.edge2_.getCurvature(this.loc_body_);Math.abs(b)<Math.abs(a)&&(a=b)}return a}getEdge1(){if(null!=this.edge_)return this.edge_;throw"";}getEdge2(){if(null!=this.edge2_)return this.edge2_;
if(null!=this.edge_)return this.edge_;throw"";}safeGetEdge2(){return this.edge2_}setEdge1(a){if(null==this.edge_)this.edge_=a;else throw"";}setEdge2(a){if(null==this.edge2_)this.edge2_=a;else throw"";}}mpl$lab$engine2D$ConcreteVertex.next_vertex_id=1;class mpl$lab$engine2D$CircularEdge extends mpl$lab$engine2D$AbstractEdge{constructor(a,b,c,d,e,f,g){super(a,b,c);this.center_body_=d;this.outsideIsOut_=f;this.radius_=d.distanceTo(b.locBody());a=c.locBody().distanceTo(d);if(Math.abs(this.radius_-a>mpl$lab$engine2D$CircularEdge.TINY_POSITIVE))throw"center is not equidistant from the two end points";this.clockwise_=e;this.startAngle_=b.locBody().subtract(d).getAngle();this.finishAngle_=
c.locBody().subtract(d).getAngle();Math.abs(this.startAngle_-this.finishAngle_)<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE&&(this.finishAngle_=this.startAngle_+2*Math.PI);d=mpl$lab$engine2D$CircularEdge.findAngleLowHigh(this.startAngle_,this.finishAngle_,this.clockwise_);this.angle_low_=d[0];this.angle_high_=d[1];this.depth_=mpl$lab$engine2D$CircularEdge.findDepth(this.angle_high_-this.angle_low_,this.radius_);g=Math.max(Math.ceil((this.angle_high_-
this.angle_low_)/(Math.PI/4)),Math.ceil((this.angle_high_-this.angle_low_)*this.radius_/(void 0===g?.3:g)));this.decoratedAngle_=d=(this.angle_high_-this.angle_low_)/g;this.decoratedVertexes_=[];for(e=1;e<g;e++)a=this.clockwise_?this.angle_high_-e*d:this.angle_low_+e*d,a=new mpl$lab$util$Vector(this.center_body_.getX()+this.radius_*Math.cos(a),this.center_body_.getY()+this.radius_*Math.sin(a)),a=new mpl$lab$engine2D$ConcreteVertex(a,!1,this),this.decoratedVertexes_.push(a);
b.setEdge2(this);c.setEdge1(this);this.angle_high_-this.angle_low_>=Math.PI?(this.centroid_body_=this.center_body_,this.centroidRadius_=this.radius_):this.centroidRadius_=this.centroid_body_.distanceTo(b.locBody());this.outsideIsOut_||(this.centroidRadius_*=1.2);this.completeCircle_=Math.abs(2*Math.PI-(this.angle_high_-this.angle_low_))<mpl$lab$engine2D$CircularEdge.SMALL_POSITIVE}toString(){return mpl$lab$util$Util.ADVANCED?"":super.toString()+", outsideIsOut_: "+
this.outsideIsOut_+", clockwise_: "+this.clockwise_+", center_body_: "+this.center_body_+", radius_: "+mpl$lab$util$Util.NF5(this.radius_)+", startAngle_: "+mpl$lab$util$Util.NF5(this.startAngle_)+", finishAngle_: "+mpl$lab$util$Util.NF5(this.finishAngle_)+", angle_low_: "+mpl$lab$util$Util.NF5(this.angle_low_)+", angle_high_: "+mpl$lab$util$Util.NF5(this.angle_high_)+"}"}static make(a,
b,c,d,e,f,g){const h=(b.locBodyX()+c.locBodyX())/2;var k=(b.locBodyY()+c.locBodyY())/2;var l=mpl$lab$util$Util.hypot(b.locBodyX()-h,b.locBodyY()-k);const m=d*d-l*l;if(m<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE)throw"radius "+d+" is too small, must be >= "+l;l=Math.sqrt(m);Math.abs(c.locBodyX()-b.locBodyX())<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE?e=e?l+h:-l+h:(d=(c.locBodyY()-b.locBodyY())/(c.locBodyX()-b.locBodyX()),l/=
Math.sqrt(1+d*d),e?(e=-d*l+h,k=l+k):(e=d*l+h,k=-l+k));return new mpl$lab$engine2D$CircularEdge(a,b,c,new mpl$lab$util$Vector(e,k),f,g)}addPath(a){a.arc(this.center_body_.getX(),this.center_body_.getY(),this.radius_,this.startAngle_,this.finishAngle_,this.clockwise_)}angleToBody(a){return this.edgeToBody(new mpl$lab$util$Vector(this.radius_*Math.cos(a),this.radius_*Math.sin(a)))}bodyToEdge(a){return a.subtract(this.center_body_)}chordError(){return this.radius_*
(1-Math.sqrt(1-this.decoratedAngle_*this.decoratedAngle_/4))}depthOfArc(){return this.depth_}distanceToEdge(a){if(a instanceof mpl$lab$engine2D$StraightEdge){var b=this.body_.bodyToWorld(this.center_body_);b=a.getBody().worldToBody(b);a=a.distanceToLine(b);return a-=this.radius_}if(a instanceof mpl$lab$engine2D$CircularEdge){b=a.getBody().bodyToWorld(a.center_body_);b=this.body_.worldToBody(b);b=this.bodyToEdge(b);if(!this.isWithinArc(b))return mpl$lab$util$Util.NaN;
b=b.length();const c=(a.outsideIsOut_?1:-1)*a.radius_,d=(this.outsideIsOut_?1:-1)*this.radius_;return a.outsideIsOut_&&this.outsideIsOut_?b-(c+d):Math.abs(c+d)-b}throw"";}distanceToLine(a){a=this.bodyToEdge(a);return(this.outsideIsOut_?1:-1)*(a.length()-this.radius_)}distanceToPoint(a){a=this.bodyToEdge(a);return this.isWithinArc(a)?(this.outsideIsOut_?1:-1)*(a.length()-this.radius_):mpl$lab$util$Util.POSITIVE_INFINITY}edgeToBody(a){return a.add(this.center_body_)}edgeToWorld(a){return this.body_.bodyToWorld(a.add(this.center_body_))}static findAngleLowHigh(a,
b,c){Math.abs(a-b)<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE?(c=a,a=c+2*Math.PI):Math.abs(Math.abs(a-b)-2*Math.PI)<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE?(c=Math.min(a,b),a=c+2*Math.PI):a>b?c?c=b:(c=a,a=b+2*Math.PI):c?(c=b,a+=2*Math.PI):(c=a,a=b);return[c,a]}static findDepth(a,b){const c=Math.sin(a/2)-Math.sin(a)/2;a=Math.cos(a/2)-(1+Math.cos(a))/2;return b*Math.sqrt(c*c+a*a)}findVertexContact(a,b,c){var d=this.bodyToEdge(b);if(!this.isWithinArc(d))return null;
const e=d.length();b=(this.outsideIsOut_?1:-1)*(e-this.radius_);if(0>b||b>c)return null;c=new mpl$lab$engine2D$CornerEdgeCollision(a,this);c.distance=b;if(e<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE)throw"cannot get normal for point at center of circle";d=d.multiply(1/e*(this.outsideIsOut_?1:-1));c.normal=this.body_.rotateBodyToWorld(d);goog.asserts.assert(1E-8>Math.abs(c.normal.length()-1));c.radius2=(this.outsideIsOut_?1:-1)*this.radius_;c.radius2+=
b;b=this.body_.bodyToWorld(this.edgeToBody(d.multiply(c.radius2)));c.impact1=b;c.ballNormal=!0;c.radius1=a.getCurvature();c.creator=mpl$lab$util$Util.DEBUG?"CircularEdge.findVertexContact":"";return c}getBottomBody(){let a=-Math.PI/2;a+=a<this.angle_low_?2*Math.PI:0;return this.angle_low_<=a&&a<=this.angle_high_?this.center_body_.getY()-this.radius_:this.v1_.locBodyY()<this.v2_.locBodyY()?this.v1_.locBodyY():this.v2_.locBodyY()}getCenterBody(){return this.center_body_}getCenterOfCurvature(a){return this.center_body_}getClassName(){return"CircularEdge"}getCurvature(a){return(this.outsideIsOut_?
1:-1)*this.radius_}getDecoratedVertexes(){return this.decoratedVertexes_}getLeftBody(){let a=Math.PI;a+=a<this.angle_low_?2*Math.PI:0;return this.angle_low_<=a&&a<=this.angle_high_?this.center_body_.getX()-this.radius_:this.v1_.locBodyX()<this.v2_.locBodyX()?this.v1_.locBodyX():this.v2_.locBodyX()}getNormalBody(a){const b=this.bodyToEdge(a),c=b.length();if(c<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE)throw mpl$lab$util$Util.DEBUG?"cannot get normal at point "+
a:"";return b.multiply(this.outsideIsOut_?1/c:-1/c)}getPointOnEdge(a){a=this.getNormalBody(a);return[this.edgeToBody(a.multiply((this.outsideIsOut_?1:-1)*this.radius_)),a]}getRadius(){return this.radius_}getRightBody(){let a=0;a+=a<this.angle_low_?2*Math.PI:0;return this.angle_low_<=a&&a<=this.angle_high_?this.center_body_.getX()+this.radius_:this.v1_.locBodyX()>this.v2_.locBodyX()?this.v1_.locBodyX():this.v2_.locBodyX()}getTopBody(){let a=Math.PI/2;a+=a<this.angle_low_?2*Math.PI:0;return this.angle_low_<=
a&&a<=this.angle_high_?this.center_body_.getY()+this.radius_:this.v1_.locBodyY()>this.v2_.locBodyY()?this.v1_.locBodyY():this.v2_.locBodyY()}highlight(){}improveAccuracyEdge(a,b){if(b instanceof mpl$lab$engine2D$StraightEdge)mpl$lab$engine2D$CircleStraight.improveAccuracy(a,this,b);else if(b instanceof mpl$lab$engine2D$CircularEdge)a.getNormalBody()==b.getBody()?mpl$lab$engine2D$CircleCircle.improveAccuracy(a,
this,b):mpl$lab$engine2D$CircleCircle.improveAccuracy(a,b,this);else throw"";}intersection(a,b){if(a==b)return null;var c=this.bodyToEdge(a),d=this.bodyToEdge(b);a=b=null;if(Math.abs(d.getX()-c.getX())<mpl$lab$engine2D$CircularEdge.TINY_POSITIVE){var e=(c.getX()+d.getX())/2;if(Math.abs(e)>this.radius_)return null;var f=Math.sqrt(this.radius_*this.radius_-e*e),g=c.getY()<d.getY()?c.getY():d.getY();c=c.getY()>d.getY()?c.getY():d.getY();g<=f&&f<=c&&(b=
new mpl$lab$util$Vector(e,f));g<=-f&&-f<=c&&(a=new mpl$lab$util$Vector(e,-f))}else{var h=(d.getY()-c.getY())/(d.getX()-c.getX()),k=1+h*h,l=c.getY()-h*c.getX(),m=k*this.radius_*this.radius_-l*l;if(0>m)return null;m=Math.sqrt(m);e=-(h*l+m)/k;f=(h*-l+m)/k;g=(l-h*m)/k;h=(l+h*m)/k;k=c.getX()<d.getX()?c.getX():d.getX();l=c.getX()>d.getX()?c.getX():d.getX();m=c.getY()<d.getY()?c.getY():d.getY();c=c.getY()>d.getY()?c.getY():d.getY();k<=e&&e<=l&&m<=g&&g<=c&&
(b=new mpl$lab$util$Vector(e,g));k<=f&&f<=l&&m<=h&&h<=c&&(a=new mpl$lab$util$Vector(f,h))}d=c=null;null!=b&&this.isWithinArc(b)&&(c=this.edgeToBody(b));null!=a&&this.isWithinArc(a)&&(d=this.edgeToBody(a));if(null==c&&null==d)return null;if(null!=c&&null!=d)return[c,d];if(null!=c)return[c];goog.asserts.assert(null!=d);return[d]}static isWithinArc(a,b,c){goog.asserts.assert(!isNaN(a.getX()));goog.asserts.assert(!isNaN(a.getY()));a=a.getAngle();a<b&&(a+=
2*Math.PI);return b<=a&&a<=c}isWithinArc(a){return this.completeCircle_?!0:mpl$lab$engine2D$CircularEdge.isWithinArc(a,this.angle_low_,this.angle_high_)}isWithinArc2(a){if(this.completeCircle_)return!0;a=this.bodyToEdge(this.body_.worldToBody(a));return mpl$lab$engine2D$CircularEdge.isWithinArc(a,this.angle_low_,this.angle_high_)}isWithinReflectedArc(a){if(null==a)return!1;for(a=a.getAngle();a<this.angle_low_+Math.PI;)a+=2*Math.PI;return this.angle_low_+
Math.PI<=a&&a<=this.angle_high_+Math.PI}isWithinReflectedArc2(a){return this.isWithinReflectedArc(this.bodyToEdge(this.body_.worldToBody(a)))}maxDistanceTo(a){return this.center_body_.distanceTo(a)+this.radius_}nearestPointByAngle(a){const b=this.bodyToEdge(a).getAngle(),c=b+(b<this.angle_low_?2*Math.PI:0);return this.angle_low_<=c&&c<=this.angle_high_?a:this.angleToBody((b<this.angle_low_?this.angle_low_-b:this.angle_low_-(b-2*Math.PI))<(b>this.angle_high_?b-this.angle_high_:2*Math.PI+b-this.angle_high_)?
this.angle_low_:this.angle_high_)}outsideIsOut(){return this.outsideIsOut_}testCollisionEdge(a,b,c){if(b instanceof mpl$lab$engine2D$StraightEdge)mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilityCollision.edgeEdgeCollisionTests++,mpl$lab$engine2D$CircleStraight.testCollision(a,b,this,c);else if(b instanceof mpl$lab$engine2D$CircularEdge)mpl$lab$util$Util.DEBUG&&
mpl$lab$engine2D$UtilityCollision.edgeEdgeCollisionTests++,mpl$lab$engine2D$CircleCircle.testCollision(a,b,this,c);else throw"";}}mpl$lab$engine2D$CircularEdge.SMALL_POSITIVE=1E-6;class mpl$lab$engine2D$EdgeSet{contains(a){}};class mpl$lab$engine2D$Polygon extends mpl$lab$model$AbstractMassObject{constructor(a,b){void 0===a||""==a?(b=mpl$lab$engine2D$Polygon.ID++,a=mpl$lab$engine2D$Polygon.en.POLYGON+b,b=mpl$lab$engine2D$Polygon.i18n.POLYGON+b):b=b?b:a;super(a,b);this.vertices_=[];this.edges_=[];this.finished_=!1;this.startVertex_=null;this.paths_=[];this.nonCollideSet_=null;this.elasticity_=1;this.nonCollideBodies_=
[];this.centroid_body_=null;this.centroidRadius_=mpl$lab$util$Util.NaN;this.specialNormalWorld_=this.specialEdge_=null;this.bottom_body_=this.top_body_=this.right_body_=this.left_body_=mpl$lab$util$Util.NaN;this.varsIndex_=-1;this.body_old_=null;this.body_old_save_=new mpl$lab$engine2D$LocalCoords;this.distanceTol_=.01;this.velocityTol_=.5;this.accuracy_=.6}toString(){return mpl$lab$util$Util.ADVANCED?
"":super.toString().slice(0,-1)+", elasticity: "+mpl$lab$util$Util.NF(this.elasticity_)+", distanceTol_: "+mpl$lab$util$Util.NF(this.distanceTol_)+", velocityTol_: "+mpl$lab$util$Util.NF(this.velocityTol_)+", accuracy_:"+mpl$lab$util$Util.NF(this.accuracy_)+", varsIndex_: "+this.varsIndex_+", centroid_body_: "+this.centroid_body_+"}"}getClassName(){return"Polygon"}addCircularEdge(a,b,c,d){a=new mpl$lab$engine2D$CircularEdge(this,
this.lastOpenVertex(),new mpl$lab$engine2D$ConcreteVertex(a,!0),b,c,d);this.addEdge(a);return a}addCircularEdge2(a,b,c,d,e){a=mpl$lab$engine2D$CircularEdge.make(this,this.lastOpenVertex(),new mpl$lab$engine2D$ConcreteVertex(a,!0),b,c,d,e);this.addEdge(a);return a}addEdge(a){if(this.finished_)throw"cannot add edges to finished Polygon";if(null==this.startVertex_)throw mpl$lab$engine2D$Polygon.OPEN_PATH_ERROR;
if(a.getVertex2()!=this.lastOpenVertex())throw"edge is not connected to open path";this.edges_.push(a);module$contents$goog$array_extend(this.vertices_,a.getDecoratedVertexes());a.getVertex2()==this.startVertex_?this.closePath():this.vertices_.push(a.getVertex2())}addNonCollide(a){this.nonCollideBodies_=module$contents$goog$array_join(this.nonCollideBodies_,a);module$contents$goog$array_removeDuplicates(this.nonCollideBodies_)}addStraightEdge(a,b){a=new mpl$lab$engine2D$StraightEdge(this,
this.lastOpenVertex(),new mpl$lab$engine2D$ConcreteVertex(a,!0),b);this.addEdge(a);return a}calculateSize(){let a=mpl$lab$util$Util.POSITIVE_INFINITY,b=mpl$lab$util$Util.NEGATIVE_INFINITY,c=mpl$lab$util$Util.POSITIVE_INFINITY,d=mpl$lab$util$Util.NEGATIVE_INFINITY;this.edges_.forEach(e=>{e.getLeftBody()<a&&(a=e.getLeftBody());e.getRightBody()>b&&(b=e.getRightBody());e.getBottomBody()<
c&&(c=e.getBottomBody());e.getTopBody()>d&&(d=e.getTopBody())});this.left_body_=a;this.right_body_=b;this.bottom_body_=c;this.top_body_=d}checkCollision(a,b,c){mpl$lab$engine2D$UtilityCollision.checkVertexes(a,this,b,c);mpl$lab$engine2D$UtilityCollision.checkVertexes(a,b,this,c);this.edges_.forEach(d=>{b.nonCollideEdge(d)||b.getEdges().forEach(e=>{this.nonCollideEdge(e)||mpl$lab$engine2D$DebugEngine2D.PROXIMITY_TEST&&!d.intersectionPossible(e,
this.distanceTol_)||(mpl$lab$engine2D$UtilityCollision.HIGHLIGHT_COLLISION_TESTING&&mpl$lab$util$Util.DEBUG&&(d.highlight(),e.highlight()),d.testCollisionEdge(a,e,c))})})}checkConsistent(){if(!this.finished_)throw"Polygon construction is not finished.";this.paths_.forEach(a=>{let b=a;do{const c=b.getEdge2();if(null==c)throw"";goog.asserts.assertObject(c);goog.asserts.assert(c.getVertex1()==b);b=c.getVertex2();goog.asserts.assert(b.getEdge1()==c)}while(b!=
a)})}closePath(){if(this.finished_)throw"Polygon construction is finished.";if(null==this.startVertex_)return!1;const a=this.lastOpenEdge();if(null==a)return!1;a.getVertex2()!=this.startVertex_?this.closePath_(this.startVertex_,a.getVertex2()):goog.asserts.assert(this.startVertex_.getEdge2()==a);this.paths_.push(this.startVertex_);this.startVertex_=null;return!0}closePath_(a,b){if(1E-8<a.locBody().distanceTo(b.locBody()))throw mpl$lab$util$Util.DEBUG?"Vertexes must be at same location "+
a+" "+b:"";const c=b.getEdge1();if(null==c)throw"v2.edge1 is null; v2="+b+"; this="+this;a.setEdge1(c);c.setVertex2(a);goog.asserts.assert(this.vertices_.includes(b));module$contents$goog$array_remove(this.vertices_,b)}createCanvasPath(a){a.beginPath();this.paths_.forEach(b=>{a.moveTo(b.locBodyX(),b.locBodyY());let c=b;do{const d=c.getEdge2();if(null==d)throw"";goog.asserts.assertObject(d);goog.asserts.assert(d.getVertex1()==c);c=d.getVertex2();goog.asserts.assert(c.getEdge1()==d);d.addPath(a)}while(c!=
b);a.closePath()});mpl$lab$util$Util.DEBUG&&(mpl$lab$engine2D$Polygon.SHOW_VERTICES||mpl$lab$engine2D$Polygon.SHOW_ALL_VERTICES)&&this.vertices_.forEach(b=>{a.moveTo(b.locBodyX(),b.locBodyY());(mpl$lab$engine2D$Polygon.SHOW_ALL_VERTICES||b.isEndPoint())&&a.arc(b.locBodyX(),b.locBodyY(),.1,0,2*Math.PI,!1)})}doesNotCollide(a){return this.nonCollideBodies_.includes(a)}eraseOldCoords(){this.body_old_=null}findCentroid(){const a=
Array(2);var b=.1*Math.max(this.getWidth(),this.getHeight());const c=Array(3);c[0]=new mpl$lab$util$MutableVector(this.cm_body_.getX()+b,this.cm_body_.getY());c[1]=new mpl$lab$util$MutableVector(this.cm_body_.getX(),this.cm_body_.getY()+b);c[2]=new mpl$lab$util$MutableVector(this.cm_body_.getX()-b,this.cm_body_.getY()-b);b=mpl$lab$engine2D$UtilEngine.findMinimumSimplex(c,d=>this.maxRadiusSquared(mpl$lab$util$Vector.clone(d)),
1E-6,a);if(0!=a[1])throw mpl$lab$util$Util.DEBUG?"could not find centroid, iterations="+a[0]:"";return b}finish(){if(this.finished_)throw"Polygon construction is finished.";null!=this.startVertex_&&this.closePath();this.finished_=!0;this.checkConsistent();this.calculateSize();this.setCenterOfMass(this.getLeftBody()+this.getWidth()/2,this.getBottomBody()+this.getHeight()/2);this.getWidth()<=this.getHeight()?this.setDragPoints([new mpl$lab$util$Vector(this.getLeftBody()+
.5*this.getWidth(),this.getBottomBody()+.8*this.getHeight()),new mpl$lab$util$Vector(this.getLeftBody()+.5*this.getWidth(),this.getBottomBody()+.2*this.getHeight())]):this.setDragPoints([new mpl$lab$util$Vector(this.getLeftBody()+.8*this.getWidth(),this.getBottomBody()+.5*this.getHeight()),new mpl$lab$util$Vector(this.getLeftBody()+.2*this.getWidth(),this.getBottomBody()+.5*this.getHeight())]);const a=this.getWidth(),b=this.getHeight();
this.setMomentAboutCM((a*a+b*b)/12);this.specialNormalWorld_=null;this.getCentroidBody();mpl$lab$engine2D$Polygon.PRINT_POLYGON_STRUCTURE&&mpl$lab$util$Util.DEBUG&&this.printAll()}getAccuracy(){return this.accuracy_}getBottomBody(){return this.bottom_body_}getCentroidBody(){null==this.centroid_body_&&(this.centroid_body_=this.findCentroid(),this.setCentroid(this.centroid_body_));return this.centroid_body_}getCentroidRadius(){return this.centroidRadius_}getDistanceTol(){return this.distanceTol_}getEdges_(){return this.edges_}getEdges(){return Array.from(this.edges_)}getElasticity(){return this.elasticity_}getLeftBody(){return this.left_body_}getMinHeight(){if(isNaN(this.minHeight_)){let a=
mpl$lab$util$Util.POSITIVE_INFINITY;this.edges_.forEach(b=>{b=b.distanceToPoint(this.cm_body_);b!=mpl$lab$util$Util.POSITIVE_INFINITY&&(0<b?a=0:(b=-b,b<a&&(a=b)))});a==mpl$lab$util$Util.POSITIVE_INFINITY&&(a=this.getMinHeight2());this.minHeight_=a}return this.minHeight_}getMinHeight2(){if(isNaN(this.minHeight_)){let a=mpl$lab$util$Util.POSITIVE_INFINITY,b;for(let c=0;3>=c;c++){switch(c){case 0:b=this.cm_body_.getY()-
this.getBottomBody();break;case 1:b=this.getRightBody()-this.cm_body_.getX();break;case 2:b=this.getTopBody()-this.cm_body_.getY();break;case 3:b=this.cm_body_.getX()-this.getLeftBody();break;default:b=mpl$lab$util$Util.POSITIVE_INFINITY}b<a&&(a=b)}this.minHeight_=a}return this.minHeight_}getOldCoords(){return this.body_old_}getRightBody(){return this.right_body_}getSpecialNormalWorld(){const a=this.specialEdge_;if(null==a)return null;let b=this.specialNormalWorld_;null==b?
(mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilityCollision.specialNormalMisses++,this.specialNormalWorld_=b=this.rotateBodyToWorld(a.getNormalBody(mpl$lab$util$Vector.ORIGIN))):mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilityCollision.specialNormalHits++;return b}getStartVertex(){return this.startVertex_}getTopBody(){return this.top_body_}getVarName(a,b){let c=this.getName(b)+
" ";switch(a){case 0:c+="X "+(b?mpl$lab$engine2D$Polygon.i18n.POSITION:mpl$lab$engine2D$Polygon.en.POSITION);break;case 1:c+="X "+(b?mpl$lab$engine2D$Polygon.i18n.VELOCITY:mpl$lab$engine2D$Polygon.en.VELOCITY);break;case 2:c+="Y "+(b?mpl$lab$engine2D$Polygon.i18n.POSITION:mpl$lab$engine2D$Polygon.en.POSITION);break;case 3:c+="Y "+(b?mpl$lab$engine2D$Polygon.i18n.VELOCITY:
mpl$lab$engine2D$Polygon.en.VELOCITY);break;case 4:c+=b?mpl$lab$engine2D$Polygon.i18n.ANGLE:mpl$lab$engine2D$Polygon.en.ANGLE;break;case 5:c+=b?mpl$lab$engine2D$Polygon.i18n.ANGULAR_VELOCITY:mpl$lab$engine2D$Polygon.en.ANGULAR_VELOCITY;break;default:throw"";}return c}getVarsIndex(){return this.varsIndex_}getVelocityTol(){return this.velocityTol_}getVertexes_(){return this.vertices_}getVerticesBody(){return this.vertices_.map(a=>
a.locBody())}lastOpenEdge(){if(null==this.startVertex_)throw"";let a=this.startVertex_.safeGetEdge2();if(null==a)return null;for(;;){const b=a.getVertex2(),c=b.safeGetEdge2();if(null==c)break;a=c;if(b==this.startVertex_)throw"";}return a}lastOpenVertex(){if(null==this.startVertex_)throw mpl$lab$engine2D$Polygon.OPEN_PATH_ERROR;const a=this.lastOpenEdge();return null==a?this.startVertex_:a.getVertex2()}maxRadiusSquared(a){let b=0;this.vertices_.forEach(d=>{d=a.distanceTo(d.locBody());
d>b&&(b=d)});let c=0;this.edges_.forEach(d=>{d=d.chordError();d>c&&(c=d)});b+=c;return b*b}nonCollideEdge(a){return null==a?!0:null!=this.nonCollideSet_?this.nonCollideSet_.contains(a):!1}printAll(){if(mpl$lab$util$Util.DEBUG){console.log(this.toString());let a=this.vertices_[this.vertices_.length-1];this.vertices_.forEach((b,c)=>{const d=b.locBody().distanceTo(a.locBody());console.log("("+c+") "+b+" dist to prev vertex = "+mpl$lab$util$Util.NF(d));
a=b});this.edges_.forEach((b,c)=>console.log("("+c+") "+b))}}probablyPointInside(a){return null==module$contents$goog$array_find(this.edges_,function(b,c,d){return 0<b.distanceToLine(a)})}removeNonCollide(a){module$contents$goog$array_removeAllIf(this.nonCollideBodies_,b=>a.includes(b))}saveOldCoords(){null==this.body_old_&&(this.body_old_=this.body_old_save_);this.body_old_.set(this.cm_body_,this.loc_world_,this.sinAngle_,this.cosAngle_)}setAccuracy(a){if(0>=a||1<a)throw"accuracy must be between 0 and 1, is "+
a;this.accuracy_=a}setCentroid(a){if(null!=this.startVertex_)throw"setCentroid called before finish, while creating Polygon";this.centroid_body_=a;if(mpl$lab$util$Util.DEBUG){const b=this.findCentroid(),c=a.distanceTo(b);goog.asserts.assert(.01>c,"dist="+mpl$lab$util$Util.NF(c)+" ctrd="+b+" centroid_body="+a)}this.centroidRadius_=Math.sqrt(this.maxRadiusSquared(a));return this}setDistanceTol(a){this.distanceTol_=a}setElasticity(a){this.elasticity_=a}setMass(a){if(0>=
a||"number"!==typeof a)throw"mass must be positive "+a;this.mass_=a;return this}setNonCollideEdge(a){this.nonCollideSet_=a}setPosition(a,b){this.loc_world_=mpl$lab$util$Vector.clone(a);void 0!==b&&isFinite(b)&&this.angle_!=b&&(this.angle_=b,this.sinAngle_=Math.sin(b),this.cosAngle_=Math.cos(b),this.specialNormalWorld_=null);this.edges_.forEach(c=>c.forgetPosition());this.setChanged()}setSpecialEdge(a,b){if(4!=this.edges_.length)throw mpl$lab$util$Util.DEBUG?
"can only set special edge on rectangle":"";if(0>a||3<a)throw"";this.specialEdge_=this.edges_[a];this.centroidRadius_=b;this.edges_.forEach(c=>{c!=this.specialEdge_&&c.setCentroidRadius(0)})}setVarsIndex(a){this.varsIndex_=a}setVelocityTol(a){this.velocityTol_=a}startPath(a){if(this.finished_)throw"Polygon construction is finished.";if(null!=this.startVertex_)throw"there is already an open path";a instanceof mpl$lab$engine2D$ConcreteVertex?(this.startVertex_=a,this.vertices_.push(this.startVertex_)):
(this.startVertex_=a.getVertex1(),this.vertices_.push(this.startVertex_),this.edges_.push(a))}}mpl$lab$engine2D$Polygon.en={POLYGON:"polygon",ANGLE:"angle",ANGULAR_VELOCITY:"angular velocity",POSITION:"position",VELOCITY:"velocity"};mpl$lab$engine2D$Polygon.de_strings={POLYGON:"Polygon",ANGLE:"Winkel",ANGULAR_VELOCITY:"Winkelgeschwindigkeit",POSITION:"Position",VELOCITY:"Geschwindigkeit"};
mpl$lab$engine2D$Polygon.i18n="de"===goog.LOCALE?mpl$lab$engine2D$Polygon.de_strings:mpl$lab$engine2D$Polygon.en;mpl$lab$engine2D$Polygon.ID=1;mpl$lab$engine2D$Polygon.OPEN_PATH_ERROR="Polygon does not have an open path to add edges to";mpl$lab$engine2D$Polygon.SHOW_VERTICES=!1;mpl$lab$engine2D$Polygon.SHOW_ALL_VERTICES=!1;
mpl$lab$engine2D$Polygon.PRINT_POLYGON_STRUCTURE=!1;const module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$engine2D$test$CircularEdgeTest{static test(){module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_schedule(mpl$lab$engine2D$test$CircularEdgeTest.testCircularEdge1)}static testCircularEdge1(){module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_startTest(mpl$lab$engine2D$test$CircularEdgeTest.groupName+"testCircularEdge1");const a=new mpl$lab$util$Vector(2,0),b=new mpl$lab$engine2D$ConcreteVertex(a,
!0);var c=new mpl$lab$engine2D$Polygon("test1");const d=new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(0,2));c.startPath(d);c=new mpl$lab$engine2D$CircularEdge(c,d,b,mpl$lab$util$Vector.ORIGIN,!0,!0);module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(d,c.getVertex1());module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(b,
c.getVertex2());module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(2,c.getCurvature(a));module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertTrue(c.getNormalBody(a).nearEqual(mpl$lab$util$Vector.EAST));module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertTrue(c.getNormalBody(new mpl$lab$util$Vector(0,2)).equals(mpl$lab$util$Vector.NORTH));module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(-2,
c.distanceToPoint(mpl$lab$util$Vector.ORIGIN));module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(2,c.distanceToPoint(new mpl$lab$util$Vector(4,0)));module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(1,c.distanceToPoint(new mpl$lab$util$Vector(0,3)));module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(0,c.getLeftBody());module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(2,
c.getRightBody());module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(2,c.getTopBody());module$contents$myphysicslab$lab$engine2D$test$CircularEdgeTest_assertEquals(0,c.getBottomBody())}}mpl$lab$engine2D$test$CircularEdgeTest.groupName="CircularEdgeTest.";class mpl$lab$engine2D$EdgeRange{constructor(a,b,c){if(c<b)throw"";const d=a.getEdges().length;if(0>b||b>=d)throw"";if(0>c||c>=d)throw"";this.body_=a;this.beginIdx_=b;this.endIdx_=c}toString(){return mpl$lab$util$Util.ADVANCED?"":"EdgeRange{beginIdx_: "+this.beginIdx_+", endIdx_: "+this.endIdx_+", body_: "+this.body_.toStringShort()+"}"}static fromEdge(a){let b=a.getIndex();for(;;){var c=a.getVertex1().getEdge1();const d=c.getIndex();if(d<b)b=d,a=c;
else break}c=a.getVertex1().getEdge1().getIndex();return new mpl$lab$engine2D$EdgeRange(a.getBody(),b,c)}static fromPolygon(a){return new mpl$lab$engine2D$EdgeRange(a,0,a.getEdges().length-1)}contains(a){if(a.getBody()!=this.body_)return!1;a=a.getIndex();return a>=this.beginIdx_&&a<=this.endIdx_}};class mpl$lab$engine2D$EdgeGroup{constructor(a){this.ranges_=[];void 0!==a&&this.ranges_.push(a)}toString(){return mpl$lab$util$Util.ADVANCED?"":"EdgeGroup{ranges_.length: "+this.ranges_.length+"}"}add(a){this.ranges_.includes(a)||this.ranges_.push(a)}contains(a){for(let b=0,c=this.ranges_.length;b<c;b++)if(this.ranges_[b].contains(a))return!0;return!1}remove(a){module$contents$goog$array_remove(this.ranges_,a)}};class mpl$lab$engine2D$Shapes{constructor(){throw"";}static makeBall(a,b,c){b=new mpl$lab$engine2D$Polygon(b,c);b.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(-a,0)));b.addCircularEdge(new mpl$lab$util$Vector(-a,0),mpl$lab$util$Vector.ORIGIN,!1,!0);b.finish();b.setCentroid(mpl$lab$util$Vector.ORIGIN);b.setMomentAboutCM(a*
a/2);b.setElasticity(.8);return b}static makeBlock(a,b,c,d){c=new mpl$lab$engine2D$Polygon(c,d);d=a/2;const e=b/2;c.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(-d,-e)));c.addStraightEdge(new mpl$lab$util$Vector(d,-e),!1);c.addStraightEdge(new mpl$lab$util$Vector(d,e),!0);c.addStraightEdge(new mpl$lab$util$Vector(-d,e),!0);c.addStraightEdge(new mpl$lab$util$Vector(-d,
-e),!1);c.finish();c.setCentroid(mpl$lab$util$Vector.ORIGIN);c.setMomentAboutCM((a*a+b*b)/12);c.setElasticity(.8);return c}static makeBlock2(a,b,c,d){c=new mpl$lab$engine2D$Polygon(c,d);c.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(0,0)));c.addStraightEdge(new mpl$lab$util$Vector(a,0),!1);c.addStraightEdge(new mpl$lab$util$Vector(a,
b),!0);c.addStraightEdge(new mpl$lab$util$Vector(0,b),!0);c.addStraightEdge(new mpl$lab$util$Vector(0,0),!1);c.finish();c.setCentroid(new mpl$lab$util$Vector(a/2,b/2));c.setMomentAboutCM((a*a+b*b)/12);c.setElasticity(.8);return c}static makeDiamond(a,b,c,d,e){if(c<-Math.PI/2||c>Math.PI/2)throw"angle must be within +/- pi/2";d=new mpl$lab$engine2D$Polygon(d,e);e=a/2;const f=b/2,g=Math.cos(c),h=Math.sin(c);
let k=(new mpl$lab$util$Vector(-e,-f)).rotate(g,h);d.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(k.getX(),k.getY())));k=(new mpl$lab$util$Vector(e,-f)).rotate(g,h);d.addStraightEdge(k,!1);k=(new mpl$lab$util$Vector(e,f)).rotate(g,h);d.addStraightEdge(k,0<=c);k=(new mpl$lab$util$Vector(-e,f)).rotate(g,h);d.addStraightEdge(k,!0);k=
(new mpl$lab$util$Vector(-e,-f)).rotate(g,h);d.addStraightEdge(k,0>c);d.finish();d.setMomentAboutCM((a*a+b*b)/12);d.setCentroid(mpl$lab$util$Vector.ORIGIN);d.setElasticity(.8);return d}static makeFrame(a,b,c,d,e){a/=2;b/=2;c/=2;d=new mpl$lab$engine2D$Polygon(d,e);d.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(a-c,b-c)));d.addStraightEdge(new mpl$lab$util$Vector(a-
c,-(b-c)),!1);d.addStraightEdge(new mpl$lab$util$Vector(-(a-c),-(b-c)),!0);d.addStraightEdge(new mpl$lab$util$Vector(-(a-c),b-c),!0);d.addStraightEdge(new mpl$lab$util$Vector(a-c,b-c),!1);d.closePath();d.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(a+c,b+c)));d.addStraightEdge(new mpl$lab$util$Vector(-(a+c),b+c),!0);d.addStraightEdge(new mpl$lab$util$Vector(-(a+
c),-(b+c)),!1);d.addStraightEdge(new mpl$lab$util$Vector(a+c,-(b+c)),!1);d.addStraightEdge(new mpl$lab$util$Vector(a+c,b+c),!0);d.closePath();d.finish();d.setElasticity(.8);return d}static makeHexagon(a,b,c){b=new mpl$lab$engine2D$Polygon(b,c);c=Math.sin(Math.PI/3);const d=Math.cos(Math.PI/3);b.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(a*(1-d),0)));b.addStraightEdge(new mpl$lab$util$Vector(a*
(1+d),0),!1);b.addStraightEdge(new mpl$lab$util$Vector(2*a,a*c),!1);b.addStraightEdge(new mpl$lab$util$Vector(a*(1+d),2*a*c),!0);b.addStraightEdge(new mpl$lab$util$Vector(a*(1-d),2*a*c),!0);b.addStraightEdge(new mpl$lab$util$Vector(0,a*c),!0);b.addStraightEdge(new mpl$lab$util$Vector(a*(1-d),0),!1);b.finish();a=Math.sqrt(3)/2;b.setMomentAboutCM(a*a/2);b.setElasticity(.8);return b}static makePendulum(a,
b,c,d,e){d=new mpl$lab$engine2D$Polygon(d,e);d.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(a,c)));d.addStraightEdge(new mpl$lab$util$Vector(a,b+a),!0);d.addStraightEdge(new mpl$lab$util$Vector(-a,b+a),!0);d.addStraightEdge(new mpl$lab$util$Vector(-a,c),!1);d.addCircularEdge(new mpl$lab$util$Vector(a,c),new mpl$lab$util$Vector(0,
0),!1,!0);d.finish();d.setCenterOfMass(0,0);d.setDragPoints([mpl$lab$util$Vector.ORIGIN]);a=Math.sqrt(a*a+c*c);d.setMomentAboutCM(a*a/2);d.setElasticity(.8);return d}static makePolygon(a,b,c,d,e){if(3>a.length||a.length!=b.length)throw"";d=new mpl$lab$engine2D$Polygon(d,e);e=a[0];d.startPath(new mpl$lab$engine2D$ConcreteVertex(e));for(let f=1;f<a.length;f++)d.addStraightEdge(a[f],b[f-1]);d.addStraightEdge(e,b[a.length-1]);d.finish();
d.setMomentAboutCM(c);d.setElasticity(.8);return d}static makeRandomPolygon(a,b,c,d,e,f){void 0===c&&(c=Math.PI/a);void 0===d&&(d=3*Math.PI/a);const g=[0];var h=0;for(let k=0;k<a-1;k++){let l=(.5+mpl$lab$engine2D$Shapes.RANDOM.nextFloat())*(2*Math.PI-h)/(a-k);l=Math.min(Math.min(d,2*Math.PI-h-c*(a-1-k)),Math.max(c,l));l=Math.min(2*Math.PI,h+l);g.push(l);h=l}c=new mpl$lab$engine2D$Polygon(e,f);h=d=new mpl$lab$util$Vector(b,0);
c.startPath(new mpl$lab$engine2D$ConcreteVertex(h));for(e=1;e<a;e++)f=new mpl$lab$util$Vector(b*Math.cos(g[e]),b*Math.sin(g[e])),h=f.getX()<h.getX(),c.addStraightEdge(f,h),h=f;c.addStraightEdge(d,!1);c.finish();c.setMomentAboutCM(b*b/6);c.setElasticity(.8);return c}static makeRoundBlock(a,b,c,d){if(b<a)throw"Height must be greater than width.";c=new mpl$lab$engine2D$Polygon(c,d);d=a/2;const e=b/2;c.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(-d,
-e+d)));c.addCircularEdge(new mpl$lab$util$Vector(d,-e+d),new mpl$lab$util$Vector(0,-e+d),!1,!0);c.addStraightEdge(new mpl$lab$util$Vector(d,e-d),!0);c.addCircularEdge(new mpl$lab$util$Vector(-d,e-d),new mpl$lab$util$Vector(0,e-d),!1,!0);c.addStraightEdge(new mpl$lab$util$Vector(-d,-e+d),!1);c.finish();c.setCentroid(mpl$lab$util$Vector.ORIGIN);
c.setMomentAboutCM((a*a+b*b)/12);c.setElasticity(.8);return c}static makeRoundCornerBlock(a,b,c,d,e){const f=a/2,g=b/2;if(c>f||c>g)throw"radius must be less than half of width or height";d=new mpl$lab$engine2D$Polygon(d,e);d.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(-f+c,-g)));d.addStraightEdge(new mpl$lab$util$Vector(f-c,-g),!1);d.addCircularEdge(new mpl$lab$util$Vector(f,
-g+c),new mpl$lab$util$Vector(f-c,-g+c),!1,!0);d.addStraightEdge(new mpl$lab$util$Vector(f,g-c),!0);d.addCircularEdge(new mpl$lab$util$Vector(f-c,g),new mpl$lab$util$Vector(f-c,g-c),!1,!0);d.addStraightEdge(new mpl$lab$util$Vector(-f+c,g),!0);d.addCircularEdge(new mpl$lab$util$Vector(-f,g-c),new mpl$lab$util$Vector(-f+c,g-c),!1,!0);
d.addStraightEdge(new mpl$lab$util$Vector(-f,-g+c),!1);d.addCircularEdge(new mpl$lab$util$Vector(-f+c,-g),new mpl$lab$util$Vector(-f+c,-g+c),!1,!0);d.finish();d.setCentroid(mpl$lab$util$Vector.ORIGIN);d.setMomentAboutCM((a*a+b*b)/12);d.setElasticity(.8);return d}static makeWall(a,b,c,d,e){if(0>c||3<c)throw"";a=mpl$lab$engine2D$Shapes.makeBlock(a,b,d,e);b=c==mpl$lab$engine2D$Shapes.BOTTOM_EDGE||
c==mpl$lab$engine2D$Shapes.TOP_EDGE?a.getHeight()/2:a.getWidth()/2;a.setSpecialEdge(c,b);return a}}mpl$lab$engine2D$Shapes.ID=1;mpl$lab$engine2D$Shapes.BOTTOM_EDGE=0;mpl$lab$engine2D$Shapes.RIGHT_EDGE=1;mpl$lab$engine2D$Shapes.TOP_EDGE=2;mpl$lab$engine2D$Shapes.LEFT_EDGE=3;mpl$lab$engine2D$Shapes.RANDOM=new mpl$lab$util$RandomLCG(0);const module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_assertFalse=a=>
mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$engine2D$test$EdgeSetTest{static test(){module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_schedule(mpl$lab$engine2D$test$EdgeSetTest.testEdgeSet1)}static testEdgeSet1(){module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_startTest(mpl$lab$engine2D$test$EdgeSetTest.groupName+"testEdgeSet1");var a=mpl$lab$engine2D$Shapes.makeBlock(1,1),b=mpl$lab$engine2D$Shapes.makeBall(.5);
const c=mpl$lab$engine2D$Shapes.makeHexagon(.5);var d=new mpl$lab$engine2D$EdgeGroup(mpl$lab$engine2D$EdgeRange.fromPolygon(a));d.add(mpl$lab$engine2D$EdgeRange.fromPolygon(b));c.setNonCollideEdge(d);b=b.getEdges();for(d=0;d<b.length;d++)module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_assertTrue(c.nonCollideEdge(b[d]));a=a.getEdges();for(b=0;b<a.length;b++)module$contents$myphysicslab$lab$engine2D$test$EdgeSetTest_assertTrue(c.nonCollideEdge(a[b]))}}
mpl$lab$engine2D$test$EdgeSetTest.groupName="EdgeSetTest.";const module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertFalse=a=>
mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$engine2D$test$PolygonTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$engine2D$test$PolygonTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$engine2D$test$PolygonTest{static test(){module$contents$myphysicslab$lab$engine2D$test$PolygonTest_schedule(mpl$lab$engine2D$test$PolygonTest.testPolygon1)}static testPolygon1(){module$contents$myphysicslab$lab$engine2D$test$PolygonTest_startTest(mpl$lab$engine2D$test$PolygonTest.groupName+"testPolygon1");const a=new mpl$lab$engine2D$Polygon("polygon1");var b=new mpl$lab$util$Vector(.5,
-1.5),c=new mpl$lab$util$Vector(.5,1.5);const d=new mpl$lab$util$Vector(-.5,1.5),e=new mpl$lab$util$Vector(-.5,-1.5);a.startPath(new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(-.5,-1.5)));const f=a.addStraightEdge(b,!1),g=a.addStraightEdge(c,!0),h=a.addStraightEdge(d,!0),k=a.addStraightEdge(e,!1);a.finish();module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.isMassObject());
a.setCentroid(mpl$lab$util$Vector.ORIGIN);a.setMomentAboutCM(2.5/3);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(4,a.getEdges().length);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertRoughlyEquals(1,a.getWidth(),1E-15);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertRoughlyEquals(3,a.getHeight(),1E-15);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(f.getVertex1().locBody().equals(e));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(f.getVertex2().locBody().equals(b));
module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(g.getVertex1().locBody().equals(b));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(g.getVertex2().locBody().equals(c));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(h.getVertex1().locBody().equals(c));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(h.getVertex2().locBody().equals(d));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(k.getVertex1().locBody().equals(d));
module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(k.getVertex2().locBody().equals(e));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.getCentroidBody().equals(mpl$lab$util$Vector.ORIGIN));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.getPosition().equals(mpl$lab$util$Vector.ORIGIN));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(0,a.getAngle());b=new mpl$lab$util$Vector(.5,
1.5);a.setPosition(b);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.getPosition().equals(b));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.getCentroidWorld().equals(b));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(-1.5,a.getBottomBody());module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(1.5,a.getTopBody());module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(-.5,a.getLeftBody());
module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(.5,a.getRightBody());module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(0,a.getBottomWorld());module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(3,a.getTopWorld());module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(0,a.getLeftWorld());module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(1,a.getRightWorld());c=new mpl$lab$util$Vector(3.1456,
2.71828);a.setPosition(c);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.getPosition().equals(c));module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.getCentroidWorld().equals(c));a.setPosition(c,Math.PI/2);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(Math.PI/2,a.getAngle());a.setPosition(new mpl$lab$util$Vector(.5,1.5),Math.PI/4);module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertTrue(a.getPosition().equals(b));
module$contents$myphysicslab$lab$engine2D$test$PolygonTest_assertEquals(Math.PI/4,a.getAngle())}}mpl$lab$engine2D$test$PolygonTest.groupName="PolygonTest.";class mpl$lab$model$BodyVariable{constructor(a,b,c,d,e){this.varsList_=a;this.getter_=d;this.setter_=e;this.name_=mpl$lab$util$Util.validName(mpl$lab$util$Util.toName(b));this.localName_=c;this.value_=0;this.isComputed_=!1;this.seq_=0;this.doesBroadcast_=!1}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", isComputed_: "+this.isComputed_+', localName_: "'+this.localName_+
'", varsList_: '+this.varsList_.toStringShort()+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":this.getClassName()+'{name_: "'+this.name_+'", value_: '+mpl$lab$util$Util.NF(this.getValue())+"}"}getClassName(){return"BodyVariable"}getAsString(){return this.value_.toString()}getBroadcast(){return this.doesBroadcast_}getChoices(){return[]}getName(a){return a?this.localName_:this.name_}getSequence(){return this.seq_}getSubject(){return this.varsList_}getValue(){return this.getter_()}getValues(){return[]}incrSequence(){this.seq_++}isComputed(){return this.isComputed_}nameEquals(a){return this.name_==
mpl$lab$util$Util.toName(a)}setBroadcast(a){this.doesBroadcast_=a}setComputed(a){this.isComputed_=a}setFromString(a){const b=Number(a);if(isNaN(b))throw"not a number: "+a+" (BodyVariable.setFromString)";this.setValue(b)}setValue(a){this.getValue()!=a&&(this.setter_(a),this.seq_++,this.doesBroadcast_&&this.varsList_.broadcast(this))}setValueSmooth(a){this.setter_(a)}};class mpl$lab$model$DampingLaw extends mpl$lab$util$AbstractSubject{constructor(a,b,c){const d=mpl$lab$model$DampingLaw.NAME_ID++;super("DAMPING_LAW"+(0<d?"_"+d:""));this.damping_=a;this.rotateRatio_=b||1;this.bods_=[];this.simList_=null;null!=c&&this.connect(c);this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$model$DampingLaw.en.DAMPING,mpl$lab$model$DampingLaw.i18n.DAMPING,
()=>this.getDamping(),e=>this.setDamping(e))).setSignifDigits(3));this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$model$DampingLaw.en.ROTATE_RATIO,mpl$lab$model$DampingLaw.i18n.ROTATE_RATIO,()=>this.getRotateRatio(),e=>this.setRotateRatio(e))).setSignifDigits(3))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", rotateRatio: "+mpl$lab$util$Util.NF5(this.rotateRatio_)+
", bodies: "+this.bods_.length+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":super.toStringShort().slice(0,-1)+", damping: "+mpl$lab$util$Util.NF5(this.damping_)+"}"}getClassName(){return"DampingLaw"}addBodies(a){a.forEach(b=>this.addBody(b))}addBody(a){if(a.isMassObject()&&!module$contents$goog$array_contains(this.bods_,a)){var b=a.getMass();0<b&&isFinite(b)&&this.bods_.push(a)}}calculateForces(){const a=[];if(0==this.damping_)return a;
this.bods_.forEach(b=>{if(isFinite(b.getMass())){var c=b.getPosition();b=new mpl$lab$model$Force("damping",b,c,mpl$lab$model$CoordType.WORLD,b.getVelocity().multiply(-this.damping_),mpl$lab$model$CoordType.WORLD,-this.damping_*this.rotateRatio_*b.getAngularVelocity());a.push(b)}});return a}connect(a){this.addBodies(a.toArray());a.addObserver(this);this.simList_=a}disconnect(){null!=this.simList_&&this.simList_.removeObserver(this)}getBodies(){return Array.from(this.bods_)}getDamping(){return this.damping_}getPotentialEnergy(){return 0}getRotateRatio(){return this.rotateRatio_}observe(a){a.nameEquals(mpl$lab$model$SimList.OBJECT_ADDED)?
(a=a.getValue(),this.addBody(a)):a.nameEquals(mpl$lab$model$SimList.OBJECT_REMOVED)&&(a=a.getValue(),module$contents$goog$array_remove(this.bods_,a),goog.asserts.assert(!module$contents$goog$array_contains(this.bods_,a)))}setDamping(a){this.damping_=a;this.broadcastParameter(mpl$lab$model$DampingLaw.en.DAMPING)}setRotateRatio(a){this.rotateRatio_=a;this.broadcastParameter(mpl$lab$model$DampingLaw.en.ROTATE_RATIO)}}
mpl$lab$model$DampingLaw.NAME_ID=0;mpl$lab$model$DampingLaw.en={DAMPING:"damping",ROTATE_RATIO:"rotate ratio"};mpl$lab$model$DampingLaw.de_strings={DAMPING:"D\u00e4mpfung",ROTATE_RATIO:"Drehquotient"};mpl$lab$model$DampingLaw.i18n="de"===goog.LOCALE?mpl$lab$model$DampingLaw.de_strings:mpl$lab$model$DampingLaw.en;class mpl$lab$model$EnergySystem extends mpl$lab$util$Printable{getEnergyInfo(){}getPEOffset(){}setPEOffset(a){}}mpl$lab$model$EnergySystem.en={POTENTIAL_ENERGY:"potential energy",TRANSLATIONAL_ENERGY:"translational energy",KINETIC_ENERGY:"kinetic energy",ROTATIONAL_ENERGY:"rotational energy",TOTAL:"total",TOTAL_ENERGY:"total energy",PE_OFFSET:"potential energy offset"};
mpl$lab$model$EnergySystem.de_strings={POTENTIAL_ENERGY:"potenzielle Energie",TRANSLATIONAL_ENERGY:"Translationsenergie",KINETIC_ENERGY:"kinetische Energie",ROTATIONAL_ENERGY:"Rotationsenergie",TOTAL:"gesamt",TOTAL_ENERGY:"gesamte Energie",PE_OFFSET:"Potenzielle Energie Ausgleich"};mpl$lab$model$EnergySystem.i18n="de"===goog.LOCALE?mpl$lab$model$EnergySystem.de_strings:mpl$lab$model$EnergySystem.en;class mpl$lab$model$GravityLaw extends mpl$lab$util$AbstractSubject{constructor(a,b){const c=mpl$lab$model$GravityLaw.NAME_ID++;super("GRAVITY_LAW"+(0<c?"_"+c:""));this.gravity_=a;this.zeroEnergyLevel_=0;this.bods_=[];this.simList_=null;null!=b&&this.connect(b);this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$model$GravityLaw.en.GRAVITY,mpl$lab$model$GravityLaw.i18n.GRAVITY,
()=>this.getGravity(),d=>this.setGravity(d))).setSignifDigits(4));this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$model$GravityLaw.en.ZERO_ENERGY,mpl$lab$model$GravityLaw.i18n.ZERO_ENERGY,()=>this.getZeroEnergyLevel(),d=>this.setZeroEnergyLevel(d))).setLowerLimit(mpl$lab$util$Util.NEGATIVE_INFINITY))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,
-1)+", bodies: "+this.bods_.length+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":super.toStringShort().slice(0,-1)+", gravity: "+mpl$lab$util$Util.NF5(this.gravity_)+"}"}getClassName(){return"GravityLaw"}addBodies(a){a.forEach(b=>this.addBody(b))}addBody(a){if(a.isMassObject()&&!module$contents$goog$array_contains(this.bods_,a)){var b=a.getMass();0<b&&isFinite(b)&&this.bods_.push(a)}}calculateForces(){const a=[];this.bods_.forEach(b=>
{isFinite(b.getMass())&&a.push(new mpl$lab$model$Force("gravity",b,b.getPosition(),mpl$lab$model$CoordType.WORLD,new mpl$lab$util$Vector(0,-this.gravity_*b.getMass(),0),mpl$lab$model$CoordType.WORLD))});return a}connect(a){this.addBodies(a.toArray());a.addObserver(this);this.simList_=a}disconnect(){null!=this.simList_&&(this.simList_.removeObserver(this),this.simList_=null)}getBodies(){return Array.from(this.bods_)}getGravity(){return this.gravity_}getPotentialEnergy(){let a=
0;this.bods_.forEach(b=>{if(isFinite(b.getMass())){let c=b.getZeroEnergyLevel();c=null!=c?c:this.zeroEnergyLevel_;a+=(b.getPosition().getY()-c)*b.getMass()*this.gravity_}});return a}getZeroEnergyLevel(){return this.zeroEnergyLevel_}observe(a){const b=a.getValue();a.nameEquals(mpl$lab$model$SimList.OBJECT_ADDED)?this.addBody(b):a.nameEquals(mpl$lab$model$SimList.OBJECT_REMOVED)&&(module$contents$goog$array_remove(this.bods_,b),goog.asserts.assert(!module$contents$goog$array_contains(this.bods_,
b)))}setGravity(a){this.gravity_=a;this.broadcastParameter(mpl$lab$model$GravityLaw.en.GRAVITY)}setZeroEnergyLevel(a){this.zeroEnergyLevel_=a;this.broadcastParameter(mpl$lab$model$GravityLaw.en.ZERO_ENERGY)}}mpl$lab$model$GravityLaw.NAME_ID=0;mpl$lab$model$GravityLaw.en={GRAVITY:"gravity",ZERO_ENERGY:"zero energy level"};
mpl$lab$model$GravityLaw.de_strings={GRAVITY:"Gravitation",ZERO_ENERGY:"Null-Energie Level"};mpl$lab$model$GravityLaw.i18n="de"===goog.LOCALE?mpl$lab$model$GravityLaw.de_strings:mpl$lab$model$GravityLaw.en;class mpl$lab$model$Simulation extends mpl$lab$util$Subject{getSimList(){}getTime(){}modifyObjects(){}reset(){}saveInitialState(){}}mpl$lab$model$Simulation.RESET="RESET";mpl$lab$model$Simulation.INITIAL_STATE_SAVED="INITIAL_STATE_SAVED";class mpl$lab$model$ODESim extends mpl$lab$model$Simulation{evaluate(a,b,c){}getVarsList(){}restoreState(){}saveState(){}};class mpl$lab$engine2D$Scrim{constructor(){}static getScrim(){return mpl$lab$engine2D$Scrim.singleton}toString(){return mpl$lab$util$Util.ADVANCED?"":"Scrim{}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"Scrim{}"}addNonCollide(a){}alignTo(a,b,c){throw"";}bodyToWorld(a){return mpl$lab$util$Vector.clone(a)}bodyToWorldTransform(){return mpl$lab$util$AffineTransform.IDENTITY}createCanvasPath(a){a.beginPath();
a.closePath()}doesNotCollide(a){return!0}eraseOldCoords(){}getAccuracy(){return 0}getAngle(){return 0}getAngularVelocity(){return 0}getBottomBody(){return mpl$lab$util$Util.NEGATIVE_INFINITY}getBottomWorld(){return mpl$lab$util$Util.NEGATIVE_INFINITY}getBoundsBody(){return new mpl$lab$util$DoubleRect(this.getLeftBody(),this.getBottomBody(),this.getRightBody(),this.getTopBody())}getBoundsWorld(){return this.getBoundsBody()}getCenterOfMassBody(){return mpl$lab$util$Vector.ORIGIN}getCentroidBody(){return mpl$lab$util$Vector.ORIGIN}getCentroidRadius(){return mpl$lab$util$Util.POSITIVE_INFINITY}getCentroidWorld(){return mpl$lab$util$Vector.ORIGIN}getChanged(){return!1}getDistanceTol(){return 0}getDragPoints(){return[]}getElasticity(){return 1}getExpireTime(){return mpl$lab$util$Util.POSITIVE_INFINITY}getHeight(){return mpl$lab$util$Util.POSITIVE_INFINITY}getKineticEnergy(){return 0}getLeftBody(){return mpl$lab$util$Util.NEGATIVE_INFINITY}getLeftWorld(){return mpl$lab$util$Util.NEGATIVE_INFINITY}getMass(){return mpl$lab$util$Util.POSITIVE_INFINITY}getName(a){return"SCRIM"}getMinHeight(){return mpl$lab$util$Util.POSITIVE_INFINITY}getOldCoords(){return null}getPosition(){return mpl$lab$util$Vector.ORIGIN}getRightBody(){return mpl$lab$util$Util.POSITIVE_INFINITY}getRightWorld(){return mpl$lab$util$Util.POSITIVE_INFINITY}getTopBody(){return mpl$lab$util$Util.POSITIVE_INFINITY}getTopWorld(){return mpl$lab$util$Util.POSITIVE_INFINITY}getVarsIndex(){return-1}getVelocity(a){return mpl$lab$util$Vector.ORIGIN}getVelocityTol(){return 0}getVerticesBody(){return[]}getWidth(){return mpl$lab$util$Util.POSITIVE_INFINITY}getZeroEnergyLevel(){return null}isMassObject(){return!0}momentAboutCM(){return mpl$lab$util$Util.POSITIVE_INFINITY}momentum(){const a=
Array(3);a[0]=a[1]=a[2]=mpl$lab$util$Util.POSITIVE_INFINITY;return a}nameEquals(a){return this.getName()==mpl$lab$util$Util.toName(a)}removeNonCollide(a){}rotateBodyToWorld(a){return mpl$lab$util$Vector.clone(a)}rotateWorldToBody(a){return mpl$lab$util$Vector.clone(a)}rotationalEnergy(){return 0}saveOldCoords(){}setAccuracy(a){}setAngle(a){}setAngularVelocity(a){}setCenterOfMass(a,b){}setChanged(){}setDistanceTol(a){}setDragPoints(a){}setElasticity(a){}setExpireTime(a){return this}setMass(a){throw"";
}setMinHeight(a){}setMomentAboutCM(a){}setPosition(a,b){if(0!=a.getX()||0!=a.getY())throw"";if(void 0!==b&&0!=b)throw"";}setPositionX(a){}setPositionY(a){}setVelocity(a,b){if(0!=a.getX()||0!=a.getY())throw"";if(void 0!==b&&0!=b)throw"";}setVelocityX(a){}setVelocityY(a){}setVelocityTol(a){}setZeroEnergyLevel(a){return this}similar(a,b){return!1}translationalEnergy(){return 0}worldToBody(a){return mpl$lab$util$Vector.clone(a)}}
mpl$lab$engine2D$Scrim.singleton=new mpl$lab$engine2D$Scrim;class mpl$lab$engine2D$RigidBodySim extends mpl$lab$util$AbstractSubject{constructor(a){super(a||"SIM");this.bods_=[];this.showForces_=!1;this.forceLaws_=[];this.simRect_=null;this.simList_=new mpl$lab$model$SimList;this.varsList_=new mpl$lab$model$VarsList([mpl$lab$model$VarsList.en.TIME,mpl$lab$model$EnergySystem.en.KINETIC_ENERGY,mpl$lab$model$EnergySystem.en.POTENTIAL_ENERGY,
mpl$lab$model$EnergySystem.en.TOTAL_ENERGY],[mpl$lab$model$VarsList.i18n.TIME,mpl$lab$model$EnergySystem.i18n.KINETIC_ENERGY,mpl$lab$model$EnergySystem.i18n.POTENTIAL_ENERGY,mpl$lab$model$EnergySystem.i18n.TOTAL_ENERGY],this.getName()+"_VARS");this.getVarsList().setComputed(1,2,3);this.recentState_=this.initialState_=null;this.potentialOffset_=0;this.debugPaint_=null;mpl$lab$engine2D$UtilEngine.debugEngine2D=
this;this.addParameter(new mpl$lab$util$ParameterBoolean(this,mpl$lab$engine2D$RigidBodySim.en.SHOW_FORCES,mpl$lab$engine2D$RigidBodySim.i18n.SHOW_FORCES,()=>this.getShowForces(),b=>this.setShowForces(b)));this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$model$EnergySystem.en.PE_OFFSET,mpl$lab$model$EnergySystem.i18n.PE_OFFSET,()=>this.getPEOffset(),
b=>this.setPEOffset(b))).setLowerLimit(mpl$lab$util$Util.NEGATIVE_INFINITY).setSignifDigits(5))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+this.toString_()}toString_(){return mpl$lab$util$Util.ADVANCED?"":", showForces_: "+this.showForces_+", potentialOffset_: "+mpl$lab$util$Util.NF(this.potentialOffset_)+", varsList_: "+this.varsList_.toStringShort()+", forceLaws_: ["+
this.forceLaws_.map(a=>a.toStringShort())+"], bods_: ["+this.bods_.map(a=>a.toStringShort())+"]"+super.toString()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":super.toStringShort().slice(0,-1)+", bods_.length: "+this.bods_.length+"}"}getClassName(){return"RigidBodySim"}getSimList(){return this.simList_}getVarsList(){return this.varsList_}getTime(){return this.varsList_.getTime()}getShowForces(){return this.showForces_}setShowForces(a){this.showForces_=a;this.broadcastParameter(mpl$lab$engine2D$RigidBodySim.en.SHOW_FORCES)}getSimRect(){return this.simRect_}setSimRect(a){this.simRect_=
a}formatVars(){const a=this.varsList_.getValues(!0);return module$contents$goog$array_reduce(this.bods_,function(b,c){return b+(""!=b?"\n":"")+mpl$lab$engine2D$UtilEngine.formatArray(a,c.getVarsIndex(),6)},"")}reset(){null!=this.initialState_&&this.initialState_.length==this.varsList_.numVariables()&&this.varsList_.setValues(this.initialState_);this.bods_.forEach(a=>a.eraseOldCoords());this.getSimList().removeTemporary(mpl$lab$util$Util.POSITIVE_INFINITY);
this.modifyObjects();this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$Simulation.RESET))}saveInitialState(){this.initialState_=this.varsList_.getValues();this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$Simulation.INITIAL_STATE_SAVED))}cleanSlate(){this.getSimList().clear();this.clearForceLaws();const a=this.varsList_.numVariables();4<a&&this.varsList_.deleteVariables(4,a-
4);this.varsList_.setTime(0);this.bods_.forEach(b=>b.setVarsIndex(-1));this.bods_=[];this.simRect_=null;this.potentialOffset_=0}saveState(){this.recentState_=this.varsList_.getValues();this.bods_.forEach(a=>a.saveOldCoords())}restoreState(){null!=this.recentState_&&this.varsList_.setValues(this.recentState_,!0);this.bods_.forEach(a=>a.eraseOldCoords())}addBody(a){if(!(a instanceof mpl$lab$engine2D$Scrim)){if(!this.bods_.includes(a)){var b=this.varsList_.addVariable(new mpl$lab$model$BodyVariable(this.varsList_,
a.getVarName(0,!1),a.getVarName(0,!0),()=>a.getPosition().getX(),d=>a.setPositionX(d)));this.varsList_.addVariable(new mpl$lab$model$BodyVariable(this.varsList_,a.getVarName(1,!1),a.getVarName(1,!0),()=>a.getVelocity().getX(),d=>a.setVelocityX(d)));this.varsList_.addVariable(new mpl$lab$model$BodyVariable(this.varsList_,a.getVarName(2,!1),a.getVarName(2,!0),()=>a.getPosition().getY(),d=>a.setPositionY(d)));this.varsList_.addVariable(new mpl$lab$model$BodyVariable(this.varsList_,
a.getVarName(3,!1),a.getVarName(3,!0),()=>a.getVelocity().getY(),d=>a.setVelocityY(d)));this.varsList_.addVariable(new mpl$lab$model$BodyVariable(this.varsList_,a.getVarName(4,!1),a.getVarName(4,!0),()=>a.getAngle(),d=>a.setAngle(d)));this.varsList_.addVariable(new mpl$lab$model$BodyVariable(this.varsList_,a.getVarName(5,!1),a.getVarName(5,!0),()=>a.getAngularVelocity(),d=>a.setAngularVelocity(d)));a.setVarsIndex(b);this.bods_.push(a);this.getSimList().add(a)}if(!this.bods_.includes(a)){b=
[];for(var c=0;6>c;c++)b.push(a.getVarName(c,!1));c=[];for(let d=0;6>d;d++)c.push(a.getVarName(d,!0));b=this.varsList_.addVariables(b,c);a.setVarsIndex(b);this.bods_.push(a);this.getSimList().add(a)}this.bods_.forEach(d=>d.eraseOldCoords())}}removeBody(a){this.bods_.includes(a)&&(this.varsList_.deleteVariables(a.getVarsIndex(),6),module$contents$goog$array_remove(this.bods_,a),a.setVarsIndex(-1));this.getSimList().remove(a);this.getVarsList().incrSequence(1,2,3)}getBodies(){return Array.from(this.bods_)}getBody(a){let b=
null;if("string"===typeof a){const c=mpl$lab$util$Util.toName(a);b=module$contents$goog$array_find(this.bods_,d=>d.getName()==c)}else a<this.bods_.length&&0<=a&&(b=this.bods_[a]);if(null==b)throw"no body "+a;return b}modifyObjects(){const a=this.varsList_,b=this.getEnergyInfo();a.setValue(1,b.getTranslational()+b.getRotational(),!0);a.setValue(2,b.getPotential(),!0);a.setValue(3,b.getTotalEnergy(),!0)}addForceLaw(a){const b=module$contents$goog$array_find(this.forceLaws_,function(c,
d,e){return a instanceof mpl$lab$model$DampingLaw?c instanceof mpl$lab$model$DampingLaw:a instanceof mpl$lab$model$GravityLaw?c instanceof mpl$lab$model$GravityLaw:!1});if(null!=b)throw"cannot add DampingLaw or GravityLaw twice "+b;this.forceLaws_.includes(a)||this.forceLaws_.push(a);this.getVarsList().incrSequence(1,2,3)}removeForceLaw(a){a.disconnect();this.getVarsList().incrSequence(1,2,3);return module$contents$goog$array_remove(this.forceLaws_,
a)}clearForceLaws(){module$contents$goog$array_forEachRight(this.forceLaws_,a=>this.removeForceLaw(a));this.getVarsList().incrSequence(1,2,3)}getForceLaws(){return Array.from(this.forceLaws_)}getEnergyInfo(){let a=0,b=0,c=0;this.bods_.forEach(d=>{isFinite(d.getMass())&&(b+=d.rotationalEnergy(),c+=d.translationalEnergy())});this.forceLaws_.forEach(d=>a+=d.getPotentialEnergy());return new mpl$lab$model$EnergyInfo(a+this.potentialOffset_,c,b)}getPEOffset(){return this.potentialOffset_}setPEOffset(a){this.potentialOffset_=
a;this.getVarsList().incrSequence(2,3);this.broadcastParameter(mpl$lab$model$EnergySystem.en.PE_OFFSET)}evaluate(a,b,c){this.varsList_.setValues(a,!0);this.bods_.forEach(d=>{const e=d.getVarsIndex();if(!(0>e))if(d.getMass()==mpl$lab$util$Util.POSITIVE_INFINITY)for(d=0;6>d;d++)b[e+d]=0;else b[e+mpl$lab$engine2D$RigidBodySim.X_]=a[e+mpl$lab$engine2D$RigidBodySim.VX_],b[e+mpl$lab$engine2D$RigidBodySim.Y_]=
a[e+mpl$lab$engine2D$RigidBodySim.VY_],b[e+mpl$lab$engine2D$RigidBodySim.W_]=a[e+mpl$lab$engine2D$RigidBodySim.VW_],b[e+mpl$lab$engine2D$RigidBodySim.VX_]=0,b[e+mpl$lab$engine2D$RigidBodySim.VY_]=0,b[e+mpl$lab$engine2D$RigidBodySim.VW_]=0});this.forceLaws_.forEach(d=>{d.calculateForces().forEach(e=>this.applyForce(b,e))});b[this.varsList_.timeIndex()]=1;return null}applyForce(a,
b){const c=b.getBody();if(module$contents$goog$array_contains(this.bods_,c)){var d=c.getVarsIndex();if(!(0>d)){var e=b.getVector(),f=b.getStartPoint(),g=c.getMass();a[d+mpl$lab$engine2D$RigidBodySim.VX_]+=e.getX()/g;a[d+mpl$lab$engine2D$RigidBodySim.VY_]+=e.getY()/g;g=f.getX()-c.getPosition().getX();f=f.getY()-c.getPosition().getY();a[d+mpl$lab$engine2D$RigidBodySim.VW_]+=(g*e.getY()-f*e.getX())/c.momentAboutCM();e=b.getTorque();
0!=e&&(a[d+mpl$lab$engine2D$RigidBodySim.VW_]+=e/c.momentAboutCM());this.showForces_&&(b.setExpireTime(this.getTime()),this.getSimList().add(b))}}}debugLine(a,b,c,d){void 0===d&&(d=this.getTime());a=new mpl$lab$model$ConcreteLine(a,b,c);a.setExpireTime(d);this.getSimList().add(a)}debugCircle(a,b,c,d){void 0===d&&(d=this.getTime()+.05);a=mpl$lab$model$PointMass.makeCircle(Math.max(.02,Math.abs(2*c)),a).setMass(0);a.setPosition(b);
a.setExpireTime(d);this.getSimList().add(a)}myPrint(a,b){if(mpl$lab$util$Util.DEBUG){const c=module$contents$goog$array_slice(arguments,1);c.unshift("%c"+mpl$lab$util$Util.NF7(this.getTime())+"%c "+a,"color:green","color:black");console.log.apply(console,c)}}setElasticity(a){if(0==this.bods_.length)throw"setElasticity: no bodies";this.bods_.forEach(b=>b.setElasticity(a));this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$engine2D$RigidBodySim.ELASTICITY_SET,
a))}}mpl$lab$engine2D$RigidBodySim.X_=0;mpl$lab$engine2D$RigidBodySim.VX_=1;mpl$lab$engine2D$RigidBodySim.Y_=2;mpl$lab$engine2D$RigidBodySim.VY_=3;mpl$lab$engine2D$RigidBodySim.W_=4;mpl$lab$engine2D$RigidBodySim.VW_=5;mpl$lab$engine2D$RigidBodySim.ELASTICITY_SET="ELASTICITY_SET";
mpl$lab$engine2D$RigidBodySim.en={COLLISION_HANDLING:"collision method",COLLISION_ACCURACY:"collision accuracy",DISTANCE_TOL:"distance tolerance",EXTRA_ACCEL:"extra accel",RANDOM_SEED:"random seed",SHOW_FORCES:"show forces",SHOW_COLLISIONS:"show collisions",VELOCITY_TOL:"velocity tolerance"};
mpl$lab$engine2D$RigidBodySim.de_strings={COLLISION_HANDLING:"Kollisionsmethode",COLLISION_ACCURACY:"Kollisionsgenauigkeit",DISTANCE_TOL:"Distanztoleranz",EXTRA_ACCEL:"extra Beschleunigung",RANDOM_SEED:"Zufallskern",SHOW_FORCES:"Kr\u00e4fte anzeigen",SHOW_COLLISIONS:"Kollisionen anzeigen",VELOCITY_TOL:"Geschwindigkeitstoleranz"};mpl$lab$engine2D$RigidBodySim.i18n="de"===goog.LOCALE?mpl$lab$engine2D$RigidBodySim.de_strings:mpl$lab$engine2D$RigidBodySim.en;const module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$engine2D$test$RigidBodySimTest{static test(){module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_schedule(mpl$lab$engine2D$test$RigidBodySimTest.testRigidBodySim1)}static testRigidBodySim1(){module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_startTest(mpl$lab$engine2D$test$RigidBodySimTest.groupName+"testRigidBodySim1");const a=new mpl$lab$engine2D$RigidBodySim,b=
mpl$lab$engine2D$Shapes.makeBlock(1,3,"block1");b.setPosition(new mpl$lab$util$Vector(-1,-1),Math.PI/4);const c=mpl$lab$engine2D$Shapes.makeBlock(1,3,"block2");c.setPosition(new mpl$lab$util$Vector(5,5),Math.PI/3);c.setVelocity(new mpl$lab$util$Vector(-1,-1),2);a.addBody(b);a.addBody(c);module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(2,a.getBodies().length);
module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(b,a.getBody(0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(c,a.getBody(1));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(b,a.getBody("block1"));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(c,a.getBody("block2"));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(4,b.getVarsIndex());module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(10,
c.getVarsIndex());module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(16,a.getVarsList().getValues().length);a.removeBody(b);const d=a.getVarsList();module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(4).getName());module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(5).getName());module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,
d.getVariable(6).getName());module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(7).getName());module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(8).getName());module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(9).getName());
module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(4).getName(!0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(5).getName(!0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(6).getName(!0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,
d.getVariable(7).getName(!0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(8).getName(!0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(mpl$lab$model$VarsList.DELETED,d.getVariable(9).getName(!0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertFalse(a.getBodies().includes(b));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(1,
a.getBodies().length);module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(c,a.getBody(0));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(c,a.getBody("block2"));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertThrows(()=>a.getBody("block1"));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertThrows(()=>a.getBody(1));module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(10,c.getVarsIndex());
module$contents$myphysicslab$lab$engine2D$test$RigidBodySimTest_assertEquals(16,a.getVarsList().getValues().length)}}mpl$lab$engine2D$test$RigidBodySimTest.groupName="RigidBodySimTest.";const module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$engine2D$test$StraightEdgeTest{static test(){module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_schedule(mpl$lab$engine2D$test$StraightEdgeTest.testStraightEdge1)}static testStraightEdge1(){module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_startTest(mpl$lab$engine2D$test$StraightEdgeTest.groupName+"testStraightEdge1");var a=new mpl$lab$engine2D$Polygon("test1");
const b=new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(0,0)),c=new mpl$lab$engine2D$ConcreteVertex(new mpl$lab$util$Vector(1,2),!0);a.startPath(b);a=new mpl$lab$engine2D$StraightEdge(a,b,c,!0);module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_assertEquals(b,a.getVertex1());module$contents$myphysicslab$lab$engine2D$test$StraightEdgeTest_assertEquals(c,a.getVertex2())}}
mpl$lab$engine2D$test$StraightEdgeTest.groupName="StraightEdgeTest.";class mpl$lab$engine2D$ComputeForces{constructor(a,b){this.name_=a;this.order=[];this.preOrder=[];this.nextContactPolicy=mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID;this.pRNG=b}setNextContactPolicy(a,b){if(a==mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED)if(Array.isArray(b))this.preOrder=b;else throw"no preOrder specified";else this.preOrder.length=0;this.nextContactPolicy=a}getNextContactPolicy(){return this.nextContactPolicy}getOrder(){return Array.from(this.order)}compute_forces(a,
b,c,d,e,f,g){const h=c.length;if(a.length!=h||a[0].length!=h||b.length!=h||c.length!=h||d.length!=h)throw"wrong length of input array";if(1==h)return b[0]=d[0]||0>c[0]?-c[0]/a[0][0]:0,-1;let k=[];const l=mpl$lab$util$Util.newNumberArray(h),m=mpl$lab$util$Util.newBooleanArray(h),p=mpl$lab$util$Util.newBooleanArray(h),t=mpl$lab$util$Util.newBooleanArray(h),y=[],x=mpl$lab$util$Util.newNumberArray(h),
A=mpl$lab$util$Util.newNumberArray(h),J=mpl$lab$util$Util.newBooleanArray(h),F=[],O=[];let K=0;for(var H=0;H<h;H++)b[H]=0,l[H]=c[H],p[H]=!1,m[H]=!1,t[H]=!1;const z=n=>{mpl$lab$util$Util.DEBUG&&console.log(this.name_+" "+mpl$lab$util$Util.NF4(f)+" "+n)},L=(n,u)=>{if(mpl$lab$util$Util.DEBUG){z("printEverything "+n);console.log("seed="+this.pRNG.getSeed());mpl$lab$engine2D$UtilEngine.printArray("f",
b,mpl$lab$util$Util.NFE,h);mpl$lab$engine2D$UtilEngine.printArray("a",l,mpl$lab$util$Util.NFSCI,h);mpl$lab$engine2D$UtilEngine.printArray("delta_f",A,mpl$lab$util$Util.NFE,h);mpl$lab$engine2D$UtilEngine.printArray("delta_a",x,mpl$lab$util$Util.NFE,h);mpl$lab$engine2D$UtilEngine.printArrayIndices("joint",d,h);
mpl$lab$engine2D$UtilEngine.printArrayIndices("C",m,h);mpl$lab$engine2D$UtilEngine.printArrayIndices("NC",p,h);mpl$lab$engine2D$UtilEngine.printArrayIndices("R",t,h);mpl$lab$engine2D$UtilEngine.printList("reRejects",y);n=Array(h);for(let q=0;q<h;q++)n[q]=!m[q]&&!p[q]&&!t[q];mpl$lab$engine2D$UtilEngine.printArrayIndices("not treated",n,h);u&&(mpl$lab$engine2D$UtilEngine.printMatrix2("A "+
a.length+"x"+a[0].length,a,mpl$lab$util$Util.NFSCI),mpl$lab$engine2D$UtilEngine.printArray("b",c,mpl$lab$util$Util.NFSCI,h))}},M=(n,u,q,r,v)=>{if(mpl$lab$util$Util.DEBUG){n=n+" j="+q+" N="+h+" step="+mpl$lab$util$Util.NFE(K);if(u||m[q])n+=" C["+q+"]="+m[q]+" f["+q+"]="+mpl$lab$util$Util.NFE(b[q])+" delta_f["+q+"]="+mpl$lab$util$Util.NFE(A[q]);
if(u||p[q])n+=" NC["+q+"]="+p[q]+" a["+q+"]="+mpl$lab$util$Util.NFE(l[q])+" delta_a["+q+"]="+mpl$lab$util$Util.NFE(x[q]);0<=r&&(n+=" d="+r+" a[d]="+mpl$lab$util$Util.NFE(l[r]));0<=v&&(n+=" loopCtr="+v);z(n)}},S=n=>{if(k.length<n){n=10*(2+n/10);k=Array(n);for(let u=0;u<n;u++)k[u]=new Float64Array(n+1)}return k};H=n=>{const u=(v,B,C)=>{let w=0;for(let D=0;D<C;D++)if(B[D]||0>v[D])w+=v[D]*v[D];return w};if(mpl$lab$util$Util.DEBUG)for(var q=
0;q<h;q++)m[q]&&goog.asserts.assert(!p[q]&&!t[q]),p[q]&&goog.asserts.assert(!m[q]&&!t[q]),t[q]&&goog.asserts.assert(!m[q]&&!p[q]);for(q=0;q<h;q++)if(!m[q]&&!p[q]&&!t[q])return e&&z("contact not yet treated i="+q),!1;mpl$lab$util$Util.DEBUG&&e&&z("checkLoop states.length="+F.length);q=[];for(var r=0;r<h;r++)q.push(m[r]?1:p[r]?2:3);q.push(n);mpl$lab$util$Util.DEBUG&&e&&mpl$lab$engine2D$UtilEngine.printList("checkLoop state",q);
n=!1;for(let v=0,B=F.length;v<B;v++)mpl$lab$util$Util.DEBUG&&e&&mpl$lab$engine2D$UtilEngine.printList("state",q),module$contents$goog$array_equals(q,F[v])&&(mpl$lab$util$Util.DEBUG&&(n=O[v],r=mpl$lab$engine2D$UtilEngine.minValue(O),z("num states="+F.length+" now accel="+mpl$lab$util$Util.NFE(u(l,d,h))+" prev accel="+mpl$lab$util$Util.NFE(n)+" min accel="+
mpl$lab$util$Util.NFE(r)),mpl$lab$engine2D$UtilEngine.printList("state",q),console.log("checkLoop detected same state")),n=!0);n||(F.push(q),O.push(u(l,d,h)));n&&mpl$lab$util$Util.DEBUG&&(mpl$lab$engine2D$UtilEngine.printList("now state",q),F.map(v=>mpl$lab$engine2D$UtilEngine.printList("old state",v)),mpl$lab$engine2D$UtilEngine.printList("accels",O));return n};
const U=()=>{var n=this.pRNG.randomInts(h);for(var u=0;u<h;u++){var q=n[u];if(d[q]&&!m[q]&&!p[q]&&!t[q])return q}u=mpl$lab$util$Util.POSITIVE_INFINITY;n=-1;for(q=0;q<h;q++)!(d[q]||m[q]||p[q]||t[q])&&l[q]<u&&(u=l[q],n=q);return-1<n?n:P()},V=()=>{var n=-1;let u=-1;for(var q=0;q<h;q++)d[q]&&!m[q]&&!p[q]&&!t[q]&&Math.abs(l[q])>n&&(n=Math.abs(l[q]),u=q);if(-1<u)return u;n=mpl$lab$util$Util.POSITIVE_INFINITY;u=-1;for(q=0;q<h;q++)!(d[q]||m[q]||p[q]||t[q])&&
l[q]<n&&(n=l[q],u=q);return-1<u?u:P()},W=()=>{const n=this.pRNG.randomInts(h);for(var u=0;u<h;u++){var q=n[u];if(d[q]&&!m[q]&&!p[q]&&!t[q])return q}for(u=0;u<h;u++)if(q=n[u],!(d[q]||m[q]||p[q]||t[q]))return q;return P()},X=()=>{const n=this.preOrder.length;for(var u=0;u<n;u++){var q=this.preOrder[u];if(d[q]&&!m[q]&&!p[q]&&!t[q])return q}for(u=0;u<n;u++)if(q=this.preOrder[u],!(d[q]||m[q]||p[q]||t[q]))return q;return P()},P=()=>{let n=0,u=-1;for(let q=0;q<h;q++)t[q]&&!y.includes(q)&&(!d[q]&&l[q]<-n||
d[q]&&Math.abs(l[q])>n)&&(n=Math.abs(l[q]),u=q);return-1<u&&1E-8<n?u:-1},Y=n=>{if(mpl$lab$util$Util.DEBUG)for(let u=0;u<h;u++)(m[u]||d[u])&&1E-10<Math.abs(l[u])&&z("=======  accel s/b zero a["+u+"]="+mpl$lab$util$Util.NFE(l[u])+" tol="+mpl$lab$util$Util.NFE(1E-10)),p[u]&&!d[u]&&-1E-10>l[u]&&z("========  accel s/b non-negative a["+u+"]="+mpl$lab$util$Util.NFE(l[u])+" tol="+mpl$lab$util$Util.NFE(-1E-10)),
p[u]&&1E-10<Math.abs(b[u])&&z("========  force s/b zero at NC f["+u+"]="+mpl$lab$util$Util.NFE(b[u])+" tol="+mpl$lab$util$Util.NFE(1E-10));return mpl$lab$engine2D$ComputeForces.checkForceAccel(n,b,l,d)?!0:(mpl$lab$util$Util.DEBUG&&(z("checkForceAccel FAILED with tolerance="+mpl$lab$util$Util.NFE(n)),mpl$lab$engine2D$UtilEngine.printArray("force",b,mpl$lab$util$Util.NFE,
h),mpl$lab$engine2D$UtilEngine.printArray("accel",l,mpl$lab$util$Util.NFE,h)),!1)},T=n=>{goog.asserts.assert(!m[n]);const u=1+mpl$lab$engine2D$UtilEngine.countBoolean(m,h),q=S(u);for(let v=0,B=0;v<h;v++)if(m[v]||v==n){for(let C=0,w=0;C<h;C++)if(m[C]||C==n)q[B][w]=a[v][C],w++;q[B][u]=1;B++}n=mpl$lab$util$Util.newNumberArray(u);var r=mpl$lab$util$Util.newNumberArray(u);mpl$lab$engine2D$UtilEngine.matrixSolve3(q,
r,1E-9,n);r=mpl$lab$engine2D$UtilEngine.matrixIsSingular(q,u,n,.002);if(e&&mpl$lab$util$Util.DEBUG){const v=Array(u+1);for(let B=0;B<u+1;B++)v[B]=B;mpl$lab$engine2D$UtilEngine.printMatrixPermutation("Acc "+u+"x"+(u+1),q,n,v,mpl$lab$util$Util.NF7,u)}return r},Z=n=>{goog.asserts.assert(h<=b.length);goog.asserts.assert(!m[n]);goog.asserts.assert(!p[n]);e&&mpl$lab$util$Util.DEBUG&&z("drive_to_zero d="+
n+" a["+n+"]="+mpl$lab$util$Util.NFE(l[n])+" joint="+d[n]+" N="+h);if(!d[n]&&-1E-10<=l[n]||d[n]&&1E-10>=Math.abs(l[n]))return p[n]=!0,-1;if(T(n))if(t[n])mpl$lab$util$Util.DEBUG&&e&&z("SINGULAR MATRIX(1) IN REJECTS d="+n+" a[d]="+mpl$lab$util$Util.NFE(l[n]));else return mpl$lab$util$Util.DEBUG&&e&&z("SINGULAR MATRIX(1) DEFER d="+n+" f[d]="+mpl$lab$util$Util.NFE(b[n])+" a[d]="+mpl$lab$util$Util.NFE(l[n])),
n;for(var u=0;u<h;u++)x[u]=0,A[u]=0,J[u]=!1;u=1E-10;let q=0;for(;!d[n]&&l[n]<-u||d[n]&&Math.abs(l[n])>u;){if(e&&mpl$lab$util$Util.DEBUG){var r=T(n);z("Acc+d would be "+(r?"":"non-")+"singular, d="+n)}a:{r=n;for(var v=0;v<h;v++)A[v]=0;A[r]=1;goog.asserts.assert(!m[r]);v=mpl$lab$engine2D$UtilEngine.countBoolean(m,h);if(0<v){var B=S(v);for(let E=0,I=0;E<h;E++)if(m[E]){for(let G=0,N=0;G<h;G++)m[G]&&(B[I][N]=a[E][G],N++);B[I][v]=-a[E][r];I++}var C=mpl$lab$util$Util.newNumberArray(v),
w=mpl$lab$util$Util.newNumberArray(v),D=mpl$lab$engine2D$UtilEngine.matrixSolve3(B,C,1E-9,w);mpl$lab$util$Util.DEBUG&&mpl$lab$engine2D$UtilEngine.matrixIsSingular(B,v,w,.002)&&z("Acc is singular in fdirection d="+r);if(-1!=D){goog.asserts.fail();r=-999999;break a}for(let E=0,I=0;E<h;E++)m[E]&&(A[E]=C[I++])}for(r=0;r<h;r++)for(x[r]=0,v=0;v<h;v++)x[r]+=a[r][v]*A[v];r=-1}if(-1!=r)return r;e&&mpl$lab$util$Util.DEBUG&&
L("drive_to_zero after fdirection, d="+n);if(mpl$lab$util$Util.DEBUG)for(r=0;r<h;r++)m[r]&&1E-10<Math.abs(x[r])&&z("should be zero  delta_a["+r+"]="+mpl$lab$util$Util.NFE(x[r])),m[r]&&1E6<Math.abs(A[r])&&z("very large force  delta_f["+r+"]="+mpl$lab$util$Util.NFE(A[r]));r=n;v=mpl$lab$util$Util.POSITIVE_INFINITY;d[r]&&0<l[r]&&(v=mpl$lab$util$Util.NEGATIVE_INFINITY);B=-1;goog.asserts.assert(!m[r]&&
!p[r]);d[r]?(B=r,v=-l[r]/x[r]):0<x[r]&&(goog.asserts.assert(-1E-10>l[r]),B=r,v=-l[r]/x[r]);e&&mpl$lab$util$Util.DEBUG&&z("maxStep start with d="+r+" j="+B+" s="+mpl$lab$util$Util.NFE(v));C=0<v?1:-1;for(w=0;w<h;w++)!d[w]&&m[w]&&-1E-14>A[w]*C&&(D=-b[w]/A[w],0>D*C&&(2E-10<Math.abs(b[w])&&(e=!0),e&&mpl$lab$util$Util.DEBUG&&z("opposite step(1) i="+w+" "+mpl$lab$util$Util.NFE(D)+" delta_f[i]="+mpl$lab$util$Util.NFE(A[w])+
" f[i]="+mpl$lab$util$Util.NFE(b[w])),D=0),e&&mpl$lab$util$Util.DEBUG&&z("C["+w+"] sPrime="+mpl$lab$util$Util.NFE(D)),D*C<v*C&&(v=D,B=w));for(w=0;w<h;w++)p[w]&&(!d[w]&&-1E-14>x[w]*C||d[w]&&1E-14<Math.abs(x[w]*C))&&(D=-l[w]/x[w],0>D*C&&(2E-10<Math.abs(l[w])&&(e=!0,M("opposite step(2)",!0,w,r,-1)),e&&mpl$lab$util$Util.DEBUG&&z("opposite step(2) i="+w+" sPrime="+mpl$lab$util$Util.NFE(D)+
" delta_a[i]="+mpl$lab$util$Util.NFE(x[w])+" a[i]="+mpl$lab$util$Util.NFE(l[w])),D=0),e&&mpl$lab$util$Util.DEBUG&&z("NC["+w+"] sPrime="+mpl$lab$util$Util.NFE(D)),D*C<v*C&&(v=D,B=w));e&&mpl$lab$util$Util.DEBUG&&z("maxStep end with j="+B+" d="+r+" s="+mpl$lab$util$Util.NFE(v));K=v;r=B;if(0>r||1E5<Math.abs(K)){mpl$lab$util$Util.DEBUG&&
(-1<r?z("HUGE STEP j="+r+" d="+n+" stepSize="+mpl$lab$util$Util.NFE(K)):z("maxStep:  no step possible d="+n));if(1E-10>Math.abs(b[n]))return n;if(1E-5>Math.abs(l[n])){u=1.1*Math.abs(l[n]);continue}mpl$lab$util$Util.DEBUG&&L("maxStep failed but f[d]>0, d="+n+" j="+r,!1);return-2}goog.asserts.assert(-1<r);e&&mpl$lab$util$Util.DEBUG&&M(" maxStep",!1,r,n,q);1E-12>Math.abs(K)&&(e&&mpl$lab$util$Util.DEBUG&&M(" ZERO STEP",
!1,r,n,q),J[r]&&(mpl$lab$util$Util.DEBUG&&z("FLIP-FLOP DEFER j="+r+" f[j]="+mpl$lab$util$Util.NFE(b[r])+" a[j]="+mpl$lab$util$Util.NFE(l[r])+" while driving d="+n+" N="+h),goog.asserts.assert(1E-9>Math.abs(b[r])),m[r]=!1,p[r]=!1,t[r]=!0),J[r]=!0);for(v=0;v<h;v++)b[v]+=K*A[v],l[v]+=K*x[v];if(q++>10*h)if(mpl$lab$util$Util.DEBUG)e=!0,z("drive_to_zero() loopCtr="+q+" d="+n+" a[d]="+l[n]);else if(q>1E3*h)throw"drive_to_zero() loopCtr="+
q+" d="+n+" a[d]="+l[n];if(p[r]){goog.asserts.assert(1E-10>Math.abs(b[r]));C=n;w=r;goog.asserts.assert(!m[C]&&!m[w]);v=2+mpl$lab$engine2D$UtilEngine.countBoolean(m,h);B=S(v);for(let E=0,I=0;E<h;E++)if(m[E]||E==C||E==w){for(let G=0,N=0;G<h;G++)if(m[G]||G==C||G==w)B[I][N]=a[E][G],N++;B[I][v]=1;I++}C=mpl$lab$util$Util.newNumberArray(v);w=mpl$lab$util$Util.newNumberArray(v);mpl$lab$engine2D$UtilEngine.matrixSolve3(B,
w,1E-9,C);w=mpl$lab$engine2D$UtilEngine.matrixIsSingular(B,v,C,.002);if(e&&mpl$lab$util$Util.DEBUG&&w){D=Array(v+1);for(let E=0;E<v+1;E++)D[E]=E;mpl$lab$engine2D$UtilEngine.printMatrixPermutation("Acc "+v+"x"+(v+1),B,C,D,mpl$lab$util$Util.NF7,v)}if(v=w)if(t[r])mpl$lab$util$Util.DEBUG&&z("SINGULAR MATRIX(2) IN REJECTS NC j="+r+" a[j]="+mpl$lab$util$Util.NFE(l[r]));
else{e&&mpl$lab$util$Util.DEBUG&&z("SINGULAR MATRIX(2) DEFER NC j="+r+" f[j]="+mpl$lab$util$Util.NFE(b[r])+" a[j]="+mpl$lab$util$Util.NFE(l[r]));m[r]=!1;p[r]=!1;t[r]=!0;continue}}if(m[r])if(goog.asserts.assert(1E-10>=Math.abs(b[r])),1E-10<Math.abs(l[r])){if(1E-9<Math.abs(b[r]))if(v="moving C to NC but f[j]="+mpl$lab$util$Util.NFE(b[r]),mpl$lab$util$Util.DEBUG)L(v);else throw v;mpl$lab$util$Util.DEBUG&&
M(" redo C",!1,r,n,q);m[r]=!1;p[r]=!1;t[r]=!0}else m[r]=!1,p[r]=!0,goog.asserts.assert(!t[r]);else p[r]?(goog.asserts.assert(1E-10>=Math.abs(l[r])),1E-10<Math.abs(b[r])?(1E-9<Math.abs(l[r])&&z("WARNING moving NC to C but a[j]="+mpl$lab$util$Util.NFE(l[r])),mpl$lab$util$Util.DEBUG&&M(" redo NC",!1,r,n,q),m[r]=!1,p[r]=!1,t[r]=!0):(m[r]=!0,p[r]=!1,goog.asserts.assert(!t[r]))):r!=n&&goog.asserts.assert(t[r])}m[n]=1E-10<Math.abs(b[n]);p[n]=!m[n];goog.asserts.assert(1E-10<
Math.abs(b[n])&&m[n]||1E-10>=Math.abs(b[n])&&p[n]);e&&mpl$lab$util$Util.DEBUG&&(z("drive_to_zero finish d="+n+" a["+n+"]="+mpl$lab$util$Util.NFE(l[n])),L("drive_to_zero finish"));return-1};let Q=0,R=0;mpl$lab$util$Util.DEBUG&&(this.order=[]);mpl$lab$util$Util.DEBUG&&e&&(0<this.preOrder.length&&mpl$lab$engine2D$UtilEngine.printList("preOrder ",this.preOrder),L("compute_forces start",
!0));for(;;){R++;let n=-1;switch(this.nextContactPolicy){case mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID:n=U();break;case mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL:n=V();break;case mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM:n=W();break;case mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED:n=X();break;default:throw"";}mpl$lab$util$Util.DEBUG&&e&&
z("--------- in compute_forces, d="+n+" loopCtr="+R+" --------------");if(0>n)break;t[n]&&y.push(n);if(H(n)){mpl$lab$util$Util.DEBUG&&z("checkLoop STOP");break}mpl$lab$util$Util.DEBUG&&this.order.push(n);mpl$lab$util$Util.DEBUG&&R>2*h&&(e=!0,L("compute_forces loopCtr= "+R+" d="+n,!1));const u=Z(n);mpl$lab$util$Util.DEBUG&&e&&z("drive_to_zero returned "+(-1==u?"OK":u)+" d="+n+" N="+h);if(-1<u)goog.asserts.assert(u<
h),m[u]=!1,p[u]=!1,t[u]=!0,mpl$lab$util$Util.DEBUG&&this.order.push(0==u?-9999:-u);else{if(-1>u)return mpl$lab$util$Util.DEBUG&&z("compute_forces general error "+u),u;goog.asserts.assert(-1==u);y.length=0;t[n]&&(mpl$lab$util$Util.DEBUG&&e&&M(" deferral solved ",!0,n,-1,-1),Q++,t[n]=!1)}}mpl$lab$util$Util.DEBUG&&e&&0<Q&&(0<Q&&z("compute_forces rejects solved "+Q),L("end of compute_forces"));return void 0===
g||Y(g)?-1:-2}static maxAccel(a,b,c){let d=0;for(let e=0;e<c;e++)(b[e]||!b[e]&&0>a[e])&&Math.abs(a[e])>d&&(d=Math.abs(a[e]));return d}static checkForceAccel(a,b,c,d){mpl$lab$util$Util.DEBUG&&(mpl$lab$engine2D$UtilEngine.checkArrayNaN(c),mpl$lab$engine2D$UtilEngine.checkArrayNaN(b));if(c.length<b.length)throw"";let e=!0;for(let f=0;f<b.length;f++)d[f]||1E-10<Math.abs(b[f])?Math.abs(c[f])>a&&(e=!1,mpl$lab$util$Util.DEBUG&&
console.log("checkForceAccel i="+f+" accel[i]="+mpl$lab$util$Util.NFE(c[f])+" force[i]="+mpl$lab$util$Util.NFE(b[f]))):c[f]<-a&&(e=!1,mpl$lab$util$Util.DEBUG&&console.log("checkForceAccel i="+f+" accel[i]="+mpl$lab$util$Util.NFE(c[f])+" force[i]="+mpl$lab$util$Util.NFE(b[f])));return e}}mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL=1;
mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM=2;mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED=3;mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID=4;const module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$engine2D$test$UtilEngineTest{static test(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testNumericalMath);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testNumericalBug1);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRandomInts);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix3);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix4);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix5);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix6);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix7);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix8);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix9);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testRedundantMatrix10);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix11);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix11_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix12);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix12_CF);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix13);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix14);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix15_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix16_CF);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix17_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix18_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix19_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix20_CF);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix21_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix22_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix23_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix24_CF);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix25_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix26_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix27_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testLinesIntersect);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix28_CF);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_schedule(mpl$lab$engine2D$test$UtilEngineTest.testMatrix29_CF)}static testNumericalMath(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testNumericalMath");let a=1/Number.POSITIVE_INFINITY;
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(0,a);a=1/Number.NEGATIVE_INFINITY;module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(0,a);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isFinite(1/0));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isFinite(Number.POSITIVE_INFINITY));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isFinite(Number.NEGATIVE_INFINITY));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isFinite(Number.NaN));
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(isFinite(1));a=1*Number.NaN;module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(isNaN(a));a=1/Number.NaN;module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(isNaN(a));a=1+Number.NaN;module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(isNaN(a));a=1-Number.NaN;module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(isNaN(a));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isNaN(Number.POSITIVE_INFINITY));
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isNaN(Number.NEGATIVE_INFINITY));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isNaN(Number.MAX_VALUE));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!isNaN(-Number.MAX_VALUE));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(-Number.MAX_VALUE<-Number.MAX_VALUE/10);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(0==6.9E47+
1-6.9E47);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!0);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(.9999937675535157==Math.cos(.0035305673646834944));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(.0035305600299897267==Math.sin(.0035305673646834944))}static testNumericalBug1(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testNumericalBug1");module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(!0)}static testRandomInts(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRandomInts");var a=new mpl$lab$util$RandomLCG(6473275),b=a.randomInts(100);a=a.randomInts(100);var c=!0;for(let d=0;d<b.length;d++)if(b[d]!=a[d]){c=!1;break}module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertFalse(c);
a=Array(b.length);for(c=0;c<a.length;c++)a[c]=!1;for(c=0;c<b.length;c++)a[b[c]]=!0;for(b=0;b<a.length;b++)module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(a[b])}static testRedundantMatrix3(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRedundantMatrix3");var a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(17,[2.7831932,0,0,0,0,0,0,0,0,0,-.1081028,
-.108503,0,0,0,0,0,0,3.7002506,-1.6999999,0,0,0,0,0,0,0,0,0,1.3237729,-3.7002753,.8981675,0,0,0,-1.6999999,3.6997493,0,0,0,0,0,0,0,0,0,-3.3235572,1.7000248,-.8983626,0,0,0,0,0,3.7000005,-1.7,0,0,0,-.8999994,.9000008,0,.7809827,0,0,0,0,0,0,0,0,-1.7,3.6999995,0,0,0,.8999992,-.9000006,0,-.7809831,0,0,0,0,0,0,0,0,0,0,3.7009455,-.898738,0,0,0,0,0,0,0,-.8989748,0,-3.0212405,0,0,0,0,0,-.898738,1.2990545,0,0,0,0,0,0,0,-.7008203,0,.672041,0,0,0,0,0,0,0,1.0151569,0,0,0,0,0,0,0,-.2315596,-.160466,0,0,0,-.8999994,
.8999992,0,0,0,1.2999995,.7,0,-1.2603274,0,0,0,0,0,0,0,0,.9000008,-.9000006,0,0,0,.7,1.3000005,0,-.7396722,0,0,0,0,0,-.1081028,0,0,0,0,0,0,0,0,0,2.2196543,-.9934408,-.7583897,.652862,0,-.9869682,0,-.108503,0,0,.7809827,-.7809831,0,0,0,-1.2603274,-.7396722,-.9934408,2.2325038,0,0,0,0,0,0,1.3237729,-3.3235572,0,0,0,0,0,0,0,-.7583897,0,6.6994846,-2.6473275,.7730619,1.22526,0,0,-3.7002753,1.7000248,0,0,0,0,0,0,0,.652862,0,-2.6473275,6.7000807,-.8984818,-2.7732666,0,0,.8981675,-.8983626,0,0,-.8989748,
-.7008203,0,0,0,0,0,.7730619,-.8984818,2.5981493,0,.6732344,0,0,0,0,0,0,0,-.2315596,0,0,-.9869682,0,1.22526,-2.7732666,0,5.2209788,-.6834598,0,0,0,0,0,-3.0212405,.672041,-.160466,0,0,0,0,0,0,.6732344,-.6834598,5.2225903]);const b=[-0,-0,-0,-0,-0,1.6999992,-.8984231,-0,-0,-0,-0,-0,-0,-0,-.8989383,-0,-1.0205326],c=Array(17);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));a=mpl$lab$engine2D$UtilEngine.matrixSolveError(a,
c,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-6>a)}static testRedundantMatrix4(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRedundantMatrix4");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(15,[2.7831878,0,0,0,0,0,0,0,0,0,-.1081068,0,0,0,0,0,3.7002506,-1.6999999,0,0,0,0,0,0,0,0,1.3237512,0,0,0,0,-1.6999999,3.6997493,0,0,0,0,0,0,
0,0,-3.3235354,0,0,0,0,0,0,3.6999869,-1.7,0,0,0,-.9000175,.8999782,0,0,0,0,0,0,0,0,-1.7,3.7000131,0,0,0,.9000218,-.8999825,0,0,0,0,0,0,0,0,0,0,3.6990532,-1.6999992,.8984231,0,0,0,0,-3.699724,0,1.020529,0,0,0,0,0,-1.6999992,3.7009455,-.898738,0,0,0,0,1.7006703,0,-3.0212368,0,0,0,0,0,.8984231,-.898738,1.2990545,0,0,0,0,-.8989525,0,.6720397,0,0,0,-.9000175,.9000218,0,0,0,1.3000131,.7,0,0,0,0,0,0,0,0,.8999782,-.8999825,0,0,0,.7,1.2999869,0,0,0,0,0,-.1081068,0,0,0,0,0,0,0,0,0,2.2196496,-.7583806,.6578898,
-.9869618,0,0,1.3237512,-3.3235354,0,0,0,0,0,0,0,-.7583806,6.6994471,-1.3414554,1.2252569,0,0,0,0,0,0,-3.699724,1.7006703,-.8989525,0,0,.6578898,-1.3414554,6.7311444,-2.7875288,-1.0210311,0,0,0,0,0,0,0,0,0,0,-.9869618,1.2252569,-2.7875288,5.2209376,-.6834391,0,0,0,0,0,1.020529,-3.0212368,.6720397,0,0,0,0,-1.0210311,-.6834391,5.2225786]),b=[.9438315,-1.2617722,3.127175,-0,-0,-0,-0,-0,-0,-0,-.4735505,-2.8214364,-0,-0,-0],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,
mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b))}static testRedundantMatrix5(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRedundantMatrix5");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray2(15,
[2.7795861,0,0,0,0,0,0,0,-.9528866,.1061772,-.1117673,0,0,0,0,-0,0,3.700137,-1.7,0,0,0,0,0,1.259836,0,0,1.3130398,.8986781,-.9003413,0,-0,0,-1.7,3.6998629,0,0,0,0,0,-3.1244488,0,0,-3.3129224,-.8987848,.9000124,0,-0,0,0,0,1.2997451,.7000001,0,0,0,0,0,0,0,-.7001864,-1.2994495,0,-.5886146,0,0,0,.7000001,1.300255,0,0,0,0,0,0,0,-1.3000685,-.7002959,0,.5893983,0,0,0,0,0,1.1409586,0,0,0,0,0,0,0,0,.05738,.4230757,0,0,0,0,0,0,1.3002983,.7000001,0,0,-1.2597276,0,0,0,0,-0,0,0,0,0,0,0,.7000001,1.2997018,0,0,
-.7405305,0,0,0,0,-0,-.9528866,1.259836,-3.1244488,0,0,0,0,0,5.7769954,-.0846539,-.2434525,2.8103096,.3682292,-1.0922516,0,-0,.1061772,0,0,0,0,0,0,0,-.0846539,2.2547865,-1.0032669,-.5420242,0,0,-1.0623076,-0,-.1117673,0,0,0,0,0,-1.2597276,-.7405305,-.2434525,-1.0032669,2.2316368,0,0,0,0,-0,0,1.3130398,-3.3129224,0,0,0,0,0,2.8103096,-.5420242,0,6.3232267,.769907,-.7710797,.5119813,-0,0,.8986781,-.8987848,-.7001864,-1.3000685,0,0,0,.3682292,0,0,.769907,2.599037,1.4008461,0,-.5889562,0,-.9003413,.9000124,
-1.2994495,-.7002959,0,0,0,-1.0922516,0,0,-.7710797,1.4008461,2.5992721,0,.5881756,0,0,0,0,0,.05738,0,0,0,-1.0623076,0,.5119813,0,0,5.1198566,.8590623]),b=[0,0,0,-.58861458,.58939835,.42307566,0,0,0,0,0,0,-.58895623,.58817558,.85906227],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,
c,b))}static testRedundantMatrix6(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRedundantMatrix6");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray2(16,[3.70010194720032,-1.6999999903751832,0,0,0,0,0,0,-.8998890165420942,-1.77200233034648,.4940241310921793,0,0,0,0,0,-0,-1.6999999903751832,3.6998980373999726,0,0,0,0,0,0,.8998844014814961,-.2280268175322451,-.4941187576462762,
0,0,0,0,0,-0,0,0,3.699973570417178,-1.6999999993532446,0,0,0,0,-.8999269792050215,0,0,-.2100233451942024,1.6998040445570157,.8996350911077936,-.8981809267936222,-3.7003851855598255,-0,0,0,-1.6999999993532446,3.7000264285480133,0,0,0,0,.8999064224498725,0,0,-1.7899843873483143,-3.6998304363686154,-.8996145314954714,.8991920002730466,1.7004118020378045,-0,0,0,0,0,1.8560339794549126,0,0,-.5701678615737991,0,0,-.570026388698177,0,0,0,0,0,-0,0,0,0,0,0,3.700901446135342,.9015034147840525,0,0,0,0,0,0,.9014490882856842,
-.9002846442953208,0,-1.4714573224953436,0,0,0,0,0,.9015034147840525,1.3009026516055198,0,0,0,0,0,0,-.699110580504684,-1.3003284570816995,0,-.8254209463791108,0,0,0,0,-.5701678615737991,0,0,1.3797645866565293,0,0,-.6202919142400936,0,0,0,0,0,-0,-.8998890165420942,.899884401481496,-.8999269792050214,.8999064224498725,0,0,0,0,2.5998689482432864,.2573388194414124,-1.1646697500517862,-.2633024682958794,-.8996527828010016,-1.299847182349487,-.700465452971045,.9004925856654025,-0,-1.77200233034648,-.228026817532245,
0,0,0,0,0,0,.2573388194414125,4.920286736997493,-.1412655952100423,-1.6999620864007672,.2100875887288783,0,0,0,-0,.4940241310921792,-.4941187576462762,0,0,-.5700263886981771,0,0,-.6202919142400936,-1.1646697500517862,-.1412655952100423,2.4700614392928273,0,0,0,0,0,-0,0,0,-.2100233451942024,-1.789984387348314,0,0,0,0,-.2633024682958795,-1.6999620864007672,0,4.931502057871965,3.5799573571091226,.2632170656885648,-.2634289743638025,.2099027871401842,-0,0,0,1.6998040445570155,-3.699830436368615,0,0,0,
0,-.8996527828010015,.2100875887288783,0,3.579957357109123,4.930769130273162,.899360913032752,-.899315092283965,-1.700215736685025,-0,0,0,.8996350911077937,-.8996145314954715,0,.9014490882856842,-.699110580504684,0,-1.299847182349487,0,0,.2632170656885648,.899360913032752,2.600626114152888,1.400247113479141,-.9002006530594637,-.8243970766288274,0,0,-.8981809267936223,.8991920002730466,0,-.9002846442953208,-1.3003284570816998,0,-.7004654529710449,0,0,-.2634289743638025,-.8993150922839647,1.4002471134791408,
2.5988805570349998,.8978895800445713,.8233460071965841,0,0,-3.7003851855598255,1.7004118020378045,0,0,0,0,.9004925856654026,0,0,.209902787140184,-1.700215736685026,-.9002006530594638,.8978895800445711,6.995334564518396,1.4897967319965286]),b=[-0,-0,-0,-0,-0,-1.4714573224953436,-.8254209463791108,-0,-0,-0,-0,-0,-0,-.8243970766288274,.8233460071965841,1.4897967319965286],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,mpl$lab$engine2D$UtilEngine.matrixSolve4(a,
c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b))}static testRedundantMatrix7(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRedundantMatrix7");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray2(17,[3.6974923776779236,-1.6999941991396543,0,0,0,0,0,0,-.8990570561135972,
1.6967629614324449,.4759223607581712,0,0,0,0,0,0,-0,-1.6999941991396543,3.702498340945523,0,0,0,0,0,0,.8971085142255755,-3.6992634550637478,-.4735813775528715,0,0,0,0,0,0,-0,0,0,3.700075274798905,-1.699999994752845,0,0,0,0,-.9022627888809575,0,0,-2.5307148787240794,1.7008008141769886,.8972848325079772,-.9027032551922569,-3.6032530346411638,-3.7013647914671264,-0,0,0,-1.699999994752845,3.6999247168056475,0,0,0,0,.9050186877672243,0,0,.5306722030382771,-3.700724862888707,-.897343457723333,.9011625236120934,
1.603180455818019,1.7012917888300407,-0,0,0,0,0,1.796701636285715,0,0,-.5819024604742635,0,0,-.5852841300249704,0,0,0,0,0,0,-0,0,0,0,0,0,3.698634595972345,-1.699998277252286,0,0,0,0,0,0,.8978813629202703,-.8963173876816264,0,0,-1.5863768281323543,0,0,0,0,0,-1.699998277252286,3.701362647631313,0,0,0,0,0,0,-.8982514182783193,.8982862848104093,0,0,3.587683208621223,0,0,0,0,-.5819024604742635,0,0,1.4250154111451687,0,0,-.5735293269416031,0,0,0,0,0,0,-0,-.8990570561135973,.8971085142255755,-.9022627888809572,
.9050186877672242,0,0,0,0,2.601155864435039,-.8952262621112089,-1.1579138167955763,.5109464763546872,-.9060934532417149,-1.3003137638103646,-.6981393170241862,.8699004252221901,.9042157318944608,-0,1.6967629614324444,-3.6992634550637473,0,0,0,0,0,0,-.8952262621112088,5.5839510553705125,.4722060356820073,-.5479088073086268,1.8777918059346745,0,0,0,0,-0,.4759223607581712,-.4735813775528715,0,0,-.5852841300249705,0,0,-.5735293269416031,-1.157913816795576,.4722060356820072,2.5114066713152527,0,0,0,0,
0,0,-0,0,0,-2.5307148787240794,.5306722030382771,0,0,0,0,.5109464763546872,-.5479088073086268,0,5.566256838098088,-1.0613822390226884,-.5087085068415537,.5120429523697037,2.4758248386689456,2.5314454885431403,-0,0,0,1.7008008141769888,-3.700724862888707,0,0,0,0,-.9060934532417146,1.8777918059346745,0,-1.0613822390226884,5.569307027992517,.898416348738905,-.9006230649950305,-1.6039526040040066,-1.7020942181217833,-0,0,0,.8972848325079772,-.897343457723333,0,.8978813629202704,-.8982514182783193,0,-1.3003137638103643,
0,0,-.5087085068415536,.8984163487389049,2.5969245857417023,1.4017942188199568,-.8651493379192831,-.8992347511892806,-.8612070985226529,0,0,-.902703255192257,.9011625236120935,0,-.8963173876816264,.8982862848104092,0,-.6981393170241863,0,0,.5120429523697035,-.9006230649950305,1.4017942188199566,2.599494068924456,.8703184910144363,.9016134131018751,.8597585625723888,0,0,-3.6032530346411638,1.6031804558180192,0,0,0,0,.8699004252221901,0,0,2.4758248386689456,-1.6039526040040066,-.8651493379192831,.8703184910144361,
7.207235013004815,7.206432607758408,1.6993518040000097,0,0,-3.7013647914671264,1.7012917888300407,0,0,0,0,.9042157318944609,0,0,2.5314454885431403,-1.7020942181217824,-.8992347511892808,.9016134131018749,7.206432607758408,7.212573489731945,1.6038855336843656]),b=[-0,-0,-0,-0,-0,-1.5863768281323543,3.587683208621223,-0,-0,-0,-0,-0,-0,-.8612070985226529,.8597585625723888,1.6993518040000097,1.6038855336843656],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,
mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b))}static testRedundantMatrix8(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRedundantMatrix8");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray2(17,
[3.699900499932072,-1.6999999908344403,0,0,0,0,0,0,0,.899839223244678,1.6986878768332623,.4884437738078804,0,0,0,0,0,-0,-1.6999999908344403,3.7000994854030322,0,0,0,0,0,0,0,-.8999829316972552,-3.6987855127777705,-.4883512233620975,0,0,0,0,0,-0,0,0,3.6992772903045075,-1.6999995168973068,0,0,0,0,0,.8987021612700457,0,0,-3.612111392769896,1.7004879536749893,-.8973474004852573,.899710848795327,0,-0,0,0,-1.6999995168973068,3.700721936731184,0,0,0,0,0,-.8988320583976245,0,0,1.6128104580538527,-3.7012086937147357,
.8983901861855866,-.8994570533367248,0,-0,0,0,0,0,1.8489601082427216,0,0,0,-.5717040051592734,0,0,-.5718416346952379,0,0,0,0,0,-0,0,0,0,0,0,3.7004448660305065,-1.6999998166330208,.9007416878734811,0,0,0,0,0,0,-.9008914213976422,.8976983513724901,0,-1.597471214805085,0,0,0,0,0,-1.6999998166330208,3.6995548405823264,-.9005932402785974,0,0,0,0,0,0,.8999404338481054,-.8980448231901583,0,3.5970430749613307,0,0,0,0,0,.9007416878734811,-.9005932402785974,1.3004451594176714,0,0,0,0,0,0,-1.3003611712289813,
-.7004874601754172,0,-.8666417290085902,0,0,0,0,-.5717040051592734,0,0,0,1.3849950855661501,0,0,-.6149494531304793,0,0,0,0,0,-0,.899839223244678,-.8999829316972552,.8987021612700457,-.8988320583976245,0,0,0,0,0,2.5991194065292063,.9008907449048578,-.8372169183227627,-.8700840954039787,.8976489169986704,-1.2988795514584048,-.7005493624121167,0,-0,1.698687876833262,-3.6987855127777705,0,0,0,0,0,0,0,.9008907449048578,7.261685160151165,.486768258562626,-1.6304009530550603,3.5459091668483653,0,0,.8690611265530938,
-0,.4884437738078804,-.4883512233620975,0,0,-.5718416346952377,0,0,0,-.6149494531304792,-.8372169183227628,.4867682585626261,2.4734512417560612,0,0,0,0,0,-0,0,0,-3.612111392769896,1.6128104580538527,0,0,0,0,0,-.8700840954039787,-1.6304009530550598,0,7.226058811302897,-3.224909135077487,.8687583394314976,-.8702638273768061,-.8905498215173011,-0,0,0,1.7004879536749897,-3.7012086937147353,0,0,0,0,0,.8976489169986706,3.5459091668483658,0,-3.2249091350774877,7.2294351416591915,-.89720688225137,.9009649618255119,
.8628582206819849,-0,0,0,-.8973474004852572,.8983901861855869,0,-.9008914213976424,.8999404338481053,-1.3003611712289813,0,-1.2988795514584046,0,0,.8687583394314975,-.8972068822513702,2.5988582933845,1.4014198228283232,0,.8659984735204442,0,0,.899710848795327,-.8994570533367248,0,.8976983513724901,-.8980448231901583,-.7004874601754172,0,-.7005493624121167,0,0,-.8702638273768061,.9009649618255118,1.4014198228283234,2.598305500687045,0,-.8637050139968621,0,0,0,0,0,0,0,0,0,0,.8690611265530939,0,-.890549821517301,
.8628582206819851,0,0,2.5969142049592207,-.9025189416848407]),b=[-0,-0,-0,-0,-0,-1.597471214805085,3.5970430749613307,-.8666417290085902,-0,-0,-0,-0,-0,-0,.8659984735204442,-.8637050139968621,-.9025189416848407],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(3E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,
c,b))}static testRedundantMatrix9(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testRedundantMatrix9");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray2(18,[2.884788914934762,-.4908891516982347,-.5392791553437065,.4194142399376012,-.4193991545308258,-2.2582186908325808,.2582214925726989,0,0,0,0,0,0,0,0,0,0,0,-0,-.4908891516982346,3.0140128092800715,.6046112861037997,0,
0,0,0,0,0,0,0,.8217046091839957,-2.422668819683555,0,0,0,0,0,-0,-.5392791553437064,.6046112861037997,1.9744325339033397,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0,.4194142399376012,0,0,1.3000060122246775,.7000000000334687,-.9000080162437885,.9000100203298371,0,0,0,0,0,0,0,0,0,0,0,-0,-.4193991545308258,0,0,.7000000000334687,1.2999939878288733,.8999899796701634,-.8999919837160493,0,0,0,0,0,0,0,0,0,0,0,-0,-2.2582186908325808,0,0,-.9000080162437885,.8999899796701634,3.699993987775323,-1.6999999999665305,0,0,0,
0,0,0,0,0,0,0,0,-0,.2582214925726989,0,0,.9000100203298371,-.8999919837160493,-1.6999999999665305,3.700006012171126,0,0,0,0,0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,7.37084881914793,7.371489947302713,1.6858059538351502,-3.6856779273755262,0,0,-1.6999031490637535,3.6673335016578616,0,0,0,-0,0,0,0,0,0,0,0,7.371489947302715,7.372281994025386,1.700419192053728,-3.7002903698644425,0,0,-1.6860056368075482,3.653603681068196,0,0,0,-0,0,0,0,0,0,0,0,1.6858059538351506,1.7004191920537273,3.7001286887164238,-1.6999999846630143,
0,0,0,0,0,0,0,-0,0,0,0,0,0,0,0,-3.6856779273755262,-3.7002903698644425,-1.6999999846630143,3.699871286744399,0,0,0,0,0,0,0,-0,0,.8217046091839959,0,0,0,0,0,0,0,0,0,3.700123814623821,-1.699999985802894,0,0,0,0,0,-0,0,-2.4226688196835555,0,0,0,0,0,0,0,0,0,-1.699999985802894,3.69987616266081,0,0,0,0,0,-0,0,0,0,0,0,0,0,-1.6999031490637526,-1.6860056368075482,0,0,0,0,7.336262866457449,-3.3353639884336843,-3.6677113531138694,1.6676478225183875,.8890955083561018,.8893575501879827,0,0,0,0,0,0,0,3.667333501657861,
3.6536036810681964,0,0,0,0,-3.3353639884336843,7.33523865461852,1.6997735901581388,-3.699709190430424,-.9001402951786914,-.8996872983508283,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.6677113531138685,1.6997735901581383,3.70006429853253,-1.6999999961715782,-.8999142622425873,-.9001071693254477,0,0,0,0,0,0,0,0,0,0,0,0,0,1.6676478225183875,-3.699709190430424,-1.6999999961715782,3.699935695341994,.8998928306745508,.9000857331633055,0,0,0,0,0,0,0,0,0,0,0,0,0,.8890955083561018,-.9001402951786913,-.8999142622425873,.8998928306745508,
1.2999357014674675,-.7000000038284219]),b=[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,.8893575501879827,-.8996872983508283,-.9001071693254477,.9000857331633055,-.7000000038284219],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b))}static testRedundantMatrix10(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testRedundantMatrix10");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray2(15,[2.1865166979865847,-.0215396751014439,.0220271511411966,-.0217713199944046,-1.05975801523E-4,-.9891708035070803,-.3427241601957276,.185686498254954,-.1861364526269131,0,0,0,0,0,0,-0,-.0215396751014439,7.073409102180113,-1.2757615772836437,1.3864623270581653,-1.0001278257247672,-1.1928044457508398,0,-1.4567128591697207,0,0,0,0,0,0,0,-0,.0220271511411966,-1.275761577283644,4.692326605078205,
-3.3996865896554183,-.999871426117676,1.199260982087394,0,1.8094851379510586,0,0,0,0,0,0,0,-0,-.0217713199944046,1.3864623270581653,-3.3996865896554183,3.4002571063355496,.9998714296149616,-1.1998071272051771,0,0,0,0,0,0,0,0,0,-0,-1.05975801523E-4,-1.0001278257247672,-.9998714261176759,.9998714296149616,1.0000000068869055,6.42679752554E-5,0,0,0,0,0,0,0,0,0,-0,-.9891708035070803,-1.1928044457508395,1.199260982087394,-1.1998071272051771,6.42679752554E-5,1.599742893664449,0,0,0,0,0,0,0,0,0,-0,-.3427241601957276,
0,0,0,0,0,3.6612541633170093,1.02284214857883,-1.0231469466309315,-.8659928039519024,-.3836325564728285,.2137152813805886,.7863593295026904,0,0,-0,.185686498254954,-1.4567128591697205,1.8094851379510586,0,0,0,1.02284214857883,4.42058758474978,-1.185977118584385,0,0,0,0,0,0,-0,-.186136452626913,0,0,0,0,0,-1.0231469466309315,-1.1859771185843848,1.1861660481387295,0,0,0,0,0,0,-0,0,0,0,0,0,0,-.8659928039519025,0,0,2.0741293629805355,-1.98043803167E-5,-2.30484399315E-5,2.90515476051E-5,-.2667699659857678,
.4001454472255172,1.266767365854981,0,0,0,0,0,0,-.3836325564728284,0,0,-1.98043803167E-5,2.070790778802066,-1.1741724041475443,-.8258110677273118,0,0,-0,0,0,0,0,0,0,.2137152813805886,0,0,-2.30484399315E-5,-1.1741724041475443,1.428530763618738,.5714285727147754,0,0,-0,0,0,0,0,0,0,.7863593295026905,0,0,2.90515476051E-5,-.8258110677273117,.5714285727147754,1.4286120948103227,0,0,-0,0,0,0,0,0,0,0,0,0,-.2667699659857678,0,0,0,1.9600057606104482,-.4400014401310075,-.960007200767381,0,0,0,0,0,0,0,0,0,.4001454472255172,
0,0,0,-.4400014401310075,3.1599913590735254,1.4400036003556043]),b=[-0,-0,-0,-0,-0,-0,-0,-0,-0,1.266767365854981,-0,-0,-0,-.960007200767381,1.4400036003556043],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>
mpl$lab$engine2D$UtilEngine.matrixSolveError(a,[.953361,830.42,-2733.38,-3558.21,1655.25,.151034,.602682,1902.96,1903.33,.760965,6.5475E-5,.0506631,-.352014,-.315417,.31542],b))}static makeMatrix11(){return mpl$lab$engine2D$UtilEngine.newMatrixFromArray(18,[5.24025764299373,0,0,0,0,0,0,0,0,-2.615501943799582,0,0,0,0,0,0,0,0,0,5.368078595488846,0,0,0,0,-.8140299898490666,0,0,0,0,0,0,0,-3.5581732469449725,-5.351642023470751,0,0,0,0,12.926430987309192,
0,0,-2.9080986474212107,0,0,0,0,0,0,2.9077839895418336,-12.457053551786112,0,0,0,0,0,0,0,3.295258459836762,-.8233302487854683,0,0,0,0,0,-.1356273890752759,-2.0067350237542856,0,0,0,-1.0958532935141885,0,0,0,0,0,-.8233302487854683,3.5455333071585935,0,0,0,0,0,-2.528284925650998,-.543475435622451,0,0,0,1.1527376718703763,0,0,0,0,-2.9080986474212107,0,0,5.163618213883765,0,0,0,0,0,0,-5.163456961776429,2.6688319464879373,0,0,0,0,0,-.8140299898490668,0,0,0,0,1.6030499072924265,0,0,0,0,0,0,0,-.6987803646549116,
.8158420083845184,0,0,0,0,0,0,0,0,0,1.7100660050124357,.6622698927955679,0,0,0,0,0,-.1477564670525178,0,.1654324873827444,.4724789285454851,0,0,0,0,0,0,0,.6622698927955684,5.986873128230714,0,0,0,0,0,.768301536450459,0,-.8581260680960394,-2.4184491643374897,-2.6155019437995817,0,0,0,0,0,0,0,0,5.232649230604096,-3.3904133341653226,-1.4047668997805558,0,0,0,0,0,0,0,0,0,-.1356273890752764,-2.528284925650998,0,0,0,0,-3.3904133341653226,5.417014570019364,2.246782622915908,0,0,0,-.6338896470103896,0,0,
0,0,0,-2.006735023754286,-.5434754356224509,0,0,0,0,-1.4047668997805556,2.2467826229159082,4.52255470493446,0,0,0,.38766312755854,0,0,0,0,2.9077839895418345,0,0,-5.163456961776431,0,0,0,0,0,0,19.93778960237561,-11.98533235674039,0,0,4.586486098670053,-.783760826162637,0,0,-12.457053551786112,0,0,2.6688319464879378,0,0,0,0,0,0,-11.98533235674039,41.083866064650316,0,0,-7.2909666493724625,1.267080760094386,0,-3.558173246944972,0,0,0,0,-.6987803646549116,-.1477564670525178,.7683015364504587,0,0,0,0,
0,6.317881827340059,3.538113132531078,-1.6849204236961082,-1.9533622957308638,0,-5.35164202347075,0,-1.095853293514188,1.1527376718703768,0,.8158420083845185,0,0,0,-.6338896470103897,.38766312755854,0,0,3.5381131325310786,7.227702718243339,0,0,0,0,0,0,0,0,0,.1654324873827442,-.8581260680960403,0,0,0,4.586486098670054,-7.290966649372462,-1.6849204236961084,0,9.446200978580713,7.098240229588594,0,0,0,0,0,0,0,.472478928545485,-2.4184491643374892,0,0,0,-.783760826162637,1.2670807600943856,-1.9533622957308636,
0,7.098240229588593,8.402282686262154])}static makeBVector11(){return[-0,-0,-1.996325979911138,-0,-0,1.010768833586209,-0,-1.157020417054051,5.897095231071411,-0,-0,-0,-1.012369782071089,1.9060728169775671,2.5518372298966074,-0,-2.670838140621714,-4.737977997368031]}static testMatrix11(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix11");const a=mpl$lab$engine2D$test$UtilEngineTest.makeMatrix11(),
b=mpl$lab$engine2D$test$UtilEngineTest.makeBVector11(),c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,
[-1.991727687322564E-12,-9.246912067359662E-8,4334.209315080085,-1.3477624064693302E-10,1.2793529321355117E-10,-4334.209315079608,-9.746529446177438E-8,5871.395512421495,-5871.3955124216745,-3.9905021906013385E-12,-4.336678988689717E-12,-6.893644138152156E-13,-4466.831871049843,4466.83316715344,-1.1645531194914052E-7,-4.995960709752079E-10,20038.369144775315,-20039.369144986693],b))}static testMatrix11_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix11_CF");const a=mpl$lab$engine2D$test$UtilEngineTest.makeMatrix11(),b=a.length,c=mpl$lab$engine2D$test$UtilEngineTest.makeBVector11(),d=Array(b);for(var e=0;e<b;e++)d[e]=!1;e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let g=0;20>=g;g++){const h=Array(b);switch(g){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);
break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=e.compute_forces(a,h,c,d,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(c.length==b&&h.length==b);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,
h);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,h,f,d));f=mpl$lab$engine2D$ComputeForces.maxAccel(f,d,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>f);mpl$lab$engine2D$UtilEngine.maxSize(h)}}static makeMatrix12(){return mpl$lab$engine2D$UtilEngine.newMatrixFromArray(43,
[3.040694642274648,0,0,.01709055530317863,0,0,0,0,0,0,0,0,0,0,-.17854656770013483,0,0,0,0,0,0,0,-.5950357471205004,0,-3.0390160802451973,0,0,0,0,-.6937593926545077,0,-.7269641453882664,0,0,0,0,0,0,0,0,0,0,-3.1797929927395687,0,7.297331768240345,0,0,0,0,.1009238030787658,0,0,0,0,0,0,0,0,0,0,-1.568314678505832,0,-.10048587507901019,0,0,0,0,1.5853009221352987,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.066366738615902,0,0,0,0,0,.4552680563439062,0,0,0,0,0,0,0,0,0,-3.0642241163106276,0,0,0,0,.09503934242557888,
0,0,0,0,-.1009265950846363,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.017090555303178684,0,0,1.1508469586264067,0,0,0,0,0,0,0,0,0,0,.0669493454165061,0,0,0,0,0,0,0,-.9341351154149053,0,-.017719778786138424,0,0,0,0,.2612962897178553,0,.27374702729784406,0,0,0,0,0,0,0,0,0,0,1.1934806736185546,0,0,0,0,8.840639554812451,0,0,0,0,-5.3572016978301225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.1259424433001555,3.108758842749938,0,0,0,0,0,0,0,-3.250556607772113,0,0,0,0,0,0,0,0,0,0,22.058886815868604,0,0,0,0,0,0,0,0,0,-6.464381309831186,
0,0,0,0,0,0,0,4.789334814930731,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.10092380307876603,0,0,0,0,2.2553199964873785,0,0,0,0,0,0,0,0,0,0,.47817205924076,0,-2.255450735136913,0,0,0,0,-.4733027306454093,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.488359286795465,0,0,0,3.54006689731105,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.761565154387857,0,0,0,0,0,-1.933318950801275,0,0,0,0,0,0,.45526805634390655,0,0,0,0,0,17.738846312007052,0,0,0,0,0,0,0,0,0,-.4690240028932784,0,0,0,0,-.664212826758684,
0,0,0,0,.7031821666517104,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5.357201697830122,0,0,0,0,15.8749000962889,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.661369253724779,-4.656851191304718,0,0,0,0,0,0,0,-3.0024583584248425,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.7437256099151983,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.039110689309283,0,-.39262003237223553,0,0,0,-2.3779584617937854,0,0,-3.0471739762186965,0,0,0,0,0,0,0,0,3.5400668973110494,0,0,0,4.857084679467252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.4829049808286756,
0,0,0,0,0,2.648664273023668,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10.541756357661491,-3.226464761717754,0,0,0,-2.6758727430131564,0,0,-7.967716501119471,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.233761670478102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.2264647617177533,6.710992278759576,0,0,0,1.9147461979004228,0,0,1.3686374686695997,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6.716216492400616,0,0,0,-.178546567700135,0,0,.06694934541650613,0,0,0,0,0,0,0,0,0,0,.8561562909348484,0,0,0,0,0,0,0,-.02086657747696763,0,.17793506953423632,
0,0,0,0,-.7852622071278469,0,-.7825662089555625,0,0,0,0,0,0,0,0,0,0,-.5834133303779689,0,0,0,0,0,-6.464381309831185,0,0,0,0,0,0,0,0,0,10.999888684585393,0,0,0,0,0,0,0,-2.920503545692916,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6.307726934490479,0,0,.7493614636260013,2.253423342466238,1.2778945926093082,-1.6263396721414938,0,0,0,-.07015465423099676,0,0,0,0,0,0,-.7515826202584037,-2.0014933034564093,0,0,0,0,-3.248389025246447,-2.1963620262446186,-5.494197659286147,0,0,-1.568314678505831,
0,0,0,0,.47817205924076,0,0,0,0,0,-2.6758727430131564,1.914746197900422,0,0,0,5.6410122983112485,0,-.47928965546235913,1.8079906039290758,0,0,0,-2.2094764644592453,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.928374944158187,0,0,0,0,0,-3.064224116310628,0,0,0,0,0,-.46902400289327906,0,0,0,0,0,0,0,0,0,24.988962297337213,0,0,0,0,-.11189785190643398,0,0,0,0,.11774925801078284,0,0,0,0,0,0,0,-2.5577995301550054,0,0,0,0,0,0,0,-.10048587507900963,0,0,0,0,-2.2554507351369133,0,0,0,0,0,0,0,0,0,.7493614636260015,-.479289655462359,
0,4.216072816141672,0,.31372318514171776,-.7514433469245989,0,.4744210719527677,0,0,0,0,0,0,0,0,-1.9631287616974693,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7.967716501119469,1.3686374686695988,0,0,2.2534233424662387,1.8079906039290752,0,0,10.460490216179931,0,0,0,0,0,-2.260425245199148,0,0,0,0,0,0,0,.18165504578615876,0,0,0,0,-2.117506801550408,-4.2043849640923066,-2.983792277892788,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.2778945926093084,0,0,.31372318514171804,0,7.8273347965619315,-1.280486274315308,
0,0,-.3005426934595614,0,0,0,0,0,0,0,-.31473085989162153,0,-6.676043778701786,0,0,0,0,-1.836491530995772,0,0,-.5950357471205003,0,0,-.9341351154149052,0,0,0,0,0,0,0,0,0,0,-.020866577476967463,0,-1.6263396721414936,0,0,-.7514433469245988,0,-1.280486274315308,2.501818645782916,0,.5952243255185052,0,0,0,0,-.07790009534523012,0,-.08162403219427317,0,.7536860664802539,0,0,0,0,0,0,0,0,-.3567105477387824,0,0,.09503934242557868,0,0,4.789334814930731,0,0,-.6642128267586838,0,0,0,0,0,0,-2.920503545692918,0,
0,-.11189785190643398,0,0,0,0,8.41284640594064,0,0,0,0,-2.754357901964825,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.0390160802451973,1.5853009221352985,0,-.017719778786138507,0,0,-.4733027306454095,0,0,0,0,0,0,0,.17793506953423616,0,0,-2.2094764644592457,0,.4744210719527676,0,0,.5952243255185052,0,5.249499785803856,0,0,0,0,.6937044545041776,0,.7268838634941462,0,0,0,0,0,0,0,0,0,0,3.177840573252194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.30054269345956175,0,0,0,21.421249463274417,0,.3024208050724917,0,0,
-.27638181139151907,0,0,0,0,.3474920229617283,0,0,0,0,-4.709652671059264,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.0701546542309961,0,0,0,-2.260425245199147,0,0,0,0,0,5.16173059748857,-2.232483614496612,0,0,-2.960824247683516,0,0,0,-.008900174759820079,-.7899579914133579,0,0,0,-2.1054104802159292,2.259274023960289,.09287930839068759,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.30242080507249147,-2.2324836144966125,8.47909953280088,0,0,6.060277096838233,0,0,0,0,-1.333627792582457,0,0,0,0,0,0,0,
0,0,-.10092659508463675,0,-3.1259424433001564,0,0,0,.7031821666517104,4.6613692537247795,0,0,0,0,0,0,0,0,.11774925801078329,0,0,0,0,-2.7543579019648248,0,0,0,0,7.618918885258526,-4.85796661806751,0,0,0,0,0,0,0,.05600360474079946,0,0,0,0,0,-.6937593926545079,0,0,.2612962897178553,3.1087588427499386,0,0,0,0,-4.6568511913047175,0,0,0,0,-.7852622071278469,0,0,0,0,0,0,0,-.07790009534523018,0,.6937044545041777,0,0,0,-4.857966618067511,5.914282520208281,0,1.0715493632029045,0,0,0,0,0,-.047364548533711304,
0,0,0,0,1.846316184905451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.27638181139151863,-2.960824247683516,6.060277096838233,0,0,8.046529330799508,0,0,0,0,.8046246838132206,0,0,0,0,0,0,0,-.7269641453882663,0,0,.27374702729784395,0,0,0,0,0,0,0,0,0,0,-.7825662089555625,0,0,0,0,0,0,0,-.081624032194273,0,.7268838634941464,0,0,0,0,1.0715493632029047,0,12.2872633256897,0,0,0,0,-2.6580834289118416,5.285334328097726,0,0,0,0,-1.7642975140138484,0,0,0,0,0,0,0,1.7615651543878568,0,0,3.0391106893092825,
-2.482904980828675,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18.79420670945887,0,-2.4775579278686513,0,0,0,-6.475350042698077,0,0,-6.760989216763036,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.7515826202584036,0,0,-1.9631287616974693,0,-.3147308598916214,.7536860664802538,0,0,0,0,0,0,0,0,0,0,2.9201426757804176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.39262003237223564,0,0,0,0,0,-2.0014933034564097,0,0,0,.18165504578615876,0,0,0,0,0,-.008900174759819857,0,0,0,0,0,-2.4775579278686513,0,4.152198489772374,0,0,0,
-1.3788516218283886,-.2514841367354155,-.19851380617837378,4.417132815119119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6.676043778701786,0,0,0,.34749202296172754,-.7899579914133583,-1.3336277925824571,0,0,.8046246838132207,0,0,0,0,11.672562659604656,0,0,0,0,1.8348599972309798,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.5577995301550054,0,0,0,0,0,0,0,0,0,0,0,0,-2.6580834289118416,0,0,0,0,7.673690644635051,.12219940627572878,0,0,0,0,-2.979550716742749,0,0,0,0,-3.2505566077721135,0,0,0,0,-3.002458358424842,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.056003604740799684,-.047364548533711304,0,5.285334328097725,0,0,0,0,.12219940627572834,9.339083656763647,0,0,0,0,-4.116356574005053,0,0,0,0,0,0,0,-1.9333189508012747,0,0,-2.377958461793785,2.648664273023668,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6.475350042698077,0,-1.3788516218283886,0,0,0,18.24533203647993,0,0,1.9901820145070594,0,0,0,0,0,0,0,0,0,0,0,0,0,3.2337616704781005,-6.716216492400615,0,0,-3.248389025246448,-1.928374944158187,0,0,-2.117506801550407,
0,0,0,0,0,-2.1054104802159292,0,0,0,0,0,0,0,-.25148413673541503,0,0,0,0,13.155248874545626,.6954363438217966,4.300614540203722,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.1963620262446186,0,0,0,-4.2043849640923066,-1.8364915309957714,0,0,0,-4.709652671059263,2.2592740239602893,0,0,0,0,0,0,0,-.19851380617837344,1.8348599972309803,0,0,0,.6954363438217963,10.941485470685642,2.9146559630133364,0,0,0,0,0,0,0,0,0,0,0,-3.047173976218697,0,0,0,0,0,-5.494197659286148,0,0,0,-2.9837922778927877,0,0,0,0,0,.09287930839068737,
0,0,0,0,0,-6.760989216763036,0,4.417132815119119,0,0,0,1.99018201450706,4.300614540203721,2.914655963013337,13.334234807380781,0,-3.1797929927395687,0,0,1.1934806736185546,0,0,0,0,0,0,0,0,0,0,-.5834133303779689,0,0,0,0,0,0,0,-.35671054773878264,0,3.177840573252195,0,0,0,0,1.8463161849054508,0,-1.7642975140138484,0,0,0,0,-2.979550716742749,-4.116356574005053,0,0,0,0,13.32782215604417])}static makeBVector12(){return[-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-.5519084709951673,-0,-0,.32686189269549815,
-0,-.2360817957910113,.5631787673751059,-0,-0,-0,-0,-0,-0,-0,-0,-0,-0,-.9155757777076441,-0,-0,-0,-0,-0,-0,-0,-0,-0]}static testMatrix12(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix12");const a=mpl$lab$engine2D$test$UtilEngineTest.makeMatrix12(),b=mpl$lab$engine2D$test$UtilEngineTest.makeBVector12(),c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,
mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,[-104.47425733426672,.29697908590886235,-2.1489983966328114E-16,104.47263842618734,1.5187297128665126E-14,2.8242287610253716E-15,
-.05092244616138966,-648210.2501095879,1.132422250834543E-15,1.48897517444417E-15,-523.5962002648035,648210.250109583,175095.66182544356,-174571.98664439825,.05639481629245197,-2.7958275955466352E-15,129.2569248976267,-129.2566080323817,8.719871443618053E-16,-.31691295687786164,215248.85427596612,-7.950054502617532E-5,129.25394620298724,-1.6781586867800525E-14,-129.2555209657184,-1.8756514501595994E-6,-1.2988677273772785E-5,-2.3919089786282978E-5,-4.3697907943101473E-14,-6.697859545370207E-14,1.8046096410967286E-5,
-3.1012136780897807E-15,166363.2280370757,-.6189361034485492,-338757.1642520421,-4.8752829380760085E-5,7.291364703820154E-15,1.6817280921734524E-14,-166363.22803841188,-214725.22296563725,-9.649958379440031E-6,338754.4547267552,2.148634519879413E-14],b))}static testMatrix12_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix12_CF");const a=mpl$lab$engine2D$test$UtilEngineTest.makeMatrix12(),
b=a.length,c=mpl$lab$engine2D$test$UtilEngineTest.makeBVector12(),d=Array(b);for(var e=0;e<b;e++)d[e]=!1;e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let g=0;20>=g;g++){const h=Array(b);switch(g){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,
[31,7,3,33,22,40,10,36,20,29,42,6,21,23,14,9,4,5,38,32,11,35,16,13,24,1,27,26,18,12,19,8,37,0,39,17,2,28,15,25,30,34,41,1,10]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=e.compute_forces(a,h,c,d,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(c.length==
b&&h.length==b);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,h);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,h,f,d));f=mpl$lab$engine2D$ComputeForces.maxAccel(f,d,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>f);mpl$lab$engine2D$UtilEngine.maxSize(h)}}static testMatrix13(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix13");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(6,[1.0830295556083844,.5366085787025969,0,0,-1.4633914212974029,-7.228E-15,.5366085787025969,3.5862068965517095,0,0,1.5862068965517095,0,0,0,3.5862068965517206,-1.5862068965517246,0,0,0,0,-1.5862068965517246,3.586206896551729,0,0,-1.463391421297403,1.5862068965517095,0,0,3.5862068965517095,0,-7.228E-15,0,0,0,0,7.5624545695114005]),b=[-1,-1,-0,-0,1,1.0701009352565578],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,
mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,[3.4834803047893805,-1.929658607091768,0,0,2.5538216976976114,.14150180016562014],b))}static testMatrix14(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix14");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(6,[3.586206896147961,0,0,-3.586206896551724,0,-1,0,3.5862068965517238,-1.5862068965517238,0,0,0,0,-1.5862068965517238,3.586206896551724,0,0,0,-3.586206896551724,0,0,3.586206896955488,0,1,0,0,0,0,3.089825306743734,.028751860945604155,-1,0,0,1,.028751860945604155,3.009203080265496]),b=[-0,-0,-0,-0,.20048009236083858,-1.9358290447661308],c=Array(a.length);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,
mpl$lab$engine2D$UtilEngine.matrixSolve4(a,c,b,1E-9));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,c,b));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-10>mpl$lab$engine2D$UtilEngine.matrixSolveError(a,[-179942.89225152493,0,0,-179942.69431674527,.07148853438707764,-.7097624174303598],b))}static testMatrix15_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix15_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.586206896551724,-1.5862068965517242,1.5553194204865006,-.5426116139962586,0,0,0,0,.5426116139962587,-1.5553194204865006,1.5862068965517242,-3.586206896551724,0,0,-1,0,-1.5862068965517242,3.586206896551724,-3.5553194204865006,-1.4573883860037413,0,0,0,0,1.4573883860037413,3.5553194204865006,-3.586206896551724,1.5862068965517242,0,0,-1,0,1.5553194204865006,-3.5553194204865006,3.52480083840998,1.4519257245113302,
0,0,0,0,-1.4519257245113297,-3.52480083840998,3.5553194204865006,-1.5553194204865006,6.123233995736766E-17,0,1,0,-.5426116139962586,-1.4573883860037413,1.45192572451133,1.080892265785095,0,0,0,0,-1.0808922657850948,-1.45192572451133,1.4573883860037413,.5426116139962586,6.123233995736766E-17,0,1,0,0,0,0,0,3.586206896551726,-1.586206896551725,-3.586206896551726,1.586206896551725,0,0,0,0,0,0,0,-1,0,0,0,0,-1.586206896551725,3.586206896551724,1.586206896551725,-3.586206896551724,0,0,0,0,0,0,0,-1,0,0,0,
0,-3.586206896551726,1.586206896551725,3.586206896551726,-1.586206896551725,0,0,0,0,0,0,0,1,0,0,0,0,1.586206896551725,-3.586206896551724,-1.586206896551725,3.586206896551724,0,0,0,0,0,0,0,1,.5426116139962588,1.4573883860037413,-1.45192572451133,-1.080892265785095,0,0,0,0,1.0808922657850948,1.45192572451133,-1.4573883860037413,-.5426116139962588,-6.123233995736766E-17,0,-1,0,-1.5553194204865006,3.5553194204865006,-3.52480083840998,-1.4519257245113302,0,0,0,0,1.4519257245113297,3.52480083840998,-3.5553194204865006,
1.5553194204865006,-6.123233995736766E-17,0,-1,0,1.5862068965517242,-3.586206896551724,3.5553194204865006,1.4573883860037413,0,0,0,0,-1.4573883860037413,-3.5553194204865006,3.586206896551724,-1.5862068965517242,0,0,1,0,-3.586206896551724,1.5862068965517242,-1.5553194204865006,.5426116139962586,0,0,0,0,-.5426116139962587,1.5553194204865006,-1.5862068965517242,3.586206896551724,0,0,1,0,0,0,6.123233995736766E-17,6.123233995736766E-17,0,0,0,0,-6.123233995736766E-17,-6.123233995736766E-17,0,0,3.0938880679173764,
.15289856435897214,-.0219279540886184,1.3453401655638317,0,0,0,0,0,0,0,0,0,0,0,0,.15289856435897214,3.248998317907744,1.9642898956827006,-1.066126410406695,-1,-1,1,1,0,0,0,0,-1,-1,1,1,-.0219279540886184,1.9642898956827006,3.005121366124348,.1528985643395266,0,0,0,0,-1,-1,1,1,0,0,0,0,1.3453401655638317,-1.066126410406695,.1528985643395266,7.564791973365036]),b=[-8.581529099367793E-15,-7.401486968697812E-15,-8.286272949361454E-16,-3.500022067364011E-16,-8.271806125530277E-24,-8.271806125530277E-24,
8.271806125530277E-24,8.271806125530277E-24,3.500022067364011E-16,8.286272949361454E-16,7.401486968697812E-15,8.581529099367793E-15,-17.136728774722613,-4.811055899284179,-.6759204746260199,16.636681372681814],c=a.length,d=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let h=0;20>=h;h++){var f=Array(c);switch(h){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);
break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[12,13,14,15,0,1,2,3,5,4,7,6,8,9,10,11]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var g=e.compute_forces(a,f,b,d,!1,.1*h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,g);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&f.length==c);g=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,f);g=mpl$lab$engine2D$UtilEngine.vectorAdd(g,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,f,g,d));g=mpl$lab$engine2D$ComputeForces.maxAccel(g,d,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>
g);f=mpl$lab$engine2D$UtilEngine.maxSize(f);0==h?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(7.7>f):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(7.5<f)}}static testMatrix16_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix16_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,
[3.586206896551724,3.5535547053368117,-1.4556236708540526,1.5862068965517242,0,0,0,0,-1.5862068965517242,1.4556236708540529,-3.5535547053368117,-3.586206896551724,0,1,0,0,3.5535547053368117,3.5213147648171383,-1.4498711878479162,1.5535547053368117,0,0,0,0,-1.5535547053368117,1.4498711878479162,-3.5213147648171383,-3.5535547053368117,6.123233995736766E-17,1,0,0,-1.4556236708540526,-1.4498711878479162,1.0802692660511086,.5443763291459475,0,0,0,0,-.5443763291459475,-1.0802692660511086,1.4498711878479162,
1.4556236708540526,-6.123233995736766E-17,-1,0,0,1.5862068965517242,1.5535547053368117,.5443763291459474,3.586206896551724,0,0,0,0,-3.586206896551724,-.5443763291459471,-1.5535547053368117,-1.5862068965517242,0,-1,0,0,0,0,0,0,3.586206896551724,1.5862068965517242,-1.5862068965517242,-3.586206896551724,0,0,0,0,0,0,1,0,0,0,0,0,1.5862068965517242,3.586206896551724,-3.586206896551724,-1.5862068965517242,0,0,0,0,0,0,-1,0,0,0,0,0,-1.5862068965517242,-3.586206896551724,3.586206896551724,1.5862068965517242,
0,0,0,0,0,0,1,0,0,0,0,0,-3.586206896551724,-1.5862068965517242,1.5862068965517242,3.586206896551724,0,0,0,0,0,0,-1,0,-1.5862068965517242,-1.5535547053368117,-.5443763291459474,-3.586206896551724,0,0,0,0,3.586206896551724,.5443763291459471,1.5535547053368117,1.5862068965517242,0,1,0,0,1.4556236708540526,1.4498711878479162,-1.0802692660511086,-.5443763291459472,0,0,0,0,.5443763291459472,1.0802692660511086,-1.4498711878479162,-1.4556236708540526,6.123233995736766E-17,1,0,0,-3.5535547053368117,-3.5213147648171383,
1.4498711878479162,-1.5535547053368117,0,0,0,0,1.5535547053368117,-1.4498711878479162,3.5213147648171383,3.5535547053368117,-6.123233995736766E-17,-1,0,0,-3.586206896551724,-3.5535547053368117,1.4556236708540526,-1.5862068965517242,0,0,0,0,1.5862068965517242,-1.4556236708540529,3.5535547053368117,3.586206896551724,0,-1,0,0,0,6.123233995736766E-17,-6.123233995736766E-17,0,0,0,0,0,0,6.123233995736766E-17,-6.123233995736766E-17,0,3.0939194237218755,-.021905922225415753,1.3451215287497018,.15274494123202206,
1,1,-1,-1,0,0,0,0,1,1,-1,-1,-.021905922225415753,3.005109373647426,.15274494124655502,1.9643735164638259,0,0,0,0,1,-1,1,-1,0,0,0,0,1.3451215287497018,.15274494124655502,7.566316477591808,-1.0650552318278812,0,0,0,0,0,0,0,0,0,0,0,0,.15274494123202206,1.9643735164638259,-1.0650552318278812,3.2484152494489766]),b=[-1.3424401586643434E-14,-4.844789302125198E-15,-7.066670319407715E-16,-2.626209332430736E-16,-1.5728165174817075E-16,-5.551116260499125E-17,5.551116260499125E-17,1.5728165174817075E-16,2.626209332430736E-16,
7.066670319407715E-16,4.844789302125198E-15,1.3424401586643434E-14,-1.3809827337877498,.22468390235588426,2.128406055877737,2.6960622252634066],c=a.length,d=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let h=0;20>=h;h++){var f=Array(c);switch(h){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,
[12,14,13,15,7,10,3,2,6,5,1,4,11,9,0,8]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var g=e.compute_forces(a,f,b,d,!1,.1*h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&f.length==c);g=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,
f);g=mpl$lab$engine2D$UtilEngine.vectorAdd(g,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,f,g,d));g=mpl$lab$engine2D$ComputeForces.maxAccel(g,d,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>g);f=mpl$lab$engine2D$UtilEngine.maxSize(f);0==h?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(3.1>
f):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(3<f)}}static testMatrix17_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix17_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.5862068965644167,.8740518805228181,-1.2238791539650893,1.5862068965644176,0,0,0,0,-1.5862068965517242,1.223879153952218,-.8740518805356892,-3.5862068965517233,
1,0,0,0,.874051880522818,2.3580005743378982,.837769688861518,2.874051880522819,0,0,0,0,-2.874051880513621,-.837769688870845,-2.358000574347225,-.87405188051362,-1,0,6.13521489875853E-12,0,-1.2238791539650893,.837769688861518,1.0193804585575528,.7761208460349106,0,0,0,0,-.7761208460360094,-1.0193804585564386,-.8377696888604038,1.2238791539639904,-1,0,6.13521489875853E-12,0,1.5862068965644176,2.874051880522819,.7761208460349106,3.5862068965644185,0,0,0,0,-3.586206896551725,-.776120846047782,-2.87405188053569,
-1.5862068965517242,-1,0,0,0,0,0,0,0,3.586206896549234,1.5862068965492355,-1.5862068965517233,-3.5862068965517224,0,0,0,0,0,-1,0,0,0,0,0,0,1.5862068965492355,3.586206896549236,-3.586206896551724,-1.5862068965517233,0,0,0,0,0,1,0,0,0,0,0,0,-1.5862068965517233,-3.586206896551724,3.5862068965542124,1.5862068965542115,0,0,0,0,0,-1,0,0,0,0,0,0,-3.5862068965517224,-1.5862068965517233,1.5862068965542115,3.5862068965542107,0,0,0,0,0,1,0,0,-1.5862068965517242,-2.874051880513621,-.7761208460360094,-3.586206896551725,
0,0,0,0,3.586206896539032,.7761208460488808,2.874051880526492,1.5862068965390312,1,0,0,0,1.223879153952218,-.837769688870845,-1.0193804585564388,-.776120846047782,0,0,0,0,.7761208460488808,1.0193804585553246,.8377696888697308,-1.2238791539511193,1,0,-6.13521489875853E-12,0,-.8740518805356893,-2.3580005743472245,-.8377696888604038,-2.8740518805356903,0,0,0,0,2.8740518805264923,.8377696888697308,2.3580005743565513,.8740518805264913,1,0,-6.13521489875853E-12,0,-3.5862068965517233,-.8740518805136201,
1.2238791539639906,-1.5862068965517242,0,0,0,0,1.5862068965390312,-1.2238791539511191,.8740518805264912,3.58620689653903,-1,0,0,0,1,-1,-1,-1,0,0,0,0,1,1,1,-1,3.074703542624589,-.08541416497256904,.5955732643915111,1.9892863882668392,0,0,0,0,-1,1,-1,1,0,0,0,0,-.08541416497256904,3.0976604230755704,1.3190364034858493,.012249676091359045,0,6.13521489875853E-12,6.13521489875853E-12,0,0,0,0,0,0,-6.13521489875853E-12,-6.13521489875853E-12,0,.5955732643915111,1.3190364034858493,7.7482020369568,-.0854141649668102,
0,0,0,0,0,0,0,0,0,0,0,0,1.9892863882668392,.012249676091359045,-.0854141649668102,3.0015364930810007]),b=[-2.638039120484648E-9,-1.6540337075666244E-9,-5.840191026463354E-10,-6.394885122036331E-14,-1.9984022384181354E-15,-2.220464578090694E-16,2.220464578101376E-16,1.9984022384192035E-15,6.394884545208474E-14,5.840191026522041E-10,1.6540337075724932E-9,2.6380391204788796E-9,-30.1606595264602,-.5425522183449384,3.783091433465525,4.3254922651818015],c=a.length,d=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,
!0,!0,!0,!0],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let h=0;30>=h;h++){var f=Array(c);switch(h){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[12,13,14,15,1,11,4,6,8,2,0,7,5,10,9,3]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,
[14,15,12,13,6,7,0,5,3,9,4,1,8,10,11,2,0]);break;case 3:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var g=e.compute_forces(a,f,b,d,!1,.1*h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&f.length==c);g=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,
f);g=mpl$lab$engine2D$UtilEngine.vectorAdd(g,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,f,g,d));g=mpl$lab$engine2D$ComputeForces.maxAccel(g,d,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>g);f=mpl$lab$engine2D$UtilEngine.maxSize(f);0==h?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(50>
f):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(49<f)}}static testMatrix18_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix18_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.586206896551724,-1.586206896551725,0,0,0,0,0,0,0,0,1.586206896551725,-3.586206896551724,0,0,0,1,-1.586206896551725,3.586206896551726,0,0,0,0,0,0,0,
0,-3.586206896551726,1.586206896551725,0,0,0,1,0,0,1.1550310893277975,.6413791004629619,1.6332001835118781,.3667998164881218,-.3667998164881218,-1.6332001835118781,-.6413791004629619,-1.1550310893277973,0,0,-6.123233995736766E-17,-1,0,0,0,0,.6413791004629618,1.8295687667705407,-.4647308509708809,2.4647308509708807,-2.4647308509708807,.4647308509708809,-1.8295687667705407,-.6413791004629619,0,0,-6.123233995736766E-17,-1,0,0,0,0,1.6332001835118781,-.46473085097088096,3.586206896551724,-1.5862068965517242,
1.5862068965517242,-3.586206896551724,.46473085097088096,-1.6332001835118781,0,0,0,-1,0,0,0,0,.36679981648812177,2.4647308509708807,-1.5862068965517242,3.586206896551724,-3.586206896551724,1.5862068965517242,-2.4647308509708807,-.366799816488122,0,0,0,-1,0,0,0,0,-.36679981648812177,-2.4647308509708807,1.5862068965517242,-3.586206896551724,3.586206896551724,-1.5862068965517242,2.4647308509708807,.366799816488122,0,0,0,1,0,0,0,0,-1.6332001835118781,.46473085097088096,-3.586206896551724,1.5862068965517242,
-1.5862068965517242,3.586206896551724,-.46473085097088096,1.6332001835118781,0,0,0,1,0,0,0,0,-.6413791004629618,-1.8295687667705407,.464730850970881,-2.4647308509708807,2.4647308509708807,-.464730850970881,1.8295687667705407,.6413791004629619,0,0,6.123233995736766E-17,1,0,0,0,0,-1.1550310893277975,-.6413791004629619,-1.6332001835118781,-.36679981648812193,.36679981648812193,1.6332001835118781,.6413791004629619,1.1550310893277973,0,0,6.123233995736766E-17,1,0,0,1.586206896551725,-3.586206896551726,
0,0,0,0,0,0,0,0,3.586206896551726,-1.586206896551725,0,0,0,-1,-3.586206896551724,1.586206896551725,0,0,0,0,0,0,0,0,-1.586206896551725,3.586206896551724,0,0,0,-1,0,0,-6.123233995736766E-17,-6.123233995736766E-17,0,0,0,0,6.123233995736766E-17,6.123233995736766E-17,0,0,3.0986387998227323,-.006203518189121915,.04325570099261159,1.3122144080438458,0,0,-1,-1,-1,-1,1,1,1,1,0,0,-.006203518189121915,3.0003901470617236,1.9972795945573838,.04325570097754454,0,0,0,0,0,0,0,0,0,0,0,0,.04325570099261159,1.9972795945573838,
3.018968759471169,-.3016120225119102,1,1,0,0,0,0,0,0,0,0,-1,-1,1.3122144080438458,.04325570097754454,-.3016120225119102,7.795770238005858]),b=[-4.109840485099998E-10,-4.1098397946800547E-10,-7.918240297620283E-11,-7.918097625963677E-11,-7.91788615053803E-11,-7.9175343959606E-11,7.9175343959606E-11,7.91788615053803E-11,7.918097625963677E-11,7.918240297620283E-11,4.1098397946800547E-10,4.109840485099998E-10,-2.404079701283457,.027018865568001954,.8368861113133583,3.556984289290667],c=a.length,d=[!1,
!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let h=0;20>=h;h++){var f=Array(c);switch(h){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[15,14,13,12,8,0,4,5,7,10,9,11,2,3,1,6]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);
break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var g=e.compute_forces(a,f,b,d,!1,.1*h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&f.length==c);g=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,f);g=mpl$lab$engine2D$UtilEngine.vectorAdd(g,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,
f,g,d));g=mpl$lab$engine2D$ComputeForces.maxAccel(g,d,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>g);f=mpl$lab$engine2D$UtilEngine.maxSize(f);0==h?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1.135>f):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1.13<f)}}static testMatrix19_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix19_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.58620689655037,-1.5862068965517238,0,0,0,0,0,0,0,0,1.5862068965503702,-3.586206896551724,0,0,-1,0,-1.5862068965517238,3.586206896553078,0,0,0,0,0,0,0,0,-3.586206896551724,1.5862068965530782,0,0,-1,0,0,0,3.5862068965500393,3.521473773241473,-1.4235427387576882,1.5862068965500393,-1.5862068965517242,1.4235427387593973,-3.5214737732397636,-3.586206896551724,0,0,0,0,0,-1,0,0,3.5214737732414734,3.4583609291375104,
-1.4129414042816943,1.5214737732414731,-1.5214737732431158,1.4129414042833608,-3.458360929135844,-3.521473773243116,0,0,8.145820755449296E-13,0,0,-1,0,0,-1.423542738757688,-1.4129414042816943,1.0693635346010655,.5764572612423119,-.5764572612420358,-1.0693635346013455,1.4129414042814143,1.4235427387579642,0,0,-8.145820755449296E-13,0,0,1,0,0,1.5862068965500393,1.521473773241473,.5764572612423118,3.5862068965500393,-3.586206896551724,-.5764572612406027,-1.5214737732397636,-1.5862068965517242,0,0,0,
0,0,1,0,0,-1.5862068965517242,-1.521473773243116,-.5764572612420358,-3.586206896551724,3.5862068965534095,.5764572612403267,1.5214737732414068,1.5862068965534095,0,0,0,0,0,-1,0,0,1.4235427387593973,1.4129414042833606,-1.0693635346013457,-.5764572612406027,.5764572612403267,1.0693635346016257,-1.4129414042830808,-1.4235427387596733,0,0,8.145820755449296E-13,0,0,-1,0,0,-3.5214737732397636,-3.4583609291358437,1.4129414042814141,-1.5214737732397638,1.5214737732414065,-1.4129414042830806,3.458360929134178,
3.5214737732414063,0,0,-8.145820755449296E-13,0,0,1,0,0,-3.586206896551724,-3.521473773243116,1.4235427387579642,-1.5862068965517242,1.5862068965534095,-1.4235427387596733,3.5214737732414068,3.5862068965534095,0,0,0,0,0,1,1.5862068965503702,-3.586206896551724,0,0,0,0,0,0,0,0,3.586206896550371,-1.5862068965517246,0,0,1,0,-3.586206896551724,1.5862068965530782,0,0,0,0,0,0,0,0,-1.5862068965517246,3.5862068965530787,0,0,1,0,0,0,0,8.145820755449296E-13,-8.145820755449296E-13,0,0,8.145820755449296E-13,-8.145820755449296E-13,
0,0,0,7.576798867938808,-.14965958882325694,1.3436181964875642,1.0435417801446258,0,0,0,0,0,0,0,0,0,0,0,0,-.14965958882325694,3.0048938118482,.021463436270464566,1.9658765791893604,-1,-1,0,0,0,0,0,0,0,0,1,1,1.3436181964875642,.021463436270464566,3.0941350241541787,-.1496595886024558,0,0,-1,-1,1,1,-1,-1,1,1,0,0,1.0435417801446258,1.9658765791893604,-.1496595886024558,3.2379347396137255]),b=[-9.802835414341164E-10,-9.802833573221373E-10,-2.0749740176094107E-10,-6.827922471993871E-11,-1.588176623987044E-11,
-1.1046713335701318E-16,1.1046720536256166E-16,1.5881766239797517E-11,6.827922471986578E-11,2.0749740176101307E-10,9.802833573221373E-10,9.802835414341164E-10,-3.8765249595272606,-.10001151174251222,2.8926563999698773,3.0548386435724364],c=a.length,d=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let h=0;20>=h;h++){var f=Array(c);switch(h){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);
break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[12,13,14,15,4,5,10,11,2,3,7,0,1,6,8,9]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;case 3:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[12,14,15,13,0,7,3,6,8,11,9,1,2,10,5,4,6]);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var g=
e.compute_forces(a,f,b,d,!1,.1*h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&f.length==c);g=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,f);g=mpl$lab$engine2D$UtilEngine.vectorAdd(g,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,
f,g,d));g=mpl$lab$engine2D$ComputeForces.maxAccel(g,d,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>g);f=mpl$lab$engine2D$UtilEngine.maxSize(f);0==h?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(6.3>f):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(6.2<f)}}static testMatrix20_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix20_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.586206896550237,1.586206896550237,1.2942338775898112,0,0,.8036971568938533,-.8036971568923449,0,0,-1.2942338775883022,-1.5862068965517242,-3.586206896551724,0,1,0,0,1.586206896550237,3.586206896550237,3.2942338775898112,0,0,-1.1963028431061467,1.1963028431076552,0,0,-3.294233877588302,-3.586206896551724,-1.5862068965517242,0,-1,0,0,1.2942338775898112,3.2942338775898112,3.0352235128990728,0,0,-1.1741409913963436,
1.1741409913976817,0,0,-3.035223512897734,-3.2942338775911306,-1.2942338775911306,0,-1,0,7.191028954271661E-13,0,0,0,3.586206896551726,-1.586206896551725,0,0,1.586206896551725,-3.586206896551726,0,0,0,0,0,1,0,0,0,0,-1.586206896551725,3.586206896551724,0,0,-3.586206896551724,1.586206896551725,0,0,0,0,0,1,0,.8036971568938533,-1.1963028431061467,-1.1741409913963436,0,0,1.014900125068477,-1.0149001250685916,0,0,1.174140991396229,1.1963028431062597,-.8036971568937403,0,1,0,-7.191028954271661E-13,-.8036971568923449,
1.196302843107655,1.1741409913976817,0,0,-1.0149001250685914,1.014900125068706,0,0,-1.1741409913975671,-1.196302843107768,.803697156892232,0,-1,0,7.191028954271661E-13,0,0,0,1.586206896551725,-3.586206896551724,0,0,3.586206896551724,-1.586206896551725,0,0,0,0,0,-1,0,0,0,0,-3.586206896551726,1.586206896551725,0,0,-1.586206896551725,3.586206896551726,0,0,0,0,0,-1,0,-1.2942338775883022,-3.294233877588302,-3.0352235128977343,0,0,1.174140991396229,-1.1741409913975673,0,0,3.0352235128963954,3.294233877589622,
1.294233877589622,0,1,0,-7.191028954271661E-13,-1.5862068965517242,-3.586206896551724,-3.2942338775911306,0,0,1.1963028431062597,-1.196302843107768,0,0,3.294233877589622,3.586206896553212,1.586206896553212,0,1,0,0,-3.586206896551724,-1.5862068965517242,-1.2942338775911306,0,0,-.8036971568937404,.803697156892232,0,0,1.294233877589622,1.586206896553212,3.586206896553212,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.003499916627209,1.9755958889466059,.018285938513485908,-.12750363009056684,1,-1,-1,0,0,1,-1,0,0,
1,1,-1,1.9755958889466059,3.170164235249606,-.12750362986632482,.8890533918010681,0,0,0,1,1,0,0,-1,-1,0,0,0,.018285938513485908,-.12750362986632482,3.0955381464574026,1.3338345485270449,0,0,7.191028954271661E-13,0,0,-7.191028954271661E-13,7.191028954271661E-13,0,0,-7.191028954271661E-13,0,0,-.12750363009056684,.8890533918010681,1.3338345485270449,7.6450179869674635]),b=[-1.5740438009726838E-9,-1.287890877406221E-9,-9.195010270075594E-10,-5.852012398803241E-10,-5.852012330480435E-10,-2.4129967854526093E-10,
2.41299678543599E-10,5.852012330480435E-10,5.852012398803241E-10,9.195010270058973E-10,1.2878908774078831E-9,1.5740438009743458E-9,-4.366768028062232,-2.078376190930253,-.26440020599753483,1.762811379370378],c=a.length,d=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let h=0;20>=h;h++){var f=Array(c);switch(h){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);
break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[12,13,14,15,0,10,7,8,9,5,3,4,1,11,2,6]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var g=e.compute_forces(a,f,b,d,!1,.1*h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,g);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&f.length==c);g=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,f);g=mpl$lab$engine2D$UtilEngine.vectorAdd(g,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,f,g,d));g=mpl$lab$engine2D$ComputeForces.maxAccel(g,d,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>
g);f=mpl$lab$engine2D$UtilEngine.maxSize(f);0==h?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1.93>f):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1.92<f)}}static testMatrix21_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix21_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,
[2.078562005204573,.7237403386582231,-2.670145052455683,.6701450524416293,0,0,0,0,2.6701450524416295,-.6701450524556825,-2.078562005190323,-.7237403386439727,-1,0,1.0518375399978647E-11,0,.7237403386582232,1.0707603272842876,-.5722140179640969,-1.4277859820323031,0,0,0,0,.5722140179676967,1.427785982035903,-.7237403386618733,-1.0707603272879378,-1,0,1.0518375399978647E-11,0,-2.670145052455683,-.5722140179640969,3.5862068965734872,-1.5862068965517242,0,0,0,0,-3.586206896551725,1.5862068965734863,2.6701450524336163,
.5722140179420303,1,0,0,0,.6701450524416293,-1.4277859820323031,-1.5862068965517242,3.5862068965299616,0,0,0,0,1.5862068965299625,-3.5862068965517233,-.6701450524195622,1.42778598205437,1,0,0,0,0,0,0,0,3.5862068965580414,1.5862068965580405,-3.586206896551724,-1.5862068965517246,0,0,0,0,0,-1,0,0,0,0,0,0,1.5862068965580405,3.58620689655804,-1.5862068965517238,-3.586206896551724,0,0,0,0,0,1,0,0,0,0,0,0,-3.586206896551724,-1.5862068965517238,3.5862068965454075,1.586206896545408,0,0,0,0,0,1,0,0,0,0,0,
0,-1.5862068965517246,-3.586206896551724,1.586206896545408,3.5862068965454084,0,0,0,0,0,-1,0,0,2.6701450524416295,.5722140179676967,-3.586206896551725,1.5862068965299625,0,0,0,0,3.5862068965299634,-1.5862068965517242,-2.6701450524195627,-.5722140179456299,-1,0,0,0,-.6701450524556827,1.427785982035903,1.5862068965734863,-3.5862068965517233,0,0,0,0,-1.5862068965517242,3.5862068965734855,.6701450524336159,-1.4277859820579697,-1,0,0,0,-2.078562005190323,-.7237403386618733,2.6701450524336163,-.6701450524195625,
0,0,0,0,-2.6701450524195627,.6701450524336161,2.0785620051760723,.7237403386476229,1,0,-1.0518375399978647E-11,0,-.7237403386439726,-1.0707603272879378,.5722140179420302,1.42778598205437,0,0,0,0,-.5722140179456299,-1.4277859820579697,.7237403386476228,1.070760327291588,1,0,-1.0518375399978647E-11,0,-1,-1,1,1,0,0,0,0,-1,-1,1,1,3.0423425158363915,.06446907035584792,-.44952795205048696,1.993927446350773,0,0,0,0,-1,1,1,-1,0,0,0,0,.06446907035584792,3.098158103042501,1.3155661964054726,-.009245834375179108,
1.0518375399978647E-11,1.0518375399978647E-11,0,0,0,0,0,0,0,0,-1.0518375399978647E-11,-1.0518375399978647E-11,-.44952795205048696,1.3155661964054726,7.772398986765666,.06446906972182279,0,0,0,0,0,0,0,0,0,0,0,0,1.993927446350773,-.009245834375179108,.06446906972182279,3.000870895531225]),b=[-2.0087562035464356E-9,-2.0087562035464356E-9,-8.230447094902625E-24,-8.230447094902625E-24,-5.1440294343204224E-24,-5.144029434320422E-24,5.1440294343078586E-24,5.144029434307859E-24,8.230447094902625E-24,8.230447094902625E-24,
2.0087562035464356E-9,2.0087562035464356E-9,-2.5651362656358345,-.559276608081908,.685598912214008,4.83970180002438],c=a.length,d=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let h=0;30>=h;h++){var f=Array(c);switch(h){case 0:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,
[12,13,14,15,8,9,4,1,7,6,2,5,3,0,11,10,1,1,5,0,0,0,3,2,10,2]);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[12,14,13,15,5,7,11,0,10,2,1,3,-3,4,6,8,9,5,3,-3,10,-10,11,-11,3,-3,10,-10,11,-11].filter(k=>-1<k));break;case 3:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var g=
e.compute_forces(a,f,b,d,!1,.1*h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&f.length==c);g=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,f);g=mpl$lab$engine2D$UtilEngine.vectorAdd(g,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,
f,g,d));g=mpl$lab$engine2D$ComputeForces.maxAccel(g,d,c);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>g);f=mpl$lab$engine2D$UtilEngine.maxSize(f);0==h?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(8.5>f):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(8.4<f)}}static testMatrix22_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix22_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(44,[14.23698997455812,14.430146816633396,0,0,0,0,0,0,0,0,0,0,-5.888364479898706,0,0,0,0,0,5.851221032058561,0,-14.46735175025391,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14.430146816633394,30.99059926775411,0,0,0,0,0,0,0,0,0,0,-4.298377612022811,0,0,0,0,0,4.250625072468184,0,-31.038458595165892,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11.728970420438674,0,0,0,0,0,-3.6289045193184446,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,-4.4406504857644,0,8.856804711317096,0,0,0,0,1.511587861551819,0,0,0,0,0,-8.76274381473226,0,0,0,0,0,0,0,0,0,4.136372403996331,-1.0362861833125212,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.2219705867772885,0,0,-3.183227249243412,-1.2231977092230704,0,-3.8881227137639782,0,0,3.1820101402306893,0,0,0,0,-2.0984362404268446,0,0,0,-1.0362861833125214,3.6122917696558963,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.0938022819619977,0,0,2.8650720944046686,1.1013046226051506,
0,.8131888824737485,0,0,-2.857578752658961,0,0,0,0,-.7951711015183774,0,0,0,0,0,3.903397540857193,0,2.935268375563308,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.5266005023295057,0,0,0,0,0,0,0,0,.756647828197488,0,-3.8614537447327,0,0,0,-1.6689014750748403,0,-1.566307064166864,0,0,0,0,0,0,0,7.131687863293411,0,0,0,0,0,0,-2.457568258635335,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.427242245496157,0,0,0,0,0,-2.154245336827284,0,0,0,0,0,0,0,0,0,0,0,2.9352683755633078,0,3.788716236180092,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,-.4821290929361566,0,0,0,0,0,0,0,0,-.6922621250485412,0,-2.972044732469972,0,0,0,1.4891169581080916,0,1.3986755339267718,0,0,0,-3.6289045193184455,0,0,0,0,0,20.95801432521537,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7.097664638068897,0,-14.190661582318837,0,0,0,0,-2.4082120982500497,0,0,0,0,0,14.040297874485459,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.432122478708493,0,3.379590898402978,0,0,0,0,0,0,0,-5.3810837608555655,0,0,-3.328627160059442,0,2.679683272076949,0,-.3025138593813561,0,0,0,0,0,0,.28364688645738534,
0,0,0,0,-5.723114803061301,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.5768514814744714,0,0,0,0,.5908550444829057,0,0,0,0,0,0,0,.29629842766826103,0,0,0,.3938391951518884,0,0,0,0,0,0,0,0,0,0,0,-.3752438168098988,0,0,0,0,0,0,0,0,0,0,0,0,0,3.379590898402978,0,6.746683599532717,0,0,0,0,0,0,0,-3.4627815224513814,0,0,-6.829751222814053,0,-4.386565058191143,0,.5056053186313525,0,0,0,0,0,0,-.47465483414952025,0,0,0,0,9.379187920948851,0,0,0,0,0,-5.888364479898705,-4.2983776120228105,0,0,0,0,0,0,0,0,0,0,10.101639285332938,
0,0,0,0,0,-10.08214234269518,0,4.317918130504456,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.4575682586353365,0,0,0,0,0,0,40.54727692820515,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10.908308345445086,0,0,0,0,0,9.638245182590474,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.8142908517663408,0,0,0,0,0,0,0,0,-2.1375222941168506,0,0,0,0,0,0,0,0,0,0,-1.2208661301048669,0,0,0,0,1.233715103402846,0,-1.1501123854625837,2.117998067001566,0,0,0,0,0,0,0,0,0,0,0,.5908550444829053,0,0,0,0,10.132252416652229,
0,0,0,0,0,0,0,-2.8923962432046086,0,0,0,-4.328252602226376,0,0,0,0,0,0,0,0,0,0,0,3.6060566582224696,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4.665967307441097,3.050521991009302,-1.976193004004351,0,1.0441897197708587,0,0,0,0,-4.664995845216517,0,0,0,1.9845090176544966,0,0,-2.64504756673853,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3.050521991009302,5.1495022657617096,2.5825317837604476,0,-1.3419116467422567,0,0,0,0,-3.0517482900995336,0,0,0,-2.5933369459276086,0,0,3.4219381318786994,0,
0,0,0,0,0,0,0,0,0,0,5.851221032058561,4.250625072468183,0,0,0,0,0,0,0,0,0,0,-10.082142342695178,0,0,0,-1.9761930040043516,2.5825317837604476,19.62107966403074,0,-3.2351354450900147,0,0,0,0,1.9846269536963443,0,0,0,-9.581795031034833,0,0,3.4826362703284404,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5.381083760855565,0,-3.4627815224513805,0,0,0,0,0,0,0,10.426004593797717,0,0,6.110181419630759,0,-2.46118913112773,0,.32598135020901975,0,.7416207394217174,0,-2.790625325186885,0,0,-.30834822010800633,0,0,
0,0,5.3055894679294475,0,0,0,0,0,-14.46735175025391,-31.038458595165892,0,0,0,0,0,0,0,0,0,0,4.317918130504457,0,0,0,1.044189719770858,-1.3419116467422572,-3.235135445090016,0,36.582619273825664,0,0,0,0,-1.0316466366784842,0,0,0,-1.0226400290888074,0,0,-7.8607491127003595,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37.213885114025736,0,0,0,0,0,-1.1561362525501366,-9.887076968798644,0,23.56863741188998,0,0,0,0,-4.315721414418213,-.6996809284240575,0,0,0,-.5565434225875394,-5.598665434098225,
0,-31.34551835591598,0,0,0,0,0,0,0,0,0,-3.328627160059442,0,-6.8297512228140524,0,0,0,0,0,0,0,6.110181419630758,0,0,10.840304672539332,0,4.604801067261597,0,-.4821083070011447,0,-.3725393798422323,0,1.4306164647164776,0,0,.4499257995409556,0,0,0,0,-9.796161565056899,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.296298427668261,0,0,0,-2.13752229411685,-2.892396243204608,0,0,0,0,0,0,0,15.779043222672172,0,0,0,2.9140855537591857,0,0,0,0,0,0,2.3909384532369033,0,0,0,0,-2.0855334340036804,0,-10.277156300204904,-13.256895500651645,
0,0,0,-4.440650485764402,0,0,0,0,0,7.097664638068893,2.679683272076948,0,-4.386565058191143,0,0,0,0,0,0,0,-2.46118913112773,0,0,4.604801067261597,0,23.025074053373654,0,2.76793777313601,0,0,0,0,-6.956472743746158,0,-3.666089695215481,0,0,0,.7625949679500863,-24.34556189732497,0,0,0,0,0,0,0,0,0,0,.526600502329506,0,-.4821290929361566,0,0,0,0,0,0,0,0,-4.6649958452165174,-3.0517482900995345,1.984626953696346,0,-1.0316466366784853,0,0,0,0,8.611515931476989,0,0,0,-1.9929316536778008,0,0,2.6303265681136443,
0,-2.5864212275508502,0,-.45624005456471184,0,0,0,-5.137664631006443,0,-5.030767718588454,0,0,0,8.856804711317094,0,0,0,0,0,-14.190661582318839,-.30251385938135655,0,.5056053186313525,0,0,0,0,0,0,0,.32598135020901964,0,0,-.48210830700114493,0,2.767937773136009,0,23.89749061092735,0,0,0,0,-3.562554994614421,0,-4.767853603587213,0,0,0,-18.981179897321056,-2.402881797243783,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.3938391951518885,0,0,0,0,-4.328252602226377,0,0,0,0,0,-1.1561362525501364,0,2.914085553759186,0,
0,0,7.364788380170566,0,0,0,0,0,0,0,0,0,0,0,-.30203572748884366,-4.53167164134022,-2.364985272788232,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.7416207394217168,0,-9.887076968798645,-.3725393798422325,0,0,0,0,0,15.364943583337077,0,-.34953369914948773,0,0,0,0,-1.2758439128852457,-7.062869175052256,0,0,0,0,0,0,10.09238138586271,0,0,0,1.2219705867772885,-1.0938022819619972,0,0,0,0,0,0,0,0,0,0,0,1.9845090176544973,-2.5933369459276094,-9.581795031034833,0,-1.0226400290888074,0,0,0,0,-1.9929316536778023,
0,0,0,11.563434018792798,0,0,-3.5279795112688106,-1.9601274018631154,0,-1.1115634184949998,0,0,.012061685572830383,0,0,0,0,-.31032991186604814,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.790625325186885,0,23.56863741188998,1.4306164647164774,0,0,0,0,0,-.34953369914948784,0,40.93614496285313,0,0,0,0,3.383064376837781,-8.535860702273451,0,0,0,0,0,0,-24.94637946018011,0,0,1.5115878615518188,0,0,0,2.427242245496156,0,-2.4082120982500483,0,0,0,0,-10.908308345445088,0,0,0,0,0,0,0,0,0,0,-6.956472743746159,
0,-3.562554994614422,0,0,0,0,14.973493638414187,0,0,0,0,0,5.9798036858758215,0,0,0,0,0,0,0,0,0,-3.1832272492434113,2.8650720944046686,0,0,0,0,0,0,0,0,0,0,0,-2.64504756673853,3.4219381318787,3.48263627032844,0,-7.8607491127003595,0,0,0,0,2.6303265681136447,0,0,0,-3.52797951126881,0,0,19.009759307286526,.019491486404204172,0,2.892220577807805,0,0,-5.131441113295261,0,0,0,0,.7995714421043684,0,0,0,-1.2231977092230706,1.1013046226051508,0,0,0,0,.28364688645738556,0,-.4746548341495207,0,0,0,0,0,0,0,-.308348220108007,
0,0,.44992579954095513,0,-3.666089695215482,0,-4.767853603587213,0,0,-1.9601274018631154,0,0,.019491486404204172,6.723080780882198,0,1.1123715922430912,0,0,2.5242770555815763,0,0,0,0,.30811778150048874,0,0,0,0,0,.7566478281974882,0,-.6922621250485421,0,0,0,0,0,0,-1.2208661301048662,0,0,0,0,0,0,0,0,2.390938453236905,0,-2.5864212275508502,0,0,0,0,0,0,0,0,11.203964147986238,0,-.7208010472032791,0,0,-6.647154260164074,.8768443360098152,-5.9082933906749915,-1.319221853512467,0,0,0,0,-3.8881227137639782,
.8131888824737488,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.315721414418215,0,0,0,0,0,0,-1.2758439128852475,-1.1115634184949998,3.3830643768377806,0,2.8922205778078056,1.1123715922430915,0,11.586749081817445,-.19453471429443292,0,-2.891421505040992,0,0,0,0,6.206016607484574,0,0,0,0,0,-3.8614537447327,0,-2.9720447324699717,0,0,0,0,0,0,0,0,0,0,0,0,0,-.6996809284240602,0,0,0,-.4562400545647116,0,0,-7.062869175052256,0,-8.535860702273451,0,0,0,-.7208010472032788,-.19453471429443292,11.351959529214687,0,0,0,
1.5056586820551585,0,1.4114063891375705,.9951585451229086,0,0,-8.76274381473226,0,0,0,-2.1542453368272843,0,14.040297874485457,0,0,0,0,9.638245182590472,0,0,0,0,0,0,0,0,0,0,.7625949679500879,0,-18.981179897321056,0,0,0,0,5.979803685875821,0,0,0,0,0,26.86904337850448,0,0,0,0,0,0,0,0,0,3.182010140230689,-2.857578752658961,0,0,0,0,-5.723114803061301,0,9.379187920948848,0,0,0,0,0,0,0,5.30558946792944,0,0,-9.7961615650569,0,-24.34556189732497,0,-2.402881797243783,0,0,.012061685572830383,0,0,-5.131441113295261,
2.5242770555815772,0,-2.8914215050409924,0,0,51.864886634223375,0,0,0,0,-.8017860953811167,0,0,0,0,0,0,0,0,0,0,-.3752438168098988,0,0,0,1.2337151034028464,3.606056658222469,0,0,0,0,0,0,0,-2.0855334340036786,0,0,0,-.30203572748884366,0,0,0,0,0,0,-6.647154260164075,0,0,0,0,9.62203225566291,0,5.86216640728629,2.3229618257167797,0,0,0,0,0,0,-1.6689014750748405,0,1.4891169581080914,0,0,0,0,0,0,0,0,0,0,0,0,0,-.5565434225875394,0,0,0,-5.137664631006443,0,-4.53167164134022,0,0,0,0,0,0,.8768443360098157,0,
1.505658682055159,0,0,0,14.901788780209323,4.808487521891047,8.529167134070601,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.1501123854625832,0,0,0,0,0,0,-5.5986654340982245,0,-10.277156300204906,0,0,0,-2.3649852727882337,0,0,0,0,0,0,-5.9082933906749915,0,0,0,0,5.86216640728629,4.808487521891047,24.414418065974118,10.207409719119422,0,0,0,0,0,0,-1.5663070641668646,0,1.3986755339267716,0,0,0,0,0,0,2.1179980670015657,0,0,0,0,0,0,0,0,-13.256895500651645,0,-5.030767718588454,0,0,0,0,0,0,0,0,-1.3192218535124667,0,
1.4114063891375705,0,0,2.322961825716781,8.529167134070601,10.207409719119422,21.400574758500536,0,0,0,0,-2.098436240426845,-.7951711015183778,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-31.345518355915978,0,0,0,0,0,0,10.092381385862708,-.3103299118660482,-24.946379460180108,0,.7995714421043685,.30811778150048874,0,6.206016607484574,.9951585451229072,0,-.8017860953811171,0,0,0,0,34.06347913230373]),b=[-7.071067811865543,-7.07106781186552,-7.071067811865481,-7.07106781186548,-7.071067811865479,-7.071067811865479,
-7.071067811865479,-7.071067811865477,-7.071067811865475,-7.071067811865475,-7.071067811865475,-7.071067811865471,-7.07106781186547,-7.07106781186547,-7.0710678118654675,-7.071067811865464,-7.071067811865459,-7.071067811865459,-6.661338147750939E-14,-5.240252676230739E-14,-1.7763568394002505E-14,-1.509903313490213E-14,-1.509903313490213E-14,-1.4210854715202004E-14,-7.105427357601002E-15,-6.217248937900877E-15,-6.217248937900877E-15,-5.329070518200751E-15,-5.329070518200751E-15,0,1.7763568394002505E-15,
1.7763568394002505E-15,2.6645352591003757E-15,2.6645352591003757E-15,2.6645352591003757E-15,5.329070518200751E-15,8.881784197001252E-15,8.881784197001252E-15,1.2434497875801753E-14,1.4210854715202004E-14,1.9539925233402755E-14,2.1316282072803006E-14,3.019806626980426E-14,4.707345624410664E-14],c=Array(44);for(var d=0;44>d;d++)c[d]=!1;d=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let g=0;30>=g;g++){var e=Array(44);switch(g){case 0:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);
break;case 1:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[20,15,29,5,13,28,33,25,16,38,27,31,12,40,9,14,24,41,21,10,35,37,19,32,0,2,6,39,7,1,4,43,17,22,36,26,8,34,30,11,42,18,23,3]);break;case 2:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[28,20,33,3,25,4,36,16,43,7,39,29,42,27,17,14,24,21,37,13,12,6,8,0,30,26,1,2,40,18,41,-41,35,-35,10,-10,5,-5,19,-19,9,-9,38,-38,22,11,-11,32,23,
-23,31,-31,15,-15,34,-34,41,35,10,5,19,9,38,23,31,15,34,-30,34].filter(h=>-1<h));break;case 3:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[36,10,37,0,6,1,35,26,40,38,31,3,8,23,28,34,13,14,21,27,39,11,15,18,30,17,42,19,33,5,43,9,7,20,29,4,24,41,-41,25,-25,12,-12,32,-32,22,-22,16,2,-2,41,25,-40,25,-42,25,-39,25,12,-18,12,32,-24,32,-37,32,22,40,-19,40,-5,40,39,24,19].filter(h=>-1<h));break;case 4:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,
[42,16,36,22,4,8,41,12,1,10,25,31,2,28,5,29,40,37,6,24,18,43,0,34,11,7,14,15,27,33,9,35,38,39,17,30,3,32,13,20,21,3,20,19,23,26,20,3,20,3,20,20,3].filter(h=>-1<h));break;case 5:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,[16,18,0,28,42,1,29,36,26,12,19,32,27,40,8,13,31,14,37,39,9,35,24,6,43,25,23,30,22,21,15,5,38,33,20,4,7,3,-3,11,2,-2,17,10,41,34,3].filter(h=>-1<h));break;case 6:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);
break;default:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=d.compute_forces(a,e,b,c,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(44==b.length&&44==e.length);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,e);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,
e,f,c));f=mpl$lab$engine2D$ComputeForces.maxAccel(f,c,44);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>f);e=mpl$lab$engine2D$UtilEngine.maxSize(e);switch(g){case 0:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(10.9>e);break;case 1:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(10.1>e);break;case 2:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(9.5>
e);break;case 3:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(10.1>e);break;case 4:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(11.5>e);break;case 5:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(11.5>e);break;default:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(9.4<e)}}}static testMatrix23_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix23_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(44,[27.414885463757365,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.010587753898783,-22.03087788332417,7.220160495885183,0,0,0,0,0,2.4535739374819943,-9.445121406795906,4.581118882279485,0,0,0,0,6.19797704862407,0,0,0,0,0,0,.5637034175704319,0,0,0,0,0,0,0,0,0,0,5.480402744533718,0,0,0,0,0,0,0,0,0,.41208885045302557,-2.337151327337315,0,0,0,0,0,0,0,0,0,0,-.42665193568298243,-7.897227155254729,
0,0,0,3.001041717148918,0,0,0,0,0,0,0,0,0,0,0,0,0,.97250001861966,0,0,0,0,0,0,0,0,0,-1.8386120331892102,1.7728620247658535,0,-1.7778577990214717,0,-1.5227677604968237,0,0,0,0,0,0,0,0,0,0,1.7653588355126755,0,0,0,0,2.989738752284076,0,0,0,0,0,0,0,0,0,0,0,0,0,-.19987617879538067,0,0,0,0,0,0,0,0,2.117898082704092,-1.9200347548314576,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5.179273606351559,0,0,-3.2200368206843706,0,0,0,0,0,0,-1.1678765218845788,0,0,0,0,0,0,1.169586816171135,0,0,.49515294711259883,-.5029222148820003,
0,0,0,0,0,0,0,.5435068954446813,3.221981566635981,0,0,-5.177655238769296,0,0,0,0,0,0,0,0,0,0,0,1.0237769727473522,.3674054600600527,0,0,0,0,0,0,0,0,0,0,0,0,0,.321971901110218,0,-.4320904286490317,-1.0232830692659078,.22413411647836765,0,0,0,0,0,0,0,0,0,0,-.12504316462632087,0,-.32133027367253075,0,0,0,0,0,0,0,0,0,0,0,.36740546006005237,6.523401174032174,0,0,0,0,0,0,0,0,0,0,0,0,0,-3.0220626724244877,0,-5.916730713790652,-.3720364493045302,-2.0971134215319864,0,0,0,0,0,0,0,0,0,0,1.1677726593625142,
0,3.018687173040108,0,0,0,0,0,0,0,0,0,0,-3.22003682068437,0,0,3.976395070726247,0,0,0,0,0,0,2.0513579692343398,0,0,0,0,0,0,-2.0533369612401344,0,0,-1.4933050467980296,-.8838840342567085,0,0,0,0,0,0,0,-1.5334636606892964,-3.9774674520321187,0,0,3.218041681401548,0,0,0,0,0,0,0,.5637034175704317,0,0,0,0,0,0,2.5005873355808044,0,0,0,0,0,0,0,0,0,0,-1.8878990752330078,0,0,0,0,0,0,0,0,0,-.1377519589015933,-1.6467896415078167,0,0,0,0,0,0,0,0,0,0,.13928503904238332,2.7146969354878205,0,0,0,0,0,0,0,0,0,0,6.101032013147764,
0,0,-.69748442127552,0,0,0,0,0,0,-4.453711591717501,0,0,0,0,0,4.468253505692844,0,0,0,0,0,0,0,0,-3.607727804825609,0,0,0,0,0,0,3.5973144605037155,0,0,0,0,0,0,0,0,0,0,0,0,3.360247405956431,.8025348145355253,0,0,0,0,0,0,0,0,2.195360923327938,0,0,0,0,0,0,0,-2.19558355692148,0,0,0,0,0,0,-1.7616071501321222,1.6118911169179237,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.802534814535526,7.671926056611185,0,0,0,0,0,0,0,0,-5.893893033117846,0,0,0,0,0,0,0,5.894593275175072,0,0,0,0,0,0,4.736161240964868,-4.331455940556466,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.6974844212755196,0,0,8.368881408176726,0,0,0,0,0,0,5.9501787334440674,0,0,0,0,0,-5.962506010518288,0,0,0,0,0,0,0,0,4.80746148154245,0,0,0,0,0,0,-4.77691984553238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.4711781561541004,0,-.8016522728072952,0,0,0,0,0,0,0,0,0,0,0,0,2.062117848086607,0,0,0,0,0,0,0,-.5535847536111458,0,0,0,0,0,0,0,0,0,0,0,-1.167876521884579,0,0,2.0513579692343398,0,0,0,0,0,0,2.8756415254390832,0,0,0,0,0,0,-2.8767308900157564,0,0,-2.4470757024295677,.3214613587631265,
0,0,0,0,0,0,0,-2.4778800884595027,-2.051527362286353,0,0,1.1668457905442828,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.8016522728072949,0,6.806857817085049,0,0,0,0,0,0,0,0,0,0,0,0,-4.792796366247321,0,0,0,0,0,0,0,1.2881077579976976,0,0,0,0,0,0,0,0,0,.97250001861966,0,0,0,0,0,0,0,0,0,0,0,0,0,2.3620429516649377,0,0,0,0,0,0,0,0,0,1.2593088405495045,-1.216122265655169,0,1.2134298175503484,0,-1.7107198525215912,0,0,0,0,0,0,0,0,0,0,-1.209130693741777,0,0,0,0,-.19987617879538033,0,0,0,0,0,0,0,0,0,0,0,0,0,4.220773722638255,
0,0,0,0,0,0,0,0,-2.9351296434685685,2.663312603049688,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16.673877553418393,0,0,-.7602092062133036,-5.940433785231493,-1.202769589815432,0,0,0,0,0,0,0,0,-4.925969892133299,-1.2426486532436376,0,0,0,0,-10.291051835565852,1.766087406339786,2.793311532404026,0,0,9.26056462124112,0,5.480402744533717,0,0,0,0,0,0,-1.8878990752330074,-4.453711591717501,0,0,5.9501787334440674,0,0,0,0,0,0,19.186332205135333,0,0,0,0,0,-10.027983909595937,0,0,
0,-1.4699771154881716,.16479520069961628,0,0,0,2.3308335814168757,0,0,0,0,0,0,-.8496667366152382,-12.33268009268305,0,0,0,0,0,0,.32197190111021795,-3.022062672424488,0,0,0,2.195360923327938,-5.893893033117846,0,0,0,0,0,0,0,0,12.209612905492255,0,2.6920293420069257,-.3199365822119,.17891154118127395,0,0,0,-9.608359475796776,0,0,0,0,0,0,-2.583411862302168,2.4335932437502596,-2.600073386056123,0,0,0,0,0,0,0,0,0,0,1.1695868161711354,0,0,-2.053336961240134,0,0,0,0,0,0,-2.8767308900157564,0,0,0,-.7602092062133035,
0,0,5.788231946807153,2.8817573308979765,-.8763916689148374,2.4478686161914434,-.32112481166475704,0,0,0,0,0,0,0,5.771666745836684,2.0535069239150086,0,0,-1.1685550916626137,0,0,-.3854686384491458,0,0,-2.8840746987088295,0,0,0,0,0,-.4320904286490317,-5.916730713790651,0,0,0,0,0,0,0,0,0,0,0,-5.940433785231493,0,2.6920293420069257,2.881757330897977,21.456370430638163,-1.4439219594196349,1.8688359952039124,0,0,0,0,0,0,0,0,4.710196968450781,0,-1.0408466710029007,0,-2.6890497285036954,0,0,-4.149539370141845,
0,0,-16.076820075678185,0,0,0,0,0,-1.0232830692659078,-.3720364493045304,0,0,0,0,0,0,0,0,0,0,0,-1.202769589815432,0,-.3199365822119,-.8763916689148374,-1.4439219594196353,4.603352344398338,-.22190748618715073,0,0,0,0,0,0,0,0,-1.4320970317181392,0,.12359021579319274,0,.31929797681360106,0,0,-1.7472783189597236,0,0,1.879129238125827,0,0,0,0,.49515294711259916,.22413411647836773,-2.0971134215319864,-1.4933050467980298,0,0,0,0,0,0,-2.4470757024295677,0,0,0,0,0,.1789115411812739,2.4478686161914434,1.8688359952039124,
-.22190748618715084,3.8867120047136168,-.23343301196893151,0,0,0,0,0,0,0,2.1576485410049,1.4932503658221954,-1.4010499382740653,0,-.6719453729018806,0,0,0,0,0,0,0,0,0,0,-.5029222148820003,0,0,-.8838840342567084,0,4.468253505692843,0,0,-5.962506010518288,0,.32146135876312654,0,0,0,0,-10.027983909595939,0,-.32112481166475715,0,0,-.23343301196893163,11.413167352720063,0,0,0,0,0,0,0,-.23971334249845877,-1.461367869443476,0,0,.503363236602314,0,0,0,2.3181654582432167,0,0,0,0,-1.8386120331892104,2.117898082704092,
0,0,0,0,0,0,0,0,0,0,0,0,1.2593088405495043,-2.935129643468569,0,0,0,0,0,0,0,0,9.612895160060186,-2.302179574286397,0,.9139463773824033,0,-.9178011624467466,0,0,0,0,0,0,0,0,0,0,-4.49303279648432,0,0,0,1.7728620247658533,-1.920034754831458,0,0,0,0,0,0,0,0,0,0,0,0,-1.216122265655169,2.663312603049688,0,0,0,0,0,0,0,0,-2.302179574286396,8.82417633823486,0,-4.412919499276568,0,-.582241174386449,0,0,0,0,0,0,0,0,0,0,.803921044699783,0,0,0,0,0,0,0,0,0,0,0,-2.195583556921481,5.894593275175071,0,2.062117848086607,
0,-4.792796366247322,0,0,0,0,-9.608359475796778,0,0,0,0,0,0,0,15.4143333572095,0,0,0,0,0,0,2.9099699371253456,-2.1075914326959166,0,0,0,0,0,0,0,0,.4120888504530254,-1.7778577990214721,0,0,0,0,0,-.1377519589015932,0,0,0,0,0,0,0,1.2134298175503488,0,0,-1.4699771154881713,0,0,0,0,0,0,.9139463773824031,-4.412919499276568,0,6.459955937078908,-.8867960649867975,.5854138503780637,0,0,0,0,0,0,0,0,0,-2.0461843386190606,.42848581010369124,0,-3.010587753898783,-2.337151327337315,0,0,0,0,0,0,-1.6467896415078167,
0,0,0,0,0,0,0,0,0,0,.16479520069961762,0,0,0,0,0,0,0,0,0,-.8867960649867974,6.139158491040831,2.8530405879041796,-3.80153705864319,0,0,0,0,0,0,0,-1.48185937153493,.8906120095861346,.13369438508784803,0,-22.030877883324166,0,-1.5227677604968237,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.7107198525215912,0,0,0,0,0,0,0,0,0,-.9178011624467466,-.5822411743864491,0,.5854138503780633,2.8530405879041796,26.68732068747449,-7.728011893797863,0,0,0,0,0,0,0,-5.041527378248729,0,.9110139754932856,0,7.220160495885182,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4.925969892133299,0,0,0,0,0,0,0,0,0,0,0,-3.8015370586431905,-7.728011893797863,9.892362514143153,0,0,0,0,0,3.8436324187733795,-.3250620862553747,2.2696854935140784,0,0,-1.433775934268895,0,0,0,0,.5435068954446817,0,0,-1.533463660689297,0,0,0,0,0,0,-2.4778800884595023,0,0,0,-1.2426486532436374,0,0,5.771666745836685,4.710196968450782,-1.4320970317181392,2.1576485410049004,-.23971334249845866,0,0,0,0,0,0,0,6.09889489849618,1.5334250856769394,0,0,-.5427364294965527,0,0,-.6301751347343052,
0,0,-4.712072805462519,0,0,0,0,3.221981566635981,0,0,-3.9774674520321187,0,-3.6077278048256103,0,0,4.80746148154245,0,-2.051527362286352,0,0,0,0,2.3308335814168757,0,2.053506923915009,0,0,1.4932503658221956,-1.461367869443476,0,0,0,0,0,0,0,1.5334250856769391,11.629888869455636,0,0,-3.2199858883540777,0,0,0,-7.629616590648307,0,0,0,0,0,0,0,-.12504316462632087,1.1677726593625142,0,0,0,-1.761607150132122,4.7361612409648695,0,0,0,0,0,0,0,0,-2.583411862302167,0,-1.0408466710029,.12359021579319274,-1.401049938274065,
0,0,0,2.909969937125346,0,0,0,0,0,0,8.35086300950586,-6.762840464311448,-.32668434515202605,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.6118911169179242,-4.3314559405564665,0,-.5535847536111458,0,1.2881077579976972,0,0,0,0,2.4335932437502605,0,0,0,0,0,0,0,-2.1075914326959158,0,0,0,0,0,0,-6.762840464311448,8.211808709012352,0,0,0,0,0,0,0,0,0,0,0,-5.177655238769296,-.32133027367253053,3.018687173040108,3.2180416814015476,0,0,0,0,0,0,1.166845790544283,0,0,0,0,0,-2.600073386056123,-1.1685550916626137,-2.6890497285036945,
.31929797681360095,-.6719453729018805,.503363236602314,0,0,0,0,0,0,0,-.5427364294965527,-3.2199858883540773,-.32668434515202605,0,7.774141745589526,0,0,0,0,0,0,2.4535739374819943,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10.291051835565852,0,0,0,0,0,0,0,0,0,0,0,0,0,3.8436324187733795,0,0,0,0,0,16.386207792644534,-4.007784076892848,0,0,0,-3.585644285519887,-9.445121406795906,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.766087406339786,0,0,0,0,0,0,0,0,0,0,0,0,0,-.32506208625537436,0,0,0,0,0,-4.007784076892847,27.321107765867925,
0,0,0,-4.609254673425197,4.581118882279486,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.793311532404026,0,0,-.3854686384491455,-4.149539370141845,-1.7472783189597236,0,0,0,0,0,0,-1.4818593715349302,-5.041527378248729,2.2696854935140784,-.6301751347343052,0,0,0,0,0,0,7.106184841119606,0,0,4.149092730943441,0,-.42665193568298276,0,0,0,0,0,0,.13928503904238326,3.597314460503715,0,0,-4.77691984553238,0,0,0,0,0,0,-.8496667366152382,0,0,0,0,0,2.3181654582432163,0,0,0,-2.04618433861906,.8906120095861347,0,0,0,-7.629616590648306,
0,0,0,0,0,0,9.655395784754894,-1.2118467011799527,0,0,-7.897227155254729,1.765358835512675,0,0,0,0,0,2.7146969354878205,0,0,0,0,0,0,0,-1.2091306937417767,0,0,-12.33268009268305,0,0,0,0,0,0,-4.493032796484321,.8039210446997831,0,.428485810103691,.13369438508784748,.9110139754932856,0,0,0,0,0,0,0,0,0,-1.2118467011799532,21.264644798270666,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9.260564621241118,0,0,-2.8840746987088304,-16.07682007567818,1.8791292381258264,0,0,0,0,0,0,0,0,-1.433775934268895,-4.712072805462519,
0,0,0,0,-3.5856442855198867,-4.609254673425198,4.149092730943442,0,0,20.250873990976437]),b=[-18.208771552344952,-7.335832168696026,-7.071103109325087,-7.07109623632823,-7.071074651967621,-7.0710678118654755,-7.071067811865464,-7.071061892144378,-7.070980560945015,-7.0706672770573,-7.069673612417345,-7.067113120866276,-7.05287170126272,-7.045869440391552,-7.0409522421754005,-7.036173924404868,-7.0083619037924425,-6.982858739316756,-.0026386209284199325,-3.6434075302249624E-4,-6.2066515319259E-5,-4.125621125616874E-5,
2.2695871848554816E-8,2.2695878065803754E-8,7.995491355217155E-6,1.0291040609899937E-5,3.331142173923496E-5,3.3313696322423425E-5,4.043384973151376E-5,1.0691462020595566E-4,4.938156677813943E-4,6.360229459612121E-4,.0011077511247332694,.002930333974433985,.00347200758240529,.003900487634988181,.003978161277019332,.026930857293892885,.030637128352484666,.03063712835248822,.03912928815505978,.2563724048388609,.28121608178816615,.7534374908426562],c=Array(44);for(var d=0;44>d;d++)c[d]=!1;d=new mpl$lab$engine2D$ComputeForces("T",
new mpl$lab$util$RandomLCG(99999));for(let g=0;20>=g;g++){var e=Array(44);switch(g){case 0:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=d.compute_forces(a,e,b,c,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,
f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(44==b.length&&44==e.length);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,e);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,e,f,c));f=mpl$lab$engine2D$ComputeForces.maxAccel(f,c,44);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>
f);e=mpl$lab$engine2D$UtilEngine.maxSize(e);switch(g){case 0:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(16.6>e);break;default:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(16.5<e)}}}static testMatrix24_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix24_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(23,
[27.892400774463088,0,0,0,0,0,0,-6.230431677828652,0,0,0,0,-27.882893674773086,0,-4.542833933237243,0,0,0,0,0,0,0,0,0,2.2670970180659054,-.7567128279462625,0,1.2323600883731283,-1.1783015390344096,0,0,0,0,0,-1.6009197023013324,0,0,-2.26581916585393,0,.258609391617948,-.08115036477049442,0,0,0,0,0,0,-.7567128279462622,3.092753373281611,0,-1.5688580795485185,1.5000387525523968,0,0,0,0,0,-.0913652228408558,0,0,.7550861555537789,0,-.3298741216209521,-2.026110129569325,0,0,0,0,0,0,0,0,6.555356725241194,
0,0,0,0,-2.951443391869017,0,0,0,0,1.2061779835229234,0,0,0,0,-6.493258506204614,0,0,0,0,0,1.2323600883731283,-1.5688580795485185,0,2.0784529491191224,-.15475267269311166,0,0,0,0,0,-.6149357162048998,0,0,-1.2308899434858298,0,-.6969728268682727,.7929588592281678,0,0,0,0,0,0,-1.1783015390344098,1.5000387525523964,0,-.15475267269311155,1.9804914381701506,0,0,0,0,0,.5885212613943088,0,0,1.1774561196612559,0,-1.1661275343304178,-.7576147914382453,0,0,0,0,0,0,0,0,0,0,0,10.292418982678207,0,0,.184868594564501,
0,0,0,-3.2182879569555296,0,0,0,0,0,0,0,0,0,-6.230431677828652,0,0,0,0,0,0,9.26508912294607,0,0,0,0,6.226116265964512,0,2.060978962538684,0,0,0,0,0,0,0,0,0,0,0,-2.951443391869016,0,0,0,0,10.464971041476296,0,0,0,0,-6.878240236988056,0,0,0,0,2.863825881038846,0,0,0,0,0,0,0,0,0,0,.184868594564501,0,0,9.362616689367966,-.8487167062531635,0,0,-6.784404717681117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.8487167062531639,9.265454838036824,0,0,0,0,-2.221775584864865,0,0,-1.6323538318630928,0,0,0,0,0,-1.6009197023013326,
-.09136522284085591,0,-.6149357162049001,.5885212613943088,0,0,0,0,0,6.864860309054555,-2.0118562583721564,0,1.6002818351192647,-1.1103561191502318,-.12924665289052895,1.5313172764156802,0,0,0,0,0,-27.88289367477309,0,0,0,0,0,0,6.226116265964512,0,0,0,-2.0118562583721573,30.674999219611777,0,4.5376315566251355,-.3607488023232541,0,.38115526623322643,0,0,0,0,0,0,0,0,1.2061779835229236,0,0,-3.21828795695553,0,-6.878240236988056,-6.784404717681117,0,0,0,15.202703373298345,0,0,0,0,-1.1498008263254342,
0,0,0,0,-4.542833933237246,-2.26581916585393,.755086155553779,0,-1.2308899434858298,1.1774561196612559,0,2.060978962538684,0,0,0,1.6002818351192651,4.537631556625135,0,7.569387058969998,0,-.25864710866922813,.08197231406457867,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2.2217755848648646,-1.1103561191502314,-.3607488023232545,0,0,4.0550877792199715,0,-1.8692574798258648,.046091813512461055,0,0,0,0,0,.25860939161794816,-.3298741216209522,0,-.6969728268682727,-1.1661275343304178,0,0,0,0,0,-.12924665289052908,0,
0,-.2586471086692282,0,3.784062411903135,.1665256491417546,0,1.0047654570596882,2.311636777044618,-.003508566705319127,1.3033627532796106,0,-.08115036477049442,-2.0261101295693247,0,.7929588592281677,-.7576147914382452,0,0,0,0,0,1.53131727641568,.38115526623322626,0,.08197231406457883,-1.869257479825865,.16652564914175466,3.373432833894576,0,0,0,0,0,0,0,0,-6.493258506204614,0,0,0,0,2.863825881038846,0,-1.6323538318630924,0,0,-1.1498008263254338,0,.04609181351246083,0,0,9.274034848042707,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0047654570596882,0,0,2.960012638443954,2.003478583973317,.9599905476993722,.0034564932287352024,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2.3116367770446185,0,0,2.003478583973317,2.957439579007631,-.0026016352640624296,.9513593597702512,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-.0035085667053189606,0,0,.9599905476993722,-.0026016352640624296,2.9600070693819194,1.9974148864184846,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.3033627532796106,0,0,.003456493228735369,.9513593597702511,1.9974148864184846,
2.9453177529600003]),b=[-7.074506590979136,-7.0710678118654755,-7.0710678118654755,-6.914236058013229,-6.765034480758734,-6.765034480758734,-6.083465377072029,-5.85964898993373,-4.6651058518460164,-.8454871964947985,-.40594976013170125,-3.103838447797713E-4,.005005140459951818,.04739999320475974,.23813791768033798,.3222282506243257,.6138827774375333,.8937634334951641,3.2408071050424527,-9.225207869949514E-4,-9.225207854006712E-4,9.284166964205198E-4,9.28416698019241E-4],c=[!1,!1,!1,!1,!1,!1,!1,!1,
!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],d=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let g=0;20>=g;g++){var e=Array(23);switch(g){case 0:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=
d.compute_forces(a,e,b,c,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(23==b.length&&23==e.length);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,e);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,
e,f,c));f=mpl$lab$engine2D$ComputeForces.maxAccel(f,c,23);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>f);e=mpl$lab$engine2D$UtilEngine.maxSize(e);switch(g){case 0:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(15.5>e);break;default:module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(15.4<e)}}}static testMatrix25_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix25_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(14,[3.5745763362333545,1.4813679726385824,1.5803850636054817,0,0,0,0,-3.5803850636005627,-1.5803850636005625,-1.4813679726435707,-2.3831435123204035E-12,0,1,0,1.4813679726385822,1.0900012642162251,-.5175459708792775,0,0,0,0,-1.482454029119803,.5175459708801972,-1.090001264217158,-2.3831435123204035E-12,0,1,0,1.5803850636054815,-.5175459708792773,3.5862068965566545,0,0,0,0,-1.5862068965517242,-3.586206896551724,
.5175459708742778,0,0,-1,0,0,0,0,3.586206896550574,1.586206896550575,-1.5862068965517233,-3.586206896551724,0,0,0,0,0,0,1,0,0,0,1.586206896550575,3.586206896550576,-3.586206896551724,-1.586206896551725,0,0,0,0,0,0,-1,0,0,0,-1.5862068965517233,-3.586206896551724,3.5862068965528726,1.586206896552874,0,0,0,0,0,0,1,0,0,0,-3.586206896551724,-1.586206896551725,1.586206896552874,3.586206896552875,0,0,0,0,0,0,-1,-3.5803850636005623,-1.4824540291198027,-1.5862068965517242,0,0,0,0,3.586206896546794,1.586206896546794,
1.4824540291248025,0,0,-1,0,-1.5803850636005623,.5175459708801972,-3.586206896551724,0,0,0,0,1.586206896546794,3.586206896546794,-.5175459708751975,0,0,1,0,-1.4813679726435707,-1.0900012642171577,.5175459708742778,0,0,0,0,1.4824540291248025,-.5175459708751975,1.0900012642180903,2.3831435123204035E-12,0,-1,0,-2.3831435123204035E-12,-2.3831435123204035E-12,0,0,0,0,0,0,0,2.3831435123204035E-12,3.093735780862267,-.15531667197214424,.022274747140121797,1.3464020272330979,0,0,0,0,0,0,0,0,0,0,-.15531667197214424,
3.257353898058936,1.963091579725481,1.0829873182265197,1,1,-1,0,0,0,0,-1,1,-1,.022274747140121797,1.963091579725481,3.005293222668998,-.1553166724675945,0,0,0,1,-1,1,-1,0,0,0,1.3464020272330979,1.0829873182265197,-.1553166724675945,7.557387862727747]),b=[-2.8354858962890304E-10,-2.835485896288947E-10,-1.44032824160894E-23,-1.8004103020096633E-24,-7.716044151468356E-25,7.716044151474067E-25,1.8004103020102352E-24,6.172835321167163E-24,1.4403282416069786E-23,2.835485896288947E-10,-4.926858550202041,
-.9103527204532552,-.7663596612753361,7.222901656807832],c=[!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!0,!0,!0,!0],d=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let g=0;30>=g;g++){var e=Array(14);switch(g){case 0:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_PRE_ORDERED,
[11,12,10,13,6,5,0,9,4,7,1,3,2,-2,8,9,-9,2,-2,9,-9,2,-2].filter(h=>-1<h));break;case 2:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=d.compute_forces(a,e,b,c,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(14==b.length&&
14==e.length);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,e);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,b);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-8,e,f,c));f=mpl$lab$engine2D$ComputeForces.maxAccel(f,c,14);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-8>f);e=mpl$lab$engine2D$UtilEngine.maxSize(e);
0==g?module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2.65>e):module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2.63<e)}}static testMatrix26_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix26_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(4,[4.917491749174901,-1.6909937783360363E-7,3.333333502432712,1.5841584158415662,
-1.6909937738951442E-7,4.933333333333353,1.5999999999999823,3.333333164233956,3.3333335024327124,1.599999999999982,4.933333333333352,1.6909937772258132E-7,1.5841584158415665,3.3333331642339554,1.6909937761155902E-7,4.917491749174898]),b=[-1.3501442501864875,1.3015946886900078,-1.3501446747723067,1.3015945549350354],c=[!0,!0,!0,!0],d=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let f=0;30>=f;f++){const g=Array(4);switch(f){case 0:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);
break;case 1:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var e=d.compute_forces(a,g,b,c,!1,.1*f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,e);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(4==b.length&&4==g.length);e=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,
g);e=mpl$lab$engine2D$UtilEngine.vectorAdd(e,b);const h=mpl$lab$engine2D$ComputeForces.maxAccel(e,c,4),k=mpl$lab$engine2D$UtilEngine.maxSize(g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(2E-6,g,e,c));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(2E-6>h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(.41>
k)}}static testMatrix27_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix27_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.0990277097284387,3.500191511238789E-4,1.3095026290678669,-.0024406027796634766,0,1.4037887002254656E-7,0,0,0,-1.4037887002254656E-7,0,1.4037887002254656E-7,0,0,0,-1.4037887002254656E-7,3.500191511238789E-4,3.0000012371628757,
-.0024406027796634775,1.9999913735487218,-1,-.9999999999999901,0,0,1,.9999999999999901,-1,-.9999999999999901,0,0,1,.9999999999999901,1.3095026290678669,-.0024406027796634775,7.814678846675021,.017017760053914734,0,0,-1,-1,0,0,0,0,1,1,0,0,-.0024406027796634766,1.9999913735487218,.017017760053914734,3.0000601502543525,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,3.58620660611264,2.0714674517937617,0,0,-3.5862068965516647,-2.0714671572885903,-1.5862068965516647,-.026463464886880783,0,0,1.5862066061126399,.026463759392052366,
1.4037887002254656E-7,-.9999999999999901,0,0,2.0714674517937617,1.4439098166171171,0,0,-2.071467572122881,-1.4439096946033902,-.07146757212290011,.5747353709165186,0,0,.07146745179378135,-.574735248902792,0,0,-1,0,0,0,3.586206896551724,-1.5862068965517242,0,0,0,0,-3.586206896551724,1.5862068965517242,0,0,0,0,-1,0,0,0,-1.5862068965517242,3.586206896551724,0,0,0,0,1.5862068965517242,-3.586206896551724,0,0,0,1,0,0,-3.5862068965516647,-2.071467572122881,0,0,3.5862071869907224,2.071467277617676,1.5862071869907224,
.02646358016191208,0,0,-1.5862068965516647,-.02646387466711675,-1.4037887002254656E-7,.9999999999999901,0,0,-2.0714671572885903,-1.4439096946033905,0,0,2.0714672776176757,1.4439095725896973,.07146727761769563,-.5747354878054005,0,0,-.07146715728861014,.5747353657917075,0,-1,0,0,-1.5862068965516647,-.07146757212290045,0,0,1.5862071869907224,.07146727761769578,3.5862071869907224,2.0264635801618924,0,0,-3.5862068965516647,-2.026463874667097,1.4037887002254656E-7,-.9999999999999901,0,0,-.026463464886880735,
.5747353709165186,0,0,.026463580161911932,-.5747354878054006,2.0264635801618924,1.407402580388301,0,0,-2.0264634648868607,-1.4074026972771831,0,0,1,0,0,0,-3.586206896551724,1.5862068965517242,0,0,0,0,3.586206896551724,-1.5862068965517242,0,0,0,0,1,0,0,0,1.5862068965517242,-3.586206896551724,0,0,0,0,-1.5862068965517242,3.586206896551724,0,0,0,1,0,0,1.5862066061126399,.07146745179378156,0,0,-1.5862068965516647,-.07146715728860997,-3.5862068965516647,-2.026463464886861,0,0,3.58620660611264,2.0264637593920325,
-1.4037887002254656E-7,.9999999999999901,0,0,.02646375939205216,-.5747352489027919,0,0,-.02646387466711664,.5747353657917075,-2.026463874667097,-1.407402697277183,0,0,2.0264637593920325,1.4074028141660986]),b=[1.3416364873286568E-5,.0015043632174490534,-9.354921660786886E-5,-.010489577608414624,1.6100155690118795E-13,-5.256531264513286E-6,1.6132928326584313E-17,1.6416266494327183E-16,-2.1848152271592347E-14,5.256531123411734E-6,2.4781759127279856E-6,-4.251383179613047E-6,-1.6132928326584313E-17,-1.6416266494327183E-16,
-2.478175773574581E-6,4.2513830385114946E-6],c=[!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],d=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(99999));for(let f=0;30>=f;f++){const g=Array(16);switch(f){case 0:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 1:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:d.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var e=
d.compute_forces(a,g,b,c,!1,.1*f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,e);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(16==b.length&&16==g.length);e=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,g);e=mpl$lab$engine2D$UtilEngine.vectorAdd(e,b);const h=mpl$lab$engine2D$ComputeForces.maxAccel(e,c,16);mpl$lab$engine2D$UtilEngine.maxSize(g);
module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(1E-5,g,e,c));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(1E-5>h)}}static testLinesIntersect(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testLinesIntersect");var a=new mpl$lab$util$Vector(3.5355339059327378,
.5);const b=new mpl$lab$util$Vector(-3.5355339059327378,.5),c=new mpl$lab$util$Vector(-3.497695148119348,.47209383993684373),d=new mpl$lab$util$Vector(-3.665778648699753,.5768083643426545);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(null===mpl$lab$engine2D$UtilEngine.linesIntersect(a,b,c,d));a=new mpl$lab$util$Vector(-3.5355339059327378,-.5);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(null!=
mpl$lab$engine2D$UtilEngine.linesIntersect(a,b,c,d))}static testMatrix28_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+"testMatrix28_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.0990289468913144,0,1.3094940026165887,0,0,0,0,0,.12845853137633773,.12845860271679765,-.12845853137633773,-.12845860271679765,.12845853137633773,.12845860271679765,
-.12845853137633773,-.12845860271679765,0,3.0000000000000004,-2.7755575615628914E-17,2.0000000000000004,0,0,0,0,-.9917148812620664,-.9917148720212116,.9917148812620664,.9917148720212116,-.9917148812620664,-.9917148720212116,.9917148812620664,.9917148720212116,1.3094940026165887,-5.551115123125783E-17,7.814738996929375,0,-.9917148720212116,-.9917148720212116,.9917148720212116,.9917148720212116,0,0,0,0,0,0,0,0,2.7755575615628914E-17,2.0000000000000004,0,3.0000000000000004,-.12845860271679765,-.12845860271679765,
.12845860271679765,.12845860271679765,0,0,0,0,0,0,0,0,0,0,-.9917148720212116,-.12845860271679765,3.586206890282696,-1.5862068965517238,-3.586206896551724,1.5862068902826962,0,0,0,0,0,0,0,0,0,0,-.9917148720212116,-.12845860271679765,-1.5862068965517238,3.586206902820752,1.5862069028207526,-3.586206896551724,0,0,0,0,0,0,0,0,0,0,.9917148720212116,.12845860271679765,-3.586206896551724,1.5862069028207526,3.5862069028207526,-1.5862068965517246,0,0,0,0,0,0,0,0,0,0,.9917148720212116,.12845860271679765,1.5862068902826962,
-3.586206896551724,-1.5862068965517246,3.5862068902826967,0,0,0,0,0,0,0,0,.12845853137633773,-.9917148812620664,0,0,0,0,0,0,2.3956784086831724,2.899871925585832,-2.3956785195499273,-2.8998718162497834,.8545023469946451,-.8998718162497875,-.8545024578613989,.8998719255858367,.12845860271679765,-.9917148720212116,0,0,0,0,0,0,2.8998719255858325,3.586207045385775,-2.899872076503574,-3.5862068965517104,.8019408307359883,-1.586206896551709,-.8019409816537297,1.5862070453857737,-.12845853137633773,.9917148812620664,
0,0,0,0,0,0,-2.395678519549927,-2.8998720765035735,2.3956786304166897,2.8998719671675155,-.8545023354369307,.8998719671675206,.8545024463036933,-.8998720765035785,-.12845860271679765,.9917148720212116,0,0,0,0,0,0,-2.8998718162497834,-3.5862068965517104,2.899871967167516,3.5862067477176542,-.8019408421341289,1.586206747717653,.8019409930518616,-1.586206896551709,.12845853137633773,-.9917148812620664,0,0,0,0,0,0,.8545023469946451,.8019408307359884,-.8545023354369307,-.8019408421341289,1.0151679404785234,
1.198059157865866,-1.015167928920809,-1.1980591692640064,.12845860271679765,-.9917148720212116,0,0,0,0,0,0,-.8998718162497875,-1.586206896551709,.8998719671675207,1.586206747717653,1.198059157865866,3.586206747717652,-1.1980590069481332,-3.5862068965517087,-.12845853137633773,.9917148812620664,0,0,0,0,0,0,-.8545024578613989,-.8019409816537298,.8545024463036933,.8019409930518616,-1.0151679289208089,-1.1980590069481332,1.0151679173631034,1.198059018346265,-.12845860271679765,.9917148720212116,0,0,0,
0,0,0,.8998719255858368,1.5862070453857737,-.8998720765035783,-1.586206896551709,-1.1980591692640064,-3.5862068965517087,1.1980590183462652,3.5862070453857733]),b=[-5.333196522346802,.35338632977062767,6.536797952210367,1.1006444744080304,3.4424921571768293E-10,2.9696509479032846E-10,-3.442492151865283E-10,-2.969650942591738E-10,-1.910133821067225E-7,-9.523914631842725E-9,1.910133782611788E-7,9.523918534392794E-9,-1.89429245334199E-7,-5.618251977692129E-9,1.894292414886553E-7,5.618255880242197E-9],
c=a.length,d=[!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(81976022));for(let g=0;30>=g;g++){const h=Array(c);switch(g){case 0:break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM);break;case 3:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);
break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=e.compute_forces(a,h,b,d,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==c&&h.length==c);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,h);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,b);const k=mpl$lab$engine2D$ComputeForces.maxAccel(f,
d,c),l=mpl$lab$engine2D$UtilEngine.maxSize(h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(5E-6,h,f,d));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(5E-6>k);if(3>l)return}mpl$test$TestRig.reportTestResults(!1,"fail","did not find a solution with max force < 3")}static testMatrix29_CF(){module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_startTest(mpl$lab$engine2D$test$UtilEngineTest.groupName+
"testMatrix29_CF");const a=mpl$lab$engine2D$UtilEngine.newMatrixFromArray(16,[3.0990289468913144,0,1.3094940026165887,0,0,0,0,0,.018263181169428176,.01826318118489827,-.018263181169428176,-.01826318118489827,.018263181169428176,.01826318118489827,-.018263181169428176,-.01826318118489827,6.938893903907228E-18,3,0,2,0,0,0,0,.9998332141980344,.9998332141977518,-.9998332141980344,-.9998332141977518,.9998332141980344,.9998332141977518,-.9998332141980344,-.9998332141977518,1.3094940026165884,
0,7.814738996929372,1.3877787807814457E-17,.9998332141977518,.9998332141977518,-.9998332141977518,-.9998332141977518,0,0,0,0,0,0,0,0,0,2,2.7755575615628914E-17,3,-.01826318118489827,-.01826318118489827,.01826318118489827,.01826318118489827,0,0,0,0,0,0,0,0,0,0,.9998332141977518,-.01826318118489827,3.5862068965517255,-1.5862068965517246,-3.586206896551724,1.5862068965517246,0,0,0,0,0,0,0,0,0,0,.9998332141977518,-.01826318118489827,-1.5862068965517246,3.586206896551724,1.5862068965517238,-3.586206896551724,
0,0,0,0,0,0,0,0,0,0,-.9998332141977518,.01826318118489827,-3.586206896551724,1.5862068965517238,3.5862068965517238,-1.5862068965517238,0,0,0,0,0,0,0,0,0,0,-.9998332141977518,.01826318118489827,1.5862068965517246,-3.586206896551724,-1.5862068965517238,3.586206896551724,0,0,0,0,0,0,0,0,.018263181169428176,.9998332141980344,0,0,0,0,0,0,1.5292509226552737,2.1699369154618933,-1.5292509226405895,-2.169936915476375,.5801980968267118,-.16993691547637516,-.5801980968120273,.1699369154618934,.01826318118489827,
.9998332141977518,0,0,0,0,0,0,2.1699369154618937,3.5862068965197125,-2.169936915429433,-3.586206896551724,.07200588099211824,-1.5862068965517242,-.07200588095965743,1.5862068965197125,-.018263181169428176,-.9998332141980344,0,0,0,0,0,0,-1.5292509226405895,-2.169936915429433,1.5292509226259052,2.1699369154439148,-.5801980968383593,.16993691544391462,.5801980968236748,-.1699369154294331,-.01826318118489827,-.9998332141977518,0,0,0,0,0,0,-2.169936915476375,-3.586206896551724,2.1699369154439143,3.5862068965837364,
-.07200588098063132,1.5862068965837364,.07200588094817073,-1.5862068965517242,.018263181169428176,.9998332141980344,0,0,0,0,0,0,.5801980968267118,.07200588099211815,-.5801980968383593,-.07200588098063145,1.3329869261705647,1.9279941190193686,-1.3329869261822125,-1.9279941190078818,.01826318118489827,.9998332141977518,0,0,0,0,0,0,-.16993691547637502,-1.5862068965517242,.16993691544391454,1.5862068965837364,1.9279941190193686,3.5862068965837364,-1.9279941190518293,-3.586206896551724,-.018263181169428176,
-.9998332141980344,0,0,0,0,0,0,-.5801980968120273,-.07200588095965742,.5801980968236748,.0720058809481706,-1.3329869261822125,-1.9279941190518295,1.33298692619386,1.9279941190403427,-.01826318118489827,-.9998332141977518,0,0,0,0,0,0,.1699369154618935,1.5862068965197125,-.169936915429433,-1.5862068965517242,-1.9279941190078818,-3.586206896551724,1.9279941190403425,3.5862068965197125]),b=[-4.5928336647028005E-9,-4.642655337015812E-7,3.202478297504917E-8,3.2372164433884118E-6,-3.32487342739908E-18,5.926852762245883E-18,
3.3248734273990784E-18,-5.926852762245883E-18,-1.7356287597057612E-10,4.440913274324309E-17,1.7356287597057612E-10,-4.440913274324308E-17,-1.7356287596971723E-10,4.4411250325611226E-17,1.7356287596971723E-10,-4.4411250325611213E-17],c=a.length,d=[!0,!0,!0,!0,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1],e=new mpl$lab$engine2D$ComputeForces("T",new mpl$lab$util$RandomLCG(81976022));for(let g=0;30>=g;g++){const h=Array(c);switch(g){case 0:break;case 1:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_MIN_ACCEL);
break;case 2:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM);break;case 3:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_HYBRID);break;default:e.setNextContactPolicy(mpl$lab$engine2D$ComputeForces.NEXT_CONTACT_RANDOM)}var f=e.compute_forces(a,h,b,d,!1,.1*g);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertEquals(-1,f);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(b.length==
c&&h.length==c);f=mpl$lab$engine2D$UtilEngine.matrixMultiply(a,h);f=mpl$lab$engine2D$UtilEngine.vectorAdd(f,b);const k=mpl$lab$engine2D$ComputeForces.maxAccel(f,d,c),l=mpl$lab$engine2D$UtilEngine.maxSize(h);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(mpl$lab$engine2D$ComputeForces.checkForceAccel(5E-6,h,f,d));module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(5E-6>
k);module$contents$myphysicslab$lab$engine2D$test$UtilEngineTest_assertTrue(100>l)}}}mpl$lab$engine2D$test$UtilEngineTest.groupName="UtilEngineTest.";const module$contents$myphysicslab$lab$engine2D$test$VertexTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$engine2D$test$VertexTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$engine2D$test$VertexTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$engine2D$test$VertexTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$engine2D$test$VertexTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$engine2D$test$VertexTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$engine2D$test$VertexTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$engine2D$test$VertexTest{static test(){module$contents$myphysicslab$lab$engine2D$test$VertexTest_schedule(mpl$lab$engine2D$test$VertexTest.testVertex1)}static testVertex1(){module$contents$myphysicslab$lab$engine2D$test$VertexTest_startTest(mpl$lab$engine2D$test$VertexTest.groupName+"testVertex1");const a=new mpl$lab$util$Vector(2,1),b=new mpl$lab$engine2D$ConcreteVertex(a,
!0);module$contents$myphysicslab$lab$engine2D$test$VertexTest_assertEquals(a,b.locBody());module$contents$myphysicslab$lab$engine2D$test$VertexTest_assertTrue(b.isEndPoint())}}mpl$lab$engine2D$test$VertexTest.groupName="VertexTest.";const module$contents$myphysicslab$lab$view$test$CoordMapTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$CoordMapTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$CoordMapTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$CoordMapTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$view$test$CoordMapTest{static test(){module$contents$myphysicslab$lab$view$test$CoordMapTest_schedule(mpl$lab$view$test$CoordMapTest.testCoordMap)}static testCoordMap(){module$contents$myphysicslab$lab$view$test$CoordMapTest_startTest(mpl$lab$view$test$CoordMapTest.groupName+"testCoordMap");var a=new mpl$lab$view$ScreenRect(0,0,500,300),b=new mpl$lab$util$DoubleRect(-10,
-10,10,10),c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.LEFT,mpl$lab$view$VerticalAlign.FULL);var d=c.getAffineTransform();module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleX(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleY(),1E-13);var e=mpl$lab$util$Vector.ORIGIN,f=c.simToScreen(e),g=new mpl$lab$util$Vector(150,
150);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(f.nearEqual(g,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(f).nearEqual(e,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(g).nearEqual(e,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(e).nearEqual(g,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenX(0),
1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenY(0),1E-13);e=new mpl$lab$util$Vector(10,10);f=c.simToScreen(e);g=new mpl$lab$util$Vector(300,0);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(f.nearEqual(g,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(f).nearEqual(e,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(g).nearEqual(e,
1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(e).nearEqual(g,1E-13));e=new mpl$lab$util$Vector(10,-10);f=c.simToScreen(e);g=new mpl$lab$util$Vector(300,300);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(f.nearEqual(g,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(f).nearEqual(e,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(g).nearEqual(e,
1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(e).nearEqual(g,1E-13));e=new mpl$lab$util$Vector(-10,-10);f=c.simToScreen(e);g=new mpl$lab$util$Vector(0,300);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(f.nearEqual(g,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(f).nearEqual(e,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(g).nearEqual(e,
1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(e).nearEqual(g,1E-13));e=new mpl$lab$util$Vector(-10,10);f=c.simToScreen(e);g=new mpl$lab$util$Vector(0,0);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(f.nearEqual(g,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(f).nearEqual(e,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(g).nearEqual(e,
1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(e).nearEqual(g,1E-13));d=c.simToScreenRect(b);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getLeft(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getTop(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getWidth(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,
d.getHeight(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimY(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(150,150).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));d=c.screenToSimRect(d);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.nearEqual(b,1E-13));
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleX(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleY(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleY(150),1E-13);c=mpl$lab$view$CoordMap.make(a,b,
mpl$lab$view$HorizAlign.RIGHT,mpl$lab$view$VerticalAlign.FULL);d=c.getAffineTransform();module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleX(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleY(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(350,
150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(350,150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(350,c.simToScreenX(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenY(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(new mpl$lab$util$Vector(10,
10)).nearEqual(new mpl$lab$util$Vector(500,0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(500,0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,-10)).nearEqual(new mpl$lab$util$Vector(500,300),1E-13));
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,-10)).nearEqual(new mpl$lab$util$Vector(200,300),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,10)).nearEqual(new mpl$lab$util$Vector(200,0),1E-13));d=c.simToScreenRect(b);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(200,
d.getLeft(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getTop(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getWidth(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getHeight(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimX(350),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimY(150),
1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(350,150).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));d=c.screenToSimRect(d);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.nearEqual(b,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleX(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleY(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,
c.screenToSimScaleX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleY(150),1E-13);c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.MIDDLE,mpl$lab$view$VerticalAlign.MIDDLE);d=c.getAffineTransform();module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleX(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,
c.getScaleY(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(250,150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(250,150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(250,
c.simToScreenX(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenY(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(400,0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(400,
0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,-10)).nearEqual(new mpl$lab$util$Vector(400,300),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,-10)).nearEqual(new mpl$lab$util$Vector(100,300),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,
10)).nearEqual(new mpl$lab$util$Vector(100,0),1E-13));d=c.simToScreenRect(b);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(100,d.getLeft(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getTop(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getWidth(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getHeight(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,
c.screenToSimX(250),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimY(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(250,150).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));d=c.screenToSimRect(d);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.nearEqual(b,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleX(10),
1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleY(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleY(150),1E-13);c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.FULL,mpl$lab$view$VerticalAlign.FULL);
d=c.getAffineTransform();module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(25,c.getScaleX(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleY(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(250,150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(250,
150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(250,c.simToScreenX(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenY(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(500,0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,
10)).nearEqual(new mpl$lab$util$Vector(500,0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,-10)).nearEqual(new mpl$lab$util$Vector(500,300),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,-10)).nearEqual(new mpl$lab$util$Vector(0,300),1E-13));
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,10)).nearEqual(new mpl$lab$util$Vector(0,0),1E-13));d=c.simToScreenRect(b);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getLeft(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getTop(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(500,
d.getWidth(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getHeight(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimX(250),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimY(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(250,150).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));d=c.screenToSimRect(d);
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.nearEqual(b,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(250,c.simToScreenScaleX(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleY(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleX(250),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,
c.screenToSimScaleY(150),1E-13);a=new mpl$lab$view$ScreenRect(0,0,300,500);c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.MIDDLE,mpl$lab$view$VerticalAlign.TOP);d=c.getAffineTransform();module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleX(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleY(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(150,
150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(150,150),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenX(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenY(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(new mpl$lab$util$Vector(10,
10)).nearEqual(new mpl$lab$util$Vector(300,0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(300,0),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,-10)).nearEqual(new mpl$lab$util$Vector(300,300),1E-13));
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,-10)).nearEqual(new mpl$lab$util$Vector(0,300),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,10)).nearEqual(new mpl$lab$util$Vector(0,0),1E-13));d=c.simToScreenRect(b);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,
d.getLeft(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getTop(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getWidth(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getHeight(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimY(150),
1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(150,150).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));d=c.screenToSimRect(d);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.nearEqual(b));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleX(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleY(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,
c.screenToSimScaleX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleY(150),1E-13);c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.MIDDLE,mpl$lab$view$VerticalAlign.BOTTOM);d=c.getAffineTransform();module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleX(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,
c.getScaleY(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(150,350),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(150,350),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,
c.simToScreenX(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(350,c.simToScreenY(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(300,200),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(300,
200),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,-10)).nearEqual(new mpl$lab$util$Vector(300,500),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,-10)).nearEqual(new mpl$lab$util$Vector(0,500),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,
10)).nearEqual(new mpl$lab$util$Vector(0,200),1E-13));d=c.simToScreenRect(b);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getLeft(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(200,d.getTop(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getWidth(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getHeight(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,
c.screenToSimX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimY(350),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(150,350).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));d=c.screenToSimRect(d);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.nearEqual(b,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleX(10),
1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleY(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleY(150),1E-13);c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.MIDDLE,mpl$lab$view$VerticalAlign.MIDDLE);
d=c.getAffineTransform();module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleX(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(15,c.getScaleY(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(150,250),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(mpl$lab$util$Vector.ORIGIN).nearEqual(new mpl$lab$util$Vector(150,
250),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenX(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(250,c.simToScreenY(0),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.transform(new mpl$lab$util$Vector(10,10)).nearEqual(new mpl$lab$util$Vector(300,100),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,
10)).nearEqual(new mpl$lab$util$Vector(300,100),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(10,-10)).nearEqual(new mpl$lab$util$Vector(300,400),1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,-10)).nearEqual(new mpl$lab$util$Vector(0,400),1E-13));
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.simToScreen(new mpl$lab$util$Vector(-10,10)).nearEqual(new mpl$lab$util$Vector(0,100),1E-13));d=c.simToScreenRect(b);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,d.getLeft(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(100,d.getTop(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,
d.getWidth(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(300,d.getHeight(),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimX(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(0,c.screenToSimY(250),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(150,250).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(c.screenToSim(new mpl$lab$util$Vector(150,
250)).nearEqual(mpl$lab$util$Vector.ORIGIN,1E-13));d=c.screenToSimRect(d);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertTrue(d.nearEqual(b,1E-13));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleX(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(150,c.simToScreenScaleY(10),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleX(150),
1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertRoughlyEquals(10,c.screenToSimScaleY(150),1E-13);module$contents$myphysicslab$lab$view$test$CoordMapTest_assertThrows(()=>c=mpl$lab$view$CoordMap.make(a,b,"foo",mpl$lab$view$VerticalAlign.MIDDLE));module$contents$myphysicslab$lab$view$test$CoordMapTest_assertThrows(()=>c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.MIDDLE,"foo"));
module$contents$myphysicslab$lab$view$test$CoordMapTest_assertThrows(()=>c=mpl$lab$view$CoordMap.make(a,b,mpl$lab$view$HorizAlign.MIDDLE,mpl$lab$view$VerticalAlign.MIDDLE,-1))}}mpl$lab$view$test$CoordMapTest.groupName="CoordMapTest.";class mpl$lab$view$DisplayLine{constructor(a,b){this.line_=null!=a?a:new mpl$lab$model$ConcreteLine("proto");this.proto_=null!=b?b:null;this.changed_=!0}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", thickness: "+mpl$lab$util$Util.NF(this.getThickness())+', color: "'+this.getColor()+'", lineDash: ['+this.getLineDash()+"], zIndex: "+this.getZIndex()+", proto: "+(null!=
this.proto_?this.proto_.toStringShort():"null")+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"DisplayLine{line_: "+this.line_.toStringShort()+"}"}contains(a){return!1}draw(a,b){if(0<this.getThickness()){const c=b.simToScreen(this.line_.getStartPoint()),d=b.simToScreen(this.line_.getEndPoint());1E-6>c.distanceTo(d)||(a.save(),b=this.getLineDash(),0<b.length&&a.setLineDash&&a.setLineDash(b),a.lineWidth=this.getThickness(),a.strokeStyle=this.getColor(),a.beginPath(),
a.moveTo(c.getX(),c.getY()),a.lineTo(d.getX(),d.getY()),a.stroke(),a.restore())}}getColor(){return void 0!==this.color_?this.color_:null!=this.proto_?this.proto_.getColor():"gray"}getChanged(){return this.line_.getChanged()||this.changed_?(this.changed_=!1,!0):!1}getLineDash(){return void 0!==this.lineDash_?this.lineDash_:null!=this.proto_?this.proto_.getLineDash():[]}getMassObjects(){return[]}getPosition(){return this.line_.getStartPoint().add(this.line_.getEndPoint()).multiply(.5)}getSimObjects(){return[this.line_]}getThickness(){return void 0!==
this.thickness_?this.thickness_:null!=this.proto_?this.proto_.getThickness():4}getZIndex(){return void 0!==this.zIndex_?this.zIndex_:null!=this.proto_?this.proto_.getZIndex():0}isDragable(){return!1}setColor(a){this.color_=a;this.changed_=!0;return this}setDragable(a){}setLineDash(a){this.lineDash_=a;this.changed_=!0;return this}setPosition(a){}setThickness(a){this.thickness_=a;this.changed_=!0;return this}setZIndex(a){this.zIndex_=a;this.changed_=!0}};const module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertFalse=a=>
mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$DisplayLineTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$DisplayLineTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$view$test$DisplayLineTest_MockContext{constructor(a){this.tol=a;this.startPoint=null;this.lastPoint=mpl$lab$util$Vector.ORIGIN;this.strokeStyle="";this.lineWidth=0}moveTo(a,b){null!=this.startPoint&&(module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertRoughlyEquals(this.startPoint.getX(),a,this.tol),module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertRoughlyEquals(this.startPoint.getY(),b,this.tol))}lineTo(a,
b){this.lastPoint=new mpl$lab$util$Vector(a,b)}save(){}restore(){}stroke(){}beginPath(){}}
class mpl$lab$view$test$DisplayLineTest{static test(){module$contents$myphysicslab$lab$view$test$DisplayLineTest_schedule(mpl$lab$view$test$DisplayLineTest.testDisplayLine)}static testDisplayLine(){module$contents$myphysicslab$lab$view$test$DisplayLineTest_startTest(mpl$lab$view$test$DisplayLineTest.groupName+"testDisplayLine");var a=new module$contents$myphysicslab$lab$view$test$DisplayLineTest_MockContext(1E-14),b=new mpl$lab$view$ScreenRect(0,
0,500,300),c=new mpl$lab$util$DoubleRect(-10,-10,10,10);b=mpl$lab$view$CoordMap.make(b,c,mpl$lab$view$HorizAlign.LEFT,mpl$lab$view$VerticalAlign.FULL);var d=new mpl$lab$util$Vector(-5,5),e=new mpl$lab$util$Vector(5,-5);c=new mpl$lab$model$ConcreteLine("line1");c.setStartPoint(d);c.setEndPoint(e);d=new mpl$lab$view$DisplayLine(c);
d.setThickness(2);d.setColor("fuschia");module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertEquals(c,d.getSimObjects()[0]);module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertFalse(d.contains(new mpl$lab$util$Vector(2,-2)));module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertTrue(d.getPosition().nearEqual(mpl$lab$util$Vector.ORIGIN,1E-14));a.startPoint=new mpl$lab$util$Vector(75,75);d.draw(a,
b);module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertEquals("fuschia",a.strokeStyle);module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertEquals(2,a.lineWidth);module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertTrue(a.lastPoint.nearEqual(new mpl$lab$util$Vector(225,225),1E-13));c.setEndPoint(mpl$lab$util$Vector.ORIGIN);d.draw(a,b);module$contents$myphysicslab$lab$view$test$DisplayLineTest_assertTrue(a.lastPoint.nearEqual(new mpl$lab$util$Vector(150,
150),1E-13))}}mpl$lab$view$test$DisplayLineTest.groupName="DisplayLineTest.";const module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$DisplayListTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$DisplayListTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$DisplayListTest_assertFalse=a=>
mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$view$test$DisplayListTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$DisplayListTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$DisplayListTest_startTest=a=>mpl$test$TestRig.startTest(a),module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals=
(a,b)=>mpl$test$TestRig.assertElementsEquals(a,b);
class mpl$lab$view$test$DisplayListTest{static test(){module$contents$myphysicslab$lab$view$test$DisplayListTest_schedule(mpl$lab$view$test$DisplayListTest.testDisplayList)}static testDisplayList(){module$contents$myphysicslab$lab$view$test$DisplayListTest_startTest(mpl$lab$view$test$DisplayListTest.groupName+"testDisplayList");var a=new mpl$lab$view$DisplayList("TEST");module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals("TEST",
a.getName());var b=mpl$lab$model$PointMass.makeSquare(1),c=new mpl$lab$view$DisplayShape(b),d=mpl$lab$model$PointMass.makeSquare(2),e=new mpl$lab$view$DisplayShape(d),f=mpl$lab$model$PointMass.makeSquare(3);f=new mpl$lab$view$DisplayShape(f);var g=mpl$lab$model$PointMass.makeSquare(4);g=new mpl$lab$view$DisplayShape(g);
var h=mpl$lab$model$PointMass.makeSquare(5);h=new mpl$lab$view$DisplayShape(h);var k=mpl$lab$model$PointMass.makeSquare(6);k=new mpl$lab$view$DisplayShape(k);var l=mpl$lab$model$PointMass.makeSquare(7);l=new mpl$lab$view$DisplayShape(l);var m=mpl$lab$model$PointMass.makeSquare(8);m=new mpl$lab$view$DisplayShape(m);
var p=new mpl$lab$view$DisplayShape(mpl$lab$model$PointMass.makeSquare(9)),t=new mpl$lab$view$DisplayShape(mpl$lab$model$PointMass.makeSquare(10));new mpl$lab$view$DisplayShape(mpl$lab$model$PointMass.makeSquare(11));a.add(c);a.add(e);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertTrue(a.contains(c));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertTrue(a.contains(e));
module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(2,a.length());module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(2,a.toArray().length);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertTrue(a.toArray().includes(c));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertTrue(a.toArray().includes(e));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(c,a.find(b));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(c,
a.findShape(b));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(e,a.find(d));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(e,a.findShape(d));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([c,e],a.toArray());f.setZIndex(-1);a.add(f);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([f,c,e],a.toArray());g.setZIndex(1);a.add(g);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([f,
c,e,g],a.toArray());a.add(h);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([f,c,e,h,g],a.toArray());k.setZIndex(-1);a.prepend(k);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([k,f,c,e,h,g],a.toArray());l.setZIndex(-1);a.add(l);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([k,f,l,c,e,h,g],a.toArray());m.setZIndex(1);a.add(m);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([k,
f,l,c,e,h,g,m],a.toArray());a.prepend(p);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([k,f,l,p,c,e,h,g,m],a.toArray());t.setZIndex(1);a.prepend(t);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([k,f,l,p,c,e,h,t,g,m],a.toArray());a.remove(c);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([k,f,l,p,e,h,t,g,m],a.toArray());module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(p,a.get(3));
module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(9,a.length());module$contents$myphysicslab$lab$view$test$DisplayListTest_assertThrows(()=>a.get(-1));module$contents$myphysicslab$lab$view$test$DisplayListTest_assertThrows(()=>a.get(9));t.setZIndex(-1);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertElementsEquals([k,f,l,t,p,e,h,g,m],a.toArray());t.setZIndex(1);module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(t,a.get(6));a.removeAll();
module$contents$myphysicslab$lab$view$test$DisplayListTest_assertEquals(0,a.length())}}mpl$lab$view$test$DisplayListTest.groupName="DisplayListTest.";const module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$view$test$DisplayShapeTest_MockContext{constructor(a){this.tol=a;this.lastPoint=this.startPoint=this.expectRect2=this.expectRect1=null;this.at=mpl$lab$util$AffineTransform.IDENTITY;this.strokeStyle=this.fillStyle="";this.lineWidth=0}rect(a,b,c,d){var e=this.at.transform(a,b);a=this.at.transform(a+c,b+d);null!=this.expectRect1&&(module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertRoughlyEquals(this.expectRect1.getX(),e.getX(),
this.tol),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertRoughlyEquals(this.expectRect1.getY(),e.getY(),this.tol));null!=this.expectRect2&&(module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertRoughlyEquals(this.expectRect2.getX(),a.getX(),this.tol),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertRoughlyEquals(this.expectRect2.getY(),a.getY(),this.tol))}moveTo(a,b){a=this.at.transform(a,b);null!=this.startPoint&&(module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertRoughlyEquals(this.startPoint.getX(),
a.getX(),this.tol),module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertRoughlyEquals(this.startPoint.getY(),a.getY(),this.tol))}lineTo(a,b){this.lastPoint=this.at.transform(a,b)}save(){}restore(){this.at=mpl$lab$util$AffineTransform.IDENTITY}stroke(){}beginPath(){}clearRect(a,b,c,d){}setTransform(a,b,c,d,e,f){this.at=new mpl$lab$util$AffineTransform(a,b,c,d,e,f)}fill(){}}
class mpl$lab$view$test$DisplayShapeTest{static test(){module$contents$myphysicslab$lab$view$test$DisplayShapeTest_schedule(mpl$lab$view$test$DisplayShapeTest.testDisplayShape)}static testDisplayShape(){module$contents$myphysicslab$lab$view$test$DisplayShapeTest_startTest(mpl$lab$view$test$DisplayShapeTest.groupName+"testDisplayShape");var a=new module$contents$myphysicslab$lab$view$test$DisplayShapeTest_MockContext(1E-14),b=
new mpl$lab$view$ScreenRect(0,0,500,300),c=new mpl$lab$util$DoubleRect(-10,-10,10,10);b=mpl$lab$view$CoordMap.make(b,c,mpl$lab$view$HorizAlign.LEFT,mpl$lab$view$VerticalAlign.FULL);c=mpl$lab$model$PointMass.makeRectangle(2,1.6);c.setPosition(new mpl$lab$util$Vector(2,-2));var d=new mpl$lab$view$DisplayShape(c);
d.setFillStyle("orange");module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertEquals(c,d.getSimObjects()[0]);module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertTrue(d.contains(new mpl$lab$util$Vector(2,-2)));module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertFalse(d.contains(mpl$lab$util$Vector.ORIGIN));module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertTrue(d.getPosition().nearEqual(new mpl$lab$util$Vector(2,
-2),1E-14));module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertEquals("orange",d.getFillStyle());module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertTrue(d.isDragable());a.expectRect1=b.simToScreen(new mpl$lab$util$Vector(1,-2.8));a.expectRect2=b.simToScreen(new mpl$lab$util$Vector(3,-1.2));d.draw(a,b);module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertEquals("orange",a.fillStyle);d.setDragable(!1);module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertFalse(d.isDragable());
d.setFillStyle("blue");module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertEquals("blue",d.getFillStyle());c.setPosition(new mpl$lab$util$Vector(1,1));module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertTrue(d.getPosition().nearEqual(new mpl$lab$util$Vector(1,1),1E-14));a.expectRect1=b.simToScreen(new mpl$lab$util$Vector(0,.2));a.expectRect2=b.simToScreen(new mpl$lab$util$Vector(2,
1.8));d.draw(a,b);module$contents$myphysicslab$lab$view$test$DisplayShapeTest_assertEquals("blue",a.fillStyle)}}mpl$lab$view$test$DisplayShapeTest.groupName="DisplayShapeTest.";const module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$DisplaySpringTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$DisplaySpringTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$view$test$DisplaySpringTest_MockContext{constructor(a){this.tol=a;this.startPoint=null;this.lastPoint=mpl$lab$util$Vector.ORIGIN;this.strokeStyle="";this.lineWidth=0}moveTo(a,b){null!=this.startPoint&&(module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertRoughlyEquals(this.startPoint.getX(),a,this.tol),module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertRoughlyEquals(this.startPoint.getY(),b,this.tol))}lineTo(a,
b){this.lastPoint=new mpl$lab$util$Vector(a,b)}save(){}restore(){}stroke(){}beginPath(){}}
class mpl$lab$view$test$DisplaySpringTest{static test(){module$contents$myphysicslab$lab$view$test$DisplaySpringTest_schedule(mpl$lab$view$test$DisplaySpringTest.testDisplaySpring)}static testDisplaySpring(){module$contents$myphysicslab$lab$view$test$DisplaySpringTest_startTest(mpl$lab$view$test$DisplaySpringTest.groupName+"testDisplaySpring");var a=new module$contents$myphysicslab$lab$view$test$DisplaySpringTest_MockContext(1E-14),
b=new mpl$lab$view$ScreenRect(0,0,500,300),c=new mpl$lab$util$DoubleRect(-10,-10,10,10);b=mpl$lab$view$CoordMap.make(b,c,mpl$lab$view$HorizAlign.LEFT,mpl$lab$view$VerticalAlign.FULL);var d=mpl$lab$model$PointMass.makeCircle(1,"point2").setMass(2);d.setPosition(new mpl$lab$util$Vector(-5,5));c=mpl$lab$model$PointMass.makeCircle(1,
"point3").setMass(.5);c.setPosition(new mpl$lab$util$Vector(5,-5));d=new mpl$lab$model$Spring("spring1",d,mpl$lab$util$Vector.ORIGIN,c,mpl$lab$util$Vector.ORIGIN,8,12);var e=(new mpl$lab$view$DisplaySpring(d)).setWidth(1).setColorCompressed("fuschia").setColorExpanded("gray");module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals(d,e.getSimObjects()[0]);module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertFalse(e.contains(new mpl$lab$util$Vector(2,
-2)));module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertTrue(e.getPosition().nearEqual(mpl$lab$util$Vector.ORIGIN,1E-14));module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals("fuschia",e.getColorCompressed());module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals("gray",e.getColorExpanded());a.startPoint=new mpl$lab$util$Vector(75,75);e.draw(a,b);module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals("gray",
a.strokeStyle);module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertTrue(a.lastPoint.nearEqual(new mpl$lab$util$Vector(225,225),1E-13));e.setColorCompressed("yellow");e.setColorExpanded("blue");module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals("yellow",e.getColorCompressed());module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals("blue",e.getColorExpanded());c.setPosition(new mpl$lab$util$Vector(0,
0));e.draw(a,b);module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertEquals("yellow",a.strokeStyle);module$contents$myphysicslab$lab$view$test$DisplaySpringTest_assertTrue(a.lastPoint.nearEqual(new mpl$lab$util$Vector(150,150),1E-13))}}mpl$lab$view$test$DisplaySpringTest.groupName="DisplaySpringTest.";class mpl$lab$view$LabCanvas extends mpl$lab$util$AbstractSubject{constructor(a,b){super(b);this.canvas_=a;a.contentEditable=!1;this.labViews_=[];this.memoList_=new mpl$lab$util$ConcreteMemoList;this.focusView_=null;this.alpha_=1;this.background_="";this.changed_=!0;this.counter_=0;this.debug_=!1;this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$lab$view$LabCanvas.en.WIDTH,
mpl$lab$view$LabCanvas.i18n.WIDTH,()=>this.getWidth(),c=>this.setWidth(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$lab$view$LabCanvas.en.HEIGHT,mpl$lab$view$LabCanvas.i18n.HEIGHT,()=>this.getHeight(),c=>this.setHeight(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$lab$view$LabCanvas.en.ALPHA,mpl$lab$view$LabCanvas.i18n.ALPHA,
()=>this.getAlpha(),c=>this.setAlpha(c)));this.addParameter(new mpl$lab$util$ParameterString(this,mpl$lab$view$LabCanvas.en.BACKGROUND,mpl$lab$view$LabCanvas.i18n.BACKGROUND,()=>this.getBackground(),c=>this.setBackground(c)))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", width: "+this.canvas_.width+", height: "+this.canvas_.height+', background_: "'+this.background_+
'", alpha_: '+mpl$lab$util$Util.NF5(this.alpha_)+", focusView_: "+(null==this.focusView_?"null":this.focusView_.toStringShort())+", labViews_: ["+this.labViews_.map(a=>a.toStringShort())+"], memoList_: "+this.memoList_+super.toString()}getClassName(){return"LabCanvas"}addMemo(a){this.memoList_.addMemo(a)}addView(a){goog.asserts.assertObject(a);if(0<this.getWidth()&&0<this.getHeight()){const b=new mpl$lab$view$ScreenRect(0,0,this.getWidth(),this.getHeight());
a.setScreenRect(b)}this.labViews_.push(a);this.addMemo(a);this.changed_=!0;this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabCanvas.VIEW_ADDED,a));this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabCanvas.VIEW_LIST_MODIFIED));null==this.focusView_&&this.setFocusView(a)}focus(){this.canvas_.focus()}getAlpha(){return this.alpha_}getBackground(){return this.background_}getCanvas(){return this.canvas_}getChanged(){let a=
!1;for(let b=0,c=this.labViews_.length;b<c;b++){const d=this.labViews_[b].getChanged();a=a||d}return a||this.changed_?(this.changed_=!1,!0):!1}getContext(){return this.canvas_.getContext("2d")}getFocusView(){return this.focusView_}getHeight(){return this.canvas_.height}getMemos(){return this.memoList_.getMemos()}getScreenRect(){return new mpl$lab$view$ScreenRect(0,0,this.canvas_.width,this.canvas_.height)}getViews(){return Array.from(this.labViews_)}getWidth(){return this.canvas_.width}memorize(){this.memoList_.memorize()}notifySizeChanged(){const a=
this.getScreenRect();this.labViews_.forEach(b=>b.setScreenRect(a));this.changed_=!0;this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabCanvas.SIZE_CHANGED))}paint(){if(null!=this.canvas_.offsetParent){0<this.counter_&&this.counter_--;const a=this.getChanged();if(a||0<this.counter_){const b=this.canvas_.getContext("2d");b.save();try{""!=this.background_?(b.globalAlpha=this.alpha_,b.fillStyle=this.background_,b.fillRect(0,0,this.canvas_.width,
this.canvas_.height),b.globalAlpha=1,1==this.alpha_?this.counter_=0:a&&(this.counter_=Math.floor(10/this.alpha_))):b.clearRect(0,0,this.canvas_.width,this.canvas_.height),this.labViews_.forEach(c=>c.paint(b))}finally{b.restore()}}}}removeMemo(a){this.memoList_.removeMemo(a)}removeView(a){goog.asserts.assertObject(a);module$contents$goog$array_remove(this.labViews_,a);this.removeMemo(a);this.focusView_==a&&this.setFocusView(module$contents$goog$array_isEmpty(this.labViews_)?null:this.labViews_[0]);
this.changed_=!0;this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabCanvas.VIEW_REMOVED,a));this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabCanvas.VIEW_LIST_MODIFIED))}setAlpha(a){if(mpl$lab$util$Util.veryDifferent(this.alpha_,a)){if(0>=a||1<a)throw"alpha must be between 0 and 1";this.alpha_=a;mpl$lab$util$Util.veryDifferent(a,
1)&&""==this.background_&&this.setBackground("white");this.changed_=!0;this.broadcastParameter(mpl$lab$view$LabCanvas.en.ALPHA)}}setBackground(a){this.background_!=a&&(this.background_=a,this.changed_=!0,this.broadcastParameter(mpl$lab$view$LabCanvas.en.BACKGROUND))}setFocusView(a){if(null!=a&&!this.labViews_.includes(a))throw"cannot set focus to unknown view "+a;this.focusView_!=a&&(null!=this.focusView_&&this.focusView_.loseFocus(),this.focusView_=
a,null!=a&&a.gainFocus(),this.changed_=!0,this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$view$LabCanvas.FOCUS_VIEW_CHANGED,a)))}setHeight(a){mpl$lab$util$Util.veryDifferent(a,this.canvas_.height)&&(this.canvas_.height=a);this.notifySizeChanged();this.broadcastParameter(mpl$lab$view$LabCanvas.en.HEIGHT)}setScreenRect(a){if(!mpl$lab$view$ScreenRect.isDuckType(a))throw"not a ScreenRect "+
a;if(0!=a.getTop()||0!=a.getLeft())throw"top left must be 0,0, was: "+a;this.changed_=!0;this.setSize(a.getWidth(),a.getHeight())}setSize(a,b){if("number"!==typeof a||0>=a||"number"!==typeof b||0>=b)throw"bad size "+a+", "+b;this.canvas_.width=a;this.canvas_.height=b;this.notifySizeChanged();this.broadcastParameter(mpl$lab$view$LabCanvas.en.WIDTH);this.broadcastParameter(mpl$lab$view$LabCanvas.en.HEIGHT)}setWidth(a){mpl$lab$util$Util.veryDifferent(a,
this.canvas_.width)&&(this.canvas_.width=a);this.notifySizeChanged();this.broadcastParameter(mpl$lab$view$LabCanvas.en.WIDTH)}}mpl$lab$view$LabCanvas.FOCUS_VIEW_CHANGED="FOCUS_VIEW_CHANGED";mpl$lab$view$LabCanvas.SIZE_CHANGED="SIZE_CHANGED";mpl$lab$view$LabCanvas.VIEW_LIST_MODIFIED="VIEW_LIST_MODIFIED";mpl$lab$view$LabCanvas.VIEW_ADDED="VIEW_ADDED";
mpl$lab$view$LabCanvas.VIEW_REMOVED="VIEW_REMOVED";mpl$lab$view$LabCanvas.en={WIDTH:"width",HEIGHT:"height",ALPHA:"alpha",BACKGROUND:"background"};mpl$lab$view$LabCanvas.de_strings={WIDTH:"Breite",HEIGHT:"H\u00f6he",ALPHA:"alpha",BACKGROUND:"Hintergrund"};mpl$lab$view$LabCanvas.i18n="de"===goog.LOCALE?mpl$lab$view$LabCanvas.de_strings:mpl$lab$view$LabCanvas.en;const module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$LabCanvasTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$LabCanvasTest_startTest=a=>mpl$test$TestRig.startTest(a),module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertNotNull=a=>mpl$test$TestRig.assertNotNull(a);
class module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockLCObserver{constructor(){this.numStrings=this.numDoubles=this.numBooleans=this.numViewRemovedEvents=this.numFocusChangedEvents=this.numListModifiedEvents=this.numEvents=0}observe(a){a instanceof mpl$lab$util$GenericEvent?(this.numEvents++,a.nameEquals(mpl$lab$view$LabCanvas.VIEW_LIST_MODIFIED)?this.numListModifiedEvents++:a.nameEquals(mpl$lab$view$LabCanvas.FOCUS_VIEW_CHANGED)?
this.numFocusChangedEvents++:a.nameEquals(mpl$lab$view$LabCanvas.VIEW_REMOVED)&&this.numViewRemovedEvents++):a instanceof mpl$lab$util$ParameterBoolean?this.numBooleans++:a instanceof mpl$lab$util$ParameterNumber?this.numDoubles++:a instanceof mpl$lab$util$ParameterString&&this.numStrings++}toStringShort(){return"MockLCObserver"}}
class module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockViewObserver{constructor(){this.numStrings=this.numDoubles=this.numBooleans=this.numSimRectEvents=this.numScreenRectEvents=this.numEvents=0}observe(a){a instanceof mpl$lab$util$GenericEvent?(this.numEvents++,a.nameEquals(mpl$lab$view$LabView.SCREEN_RECT_CHANGED)?this.numScreenRectEvents++:a.nameEquals(mpl$lab$view$LabView.SIM_RECT_CHANGED)&&this.numSimRectEvents++):
a instanceof mpl$lab$util$ParameterBoolean?this.numBooleans++:a instanceof mpl$lab$util$ParameterNumber?this.numDoubles++:a instanceof mpl$lab$util$ParameterString&&this.numStrings++}toStringShort(){return"MockViewObserver"}}
class module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockContext{constructor(a){this.tol=a;this.startPoint=this.expectRect2=this.expectRect1=null;this.lastPoint=mpl$lab$util$Vector.ORIGIN;this.at=mpl$lab$util$AffineTransform.IDENTITY;this.strokeStyle=this.fillStyle="";this.lineWidth=0}rect(a,b,c,d){var e=this.at.transform(a,b);a=this.at.transform(a+c,b+d);null!=this.expectRect1&&(module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertRoughlyEquals(this.expectRect1.getX(),
e.getX(),this.tol),module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertRoughlyEquals(this.expectRect1.getY(),e.getY(),this.tol));null!=this.expectRect2&&(module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertRoughlyEquals(this.expectRect2.getX(),a.getX(),this.tol),module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertRoughlyEquals(this.expectRect2.getY(),a.getY(),this.tol))}moveTo(a,b){a=this.at.transform(a,b);null!=this.startPoint&&(module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertRoughlyEquals(this.startPoint.getX(),
a.getX(),this.tol),module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertRoughlyEquals(this.startPoint.getY(),a.getY(),this.tol))}lineTo(a,b){this.lastPoint=this.at.transform(a,b)}save(){}restore(){this.at=mpl$lab$util$AffineTransform.IDENTITY}stroke(){}beginPath(){}clearRect(a,b,c,d){}setTransform(a,b,c,d,e,f){this.at=new mpl$lab$util$AffineTransform(a,b,c,d,e,f)}fill(){}}
class module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockCanvas{constructor(a){this.tol=a;this.mockContext_=new module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockContext(a);this.height=this.width=0}getContext(a,b){module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals("2d",a);return this.mockContext_}}
class mpl$lab$view$test$LabCanvasTest{static test(){module$contents$myphysicslab$lab$view$test$LabCanvasTest_schedule(mpl$lab$view$test$LabCanvasTest.testLabCanvas1)}static testLabCanvas1(){module$contents$myphysicslab$lab$view$test$LabCanvasTest_startTest(mpl$lab$view$test$LabCanvasTest.groupName+"testLabCanvas1");var a=new mpl$lab$util$DoubleRect(-5,-5,5,5),b=new mpl$lab$view$SimView("simView1",
a),c=b.getDisplayList();b.setHorizAlign(mpl$lab$view$HorizAlign.LEFT);b.setVerticalAlign(mpl$lab$view$VerticalAlign.FULL);var d=new module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockViewObserver;b.addObserver(d);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertTrue(b.getSimRect().equals(a));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(0,d.numScreenRectEvents);var e=mpl$lab$model$PointMass.makeSquare(1);
a=new mpl$lab$util$Vector(2.5,0);e.setPosition(a);var f=(new mpl$lab$view$DisplayShape(e)).setFillStyle("orange"),g=mpl$lab$model$PointMass.makeSquare(1).setMass(mpl$lab$util$Util.POSITIVE_INFINITY);g.setPosition(new mpl$lab$util$Vector(-1,0));e=new mpl$lab$model$Spring("spring1",g,mpl$lab$util$Vector.ORIGIN,e,mpl$lab$util$Vector.ORIGIN,
2,12);g=(new mpl$lab$view$DisplaySpring(e)).setWidth(1).setColorCompressed("red").setColorExpanded("green").setDrawMode(mpl$lab$view$DisplaySpring.STRAIGHT);c.add(f);c.add(g);f=new module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockCanvas(1E-14);var h=new mpl$lab$view$LabCanvas(f,"lc1");c=new module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockLCObserver;h.addObserver(c);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals("LC1",
h.getName());module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(f,h.getCanvas());h.addView(b);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,c.numListModifiedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,c.numFocusChangedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(0,d.numScreenRectEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(b,h.getFocusView());module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(b,
h.getViews()[0]);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,h.getViews().length);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(0,h.getViews().indexOf(b));h.setSize(500,300);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(500,h.getWidth());module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(300,h.getHeight());module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,d.numScreenRectEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(500,
b.getScreenRect().getWidth());module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(300,b.getScreenRect().getHeight());d=b.getCoordMap();module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertTrue(e.getStartPoint().nearEqual(new mpl$lab$util$Vector(-1,0),1E-8));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertTrue(d.simToScreen(e.getStartPoint()).nearEqual(new mpl$lab$util$Vector(120,150),1E-8));e=h.getCanvas().getContext("2d");
module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertNotNull(e);e.expectRect1=d.simToScreen(new mpl$lab$util$Vector(2,-.5));e.expectRect2=d.simToScreen(new mpl$lab$util$Vector(3,.5));e.startPoint=d.simToScreen(new mpl$lab$util$Vector(-1,0));h.getCanvas().offsetParent=document.body;h.paint();module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals("orange",e.fillStyle);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertTrue(e.lastPoint.nearEqual(d.simToScreen(a)));
module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals("green",e.strokeStyle);var k=new mpl$lab$util$DoubleRect(-2,-2,2,2);a=new mpl$lab$view$SimView("simView2",k);d=new module$contents$myphysicslab$lab$view$test$LabCanvasTest_MockViewObserver;a.addObserver(d);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(-1,h.getViews().indexOf(a));h.addView(a);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(2,
c.numListModifiedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,d.numScreenRectEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertTrue(a.getScreenRect().equals(new mpl$lab$view$ScreenRect(0,0,500,300)));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(b,h.getFocusView());module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(a,h.getViews()[1]);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(2,
h.getViews().length);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,h.getViews().indexOf(a));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertThrows(()=>h.setFocusView(new mpl$lab$view$SimView("unknown",k)));h.setFocusView(a);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(2,c.numFocusChangedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(a,h.getFocusView());h.setFocusView(b);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(3,
c.numFocusChangedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(b,h.getFocusView());h.removeView(b);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,c.numViewRemovedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(3,c.numListModifiedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(4,c.numFocusChangedEvents);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(a,h.getFocusView());
module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(a,h.getViews()[0]);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(1,h.getViews().length);module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertEquals(0,h.getViews().indexOf(a));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertThrows(()=>h.setSize(0,0));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertThrows(()=>h.setSize(100,0));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertThrows(()=>
h.setSize(0,100));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertThrows(()=>h.setSize(100,-1));module$contents$myphysicslab$lab$view$test$LabCanvasTest_assertThrows(()=>h.setSize(-1,100))}}mpl$lab$view$test$LabCanvasTest.groupName="LabCanvasTest.";const module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$ScreenRectTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$ScreenRectTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$lab$view$test$ScreenRectTest{static test(){module$contents$myphysicslab$lab$view$test$ScreenRectTest_schedule(mpl$lab$view$test$ScreenRectTest.testScreenRect)}static testScreenRect(){module$contents$myphysicslab$lab$view$test$ScreenRectTest_startTest(mpl$lab$view$test$ScreenRectTest.groupName+"testScreenRect");var a=new mpl$lab$view$ScreenRect(0,0,500,300);module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(0,
a.getLeft());module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(0,a.getTop());module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(500,a.getWidth());module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(300,a.getHeight());var b=mpl$lab$view$ScreenRect.clone(a);module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(0,b.getLeft());module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(0,b.getTop());
module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(500,b.getWidth());module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertEquals(300,b.getHeight());module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertTrue(a.nearEqual(b));module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertTrue(a.equals(b));b=new mpl$lab$view$ScreenRect(10,10,1E3,500);module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertFalse(b.equals(a));module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertFalse(b.nearEqual(a));
module$contents$myphysicslab$lab$view$test$ScreenRectTest_assertThrows(()=>new mpl$lab$view$ScreenRect(0,0,-100,100))}}mpl$lab$view$test$ScreenRectTest.groupName="ScreenRectTest.";class mpl$lab$util$GenericObserver{constructor(a,b,c){this.purpose_=mpl$lab$util$Util.ADVANCED?"":c||"";this.subject_=a;a.addObserver(this);this.observeFn_=b}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"GenericObserver{subject_: "+this.subject_.toStringShort()+(0<this.purpose_.length?', purpose_:"'+this.purpose_+'"':"")+"}"}disconnect(){this.subject_.removeObserver(this)}observe(a){this.observeFn_(a)}}
;const module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$lab$view$test$SimViewTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$lab$view$test$SimViewTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$lab$view$test$SimViewTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$lab$view$test$SimViewTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$lab$view$test$SimViewTest_MockObserver{constructor(){this.numStrings=this.numDoubles=this.numBooleans=this.numSimRectEvents=this.numScreenRectEvents=this.numEvents=0}observe(a){a instanceof mpl$lab$util$GenericEvent?(this.numEvents++,a.nameEquals(mpl$lab$view$LabView.SCREEN_RECT_CHANGED)?this.numScreenRectEvents++:a.nameEquals(mpl$lab$view$LabView.SIM_RECT_CHANGED)&&this.numSimRectEvents++):
a instanceof mpl$lab$util$ParameterBoolean?this.numBooleans++:a instanceof mpl$lab$util$ParameterNumber?this.numDoubles++:a instanceof mpl$lab$util$ParameterString&&this.numStrings++}toStringShort(){return"MockObserver"}}
class module$contents$myphysicslab$lab$view$test$SimViewTest_MockContext{constructor(a){this.tol=a;this.startPoint=this.expectRect2=this.expectRect1=null;this.lastPoint=mpl$lab$util$Vector.ORIGIN;this.at=mpl$lab$util$AffineTransform.IDENTITY;this.strokeStyle=this.fillStyle="";this.lineWidth=0}rect(a,b,c,d){var e=this.at.transform(a,b);a=this.at.transform(a+c,b+d);null!=this.expectRect1&&(module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals(this.expectRect1.getX(),
e.getX(),this.tol),module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals(this.expectRect1.getY(),e.getY(),this.tol));null!=this.expectRect2&&(module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals(this.expectRect2.getX(),a.getX(),this.tol),module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals(this.expectRect2.getY(),a.getY(),this.tol))}moveTo(a,b){a=this.at.transform(a,b);null!=this.startPoint&&(module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals(this.startPoint.getX(),
a.getX(),this.tol),module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals(this.startPoint.getY(),a.getY(),this.tol))}lineTo(a,b){this.lastPoint=this.at.transform(a,b)}save(){}restore(){this.at=mpl$lab$util$AffineTransform.IDENTITY}stroke(){}beginPath(){}clearRect(a,b,c,d){}setTransform(a,b,c,d,e,f){this.at=new mpl$lab$util$AffineTransform(a,b,c,d,e,f)}fill(){}}
class mpl$lab$view$test$SimViewTest{static test(){module$contents$myphysicslab$lab$view$test$SimViewTest_schedule(mpl$lab$view$test$SimViewTest.testSimView1)}static testSimView1(){module$contents$myphysicslab$lab$view$test$SimViewTest_startTest(mpl$lab$view$test$SimViewTest.groupName+"testSimView1");var a=new module$contents$myphysicslab$lab$view$test$SimViewTest_MockContext(1E-14),b=new mpl$lab$view$ScreenRect(0,
0,500,300),c=new mpl$lab$util$DoubleRect(-5,-5,5,5),d=new mpl$lab$view$SimView("view1",c),e=d.getDisplayList();d.setHorizAlign(mpl$lab$view$HorizAlign.LEFT);d.setVerticalAlign(mpl$lab$view$VerticalAlign.FULL);var f=new module$contents$myphysicslab$lab$view$test$SimViewTest_MockObserver;d.addObserver(f);module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(d.getSimRect().equals(c));d.setScreenRect(b);
module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(d.getScreenRect().equals(b));module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,f.numScreenRectEvents);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals("VIEW1",d.getName());c=d.getCoordMap();var g=mpl$lab$model$PointMass.makeSquare(1),h=new mpl$lab$util$Vector(2.5,0);g.setPosition(h);var k=(new mpl$lab$view$DisplayShape(g)).setFillStyle("orange"),
l=mpl$lab$model$PointMass.makeSquare(1).setMass(mpl$lab$util$Util.POSITIVE_INFINITY);l.setPosition(new mpl$lab$util$Vector(-1,0));var m=new mpl$lab$model$Spring("spring1",l,mpl$lab$util$Vector.ORIGIN,g,mpl$lab$util$Vector.ORIGIN,2,12);l=(new mpl$lab$view$DisplaySpring(m)).setWidth(1).setColorCompressed("red").setColorExpanded("green");
module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(h instanceof mpl$lab$util$Vector);e.add(k);e.add(l);module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(e.contains(k));module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(e.contains(l));module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(2,e.toArray().length);module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(e.toArray().includes(k));module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(e.toArray().includes(l));
module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(k,e.find(g));module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(l,e.find(m));a.expectRect1=c.simToScreen(new mpl$lab$util$Vector(2,-.5));a.expectRect2=c.simToScreen(new mpl$lab$util$Vector(3,.5));a.startPoint=c.simToScreen(new mpl$lab$util$Vector(-1,0));d.paint(a);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals("orange",a.fillStyle);
module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(a.lastPoint.nearEqual(c.simToScreen(h)));module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals("green",a.strokeStyle);g=new mpl$lab$util$DoubleRect(-2,-2,2,2);var p=new mpl$lab$view$SimView("simView2",g);a=new module$contents$myphysicslab$lab$view$test$SimViewTest_MockObserver;p.addObserver(a);module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(p.getSimRect().equals(g));
p.setScreenRect(b);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,a.numScreenRectEvents);module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(p.getScreenRect().equals(b));b=new mpl$lab$util$GenericObserver(d,t=>{t.nameEquals(mpl$lab$view$LabView.SIM_RECT_CHANGED)&&p.setSimRect(d.getSimRect())},"match simRect");module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(0,f.numSimRectEvents);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(0,
a.numSimRectEvents);c=new mpl$lab$util$DoubleRect(-15,-15,15,15);d.setSimRect(c);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,f.numSimRectEvents);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,a.numSimRectEvents);module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(d.getSimRect().equals(c));module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(d.getSimRect().getLeft(),p.getSimRect().getLeft());module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(d.getSimRect().getRight(),
p.getSimRect().getRight());module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(d.getSimRect().getBottom(),p.getSimRect().getBottom());module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(d.getSimRect().getTop(),p.getSimRect().getTop());b.disconnect();module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,a.numSimRectEvents);g=p.getSimRect();module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(g.equals(d.getSimRect()));c=new mpl$lab$util$DoubleRect(-30,
-30,30,30);d.setSimRect(c);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(2,f.numSimRectEvents);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,a.numSimRectEvents);module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(d.getSimRect().equals(c));module$contents$myphysicslab$lab$view$test$SimViewTest_assertTrue(p.getSimRect().equals(g));module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(mpl$lab$view$HorizAlign.LEFT,
d.getHorizAlign());d.setHorizAlign(mpl$lab$view$HorizAlign.RIGHT);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(mpl$lab$view$HorizAlign.RIGHT,d.getHorizAlign());module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(mpl$lab$view$VerticalAlign.FULL,d.getVerticalAlign());d.setVerticalAlign(mpl$lab$view$VerticalAlign.BOTTOM);module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(mpl$lab$view$VerticalAlign.BOTTOM,
d.getVerticalAlign());module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,d.getAspectRatio());d.setAspectRatio(1.5);module$contents$myphysicslab$lab$view$test$SimViewTest_assertRoughlyEquals(1.5,d.getAspectRatio(),1E-15);module$contents$myphysicslab$lab$view$test$SimViewTest_assertThrows(()=>d.setHorizAlign("foo"));module$contents$myphysicslab$lab$view$test$SimViewTest_assertThrows(()=>d.setVerticalAlign("foo"));e.remove(k);module$contents$myphysicslab$lab$view$test$SimViewTest_assertFalse(e.contains(k));
module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(1,e.toArray().length);module$contents$myphysicslab$lab$view$test$SimViewTest_assertFalse(e.toArray().includes(k));e.removeAll();module$contents$myphysicslab$lab$view$test$SimViewTest_assertFalse(e.contains(l));module$contents$myphysicslab$lab$view$test$SimViewTest_assertEquals(0,e.toArray().length);module$contents$myphysicslab$lab$view$test$SimViewTest_assertFalse(e.toArray().includes(l));module$contents$myphysicslab$lab$view$test$SimViewTest_assertThrows(()=>
new mpl$lab$view$SimView("badView",mpl$lab$util$DoubleRect.EMPTY_RECT))}}mpl$lab$view$test$SimViewTest.groupName="SimViewTest.";class mpl$lab$model$AbstractODESim extends mpl$lab$util$AbstractSubject{constructor(a,b,c){super(a||"SIM");this.simList_=b||new mpl$lab$model$SimList;this.varsList_=c||new mpl$lab$model$VarsList([],[],this.getName()+"_VARS");this.recentState_=this.initialState_=null}toString(){return mpl$lab$util$Util.ADVANCED?"":", varsList_: "+this.varsList_.toStringShort()+", simList_: "+this.simList_.toStringShort()+
super.toString()}evaluate(a,b,c){}getTime(){return this.varsList_.getTime()}getVarsList(){return this.varsList_}modifyObjects(){}reset(){null!=this.initialState_&&this.varsList_.setValues(this.initialState_);this.simList_.removeTemporary(mpl$lab$util$Util.POSITIVE_INFINITY);this.modifyObjects();this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$Simulation.RESET))}restoreState(){null!=this.recentState_&&this.varsList_.setValues(this.recentState_,
!0)}saveInitialState(){this.initialState_=this.varsList_.getValues();this.broadcast(new mpl$lab$util$GenericEvent(this,mpl$lab$model$Simulation.INITIAL_STATE_SAVED))}saveState(){this.recentState_=this.varsList_.getValues()}getSimList(){return this.simList_}setVarsList(a){this.varsList_=a}};class mpl$lab$app$EventHandler extends mpl$lab$util$Printable{startDrag(a,b,c,d,e){}mouseDrag(a,b,c,d){}finishDrag(a,b,c){}handleKeyEvent(a,b,c){}}mpl$lab$app$EventHandler.MOUSE_DRAG="MOUSE_DRAG";mpl$lab$app$EventHandler.START_DRAG="START_DRAG";mpl$lab$app$EventHandler.FINISH_DRAG="FINISH_DRAG";class mpl$sims$pendulum$DoublePendulumSim extends mpl$lab$model$AbstractODESim{constructor(a){super(a);this.setVarsList(new mpl$lab$model$VarsList([mpl$sims$pendulum$DoublePendulumSim.en.ANGLE_1,mpl$sims$pendulum$DoublePendulumSim.en.ANGLE_1_VELOCITY,mpl$sims$pendulum$DoublePendulumSim.en.ANGLE_2,mpl$sims$pendulum$DoublePendulumSim.en.ANGLE_2_VELOCITY,
mpl$sims$pendulum$DoublePendulumSim.en.ACCELERATION_1,mpl$sims$pendulum$DoublePendulumSim.en.ACCELERATION_2,mpl$lab$model$EnergySystem.en.KINETIC_ENERGY,mpl$lab$model$EnergySystem.en.POTENTIAL_ENERGY,mpl$lab$model$EnergySystem.en.TOTAL_ENERGY,mpl$lab$model$VarsList.en.TIME],[mpl$sims$pendulum$DoublePendulumSim.i18n.ANGLE_1,mpl$sims$pendulum$DoublePendulumSim.i18n.ANGLE_1_VELOCITY,
mpl$sims$pendulum$DoublePendulumSim.i18n.ANGLE_2,mpl$sims$pendulum$DoublePendulumSim.i18n.ANGLE_2_VELOCITY,mpl$sims$pendulum$DoublePendulumSim.i18n.ACCELERATION_1,mpl$sims$pendulum$DoublePendulumSim.i18n.ACCELERATION_2,mpl$lab$model$EnergySystem.i18n.KINETIC_ENERGY,mpl$lab$model$EnergySystem.i18n.POTENTIAL_ENERGY,mpl$lab$model$EnergySystem.i18n.TOTAL_ENERGY,
mpl$lab$model$VarsList.i18n.TIME],this.getName()+"_VARS"));this.getVarsList().setComputed(4,5,6,7,8);this.rod2Length_=this.rod1Length_=1;this.rod1_=new mpl$lab$model$ConcreteLine("rod1");this.rod2_=new mpl$lab$model$ConcreteLine("rod2");this.bob1_=mpl$lab$model$PointMass.makeCircle(.2,"bob1").setMass(2);this.bob2_=mpl$lab$model$PointMass.makeCircle(.2,"bob2").setMass(2);this.gravity_=
9.8;this.potentialOffset_=0;this.isDragging_=!1;this.getSimList().add(this.rod1_,this.rod2_,this.bob1_,this.bob2_);this.restState();this.getVarsList().setValue(0,Math.PI/8);this.saveInitialState();this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$pendulum$DoublePendulumSim.en.ROD_1_LENGTH,mpl$sims$pendulum$DoublePendulumSim.i18n.ROD_1_LENGTH,()=>this.getRod1Length(),b=>this.setRod1Length(b)));this.addParameter(new mpl$lab$util$ParameterNumber(this,
mpl$sims$pendulum$DoublePendulumSim.en.ROD_2_LENGTH,mpl$sims$pendulum$DoublePendulumSim.i18n.ROD_2_LENGTH,()=>this.getRod2Length(),b=>this.setRod2Length(b)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$pendulum$DoublePendulumSim.en.MASS_1,mpl$sims$pendulum$DoublePendulumSim.i18n.MASS_1,()=>this.getMass1(),b=>this.setMass1(b)));this.addParameter(new mpl$lab$util$ParameterNumber(this,
mpl$sims$pendulum$DoublePendulumSim.en.MASS_2,mpl$sims$pendulum$DoublePendulumSim.i18n.MASS_2,()=>this.getMass2(),b=>this.setMass2(b)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$pendulum$DoublePendulumSim.en.GRAVITY,mpl$sims$pendulum$DoublePendulumSim.i18n.GRAVITY,()=>this.getGravity(),b=>this.setGravity(b)));this.addParameter((new mpl$lab$util$ParameterNumber(this,
mpl$lab$model$EnergySystem.en.PE_OFFSET,mpl$lab$model$EnergySystem.i18n.PE_OFFSET,()=>this.getPEOffset(),b=>this.setPEOffset(b))).setLowerLimit(mpl$lab$util$Util.NEGATIVE_INFINITY).setSignifDigits(5))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", rod1Length_: "+mpl$lab$util$Util.NF(this.rod1Length_)+", rod2Length_: "+mpl$lab$util$Util.NF(this.rod2Length_)+
", rod1_: "+this.rod1_+", rod2_: "+this.rod2_+", bob1_: "+this.bob1_+", bob2_: "+this.bob2_+", gravity_: "+mpl$lab$util$Util.NF(this.gravity_)+", potentialOffset_: "+mpl$lab$util$Util.NF(this.potentialOffset_)+super.toString()}getClassName(){return"DoublePendulumSim"}restState(){const a=this.getVarsList(),b=a.getValues();for(let c=0;4>c;c++)b[c]=0;a.setValues(b);this.moveObjects(b)}getEnergyInfo(){var a=this.rod1Length_;const b=this.rod2Length_,c=this.bob1_.getKineticEnergy()+
this.bob2_.getKineticEnergy(),d=this.bob1_.getPosition().getY(),e=this.bob2_.getPosition().getY();a=this.gravity_*this.bob1_.getMass()*(d- -a)+this.gravity_*this.bob2_.getMass()*(e-(-a-b));return new mpl$lab$model$EnergyInfo(a+this.potentialOffset_,c)}getPEOffset(){return this.potentialOffset_}setPEOffset(a){this.potentialOffset_=a;this.getVarsList().incrSequence(7,8);this.broadcastParameter(mpl$lab$model$EnergySystem.en.PE_OFFSET)}modifyObjects(){const a=
this.getVarsList(),b=a.getValues();var c=mpl$lab$util$Util.limitAngle(b[0]);c!=b[0]&&(this.getVarsList().setValue(0,c,!1),b[0]=c);c=mpl$lab$util$Util.limitAngle(b[2]);c!=b[2]&&(this.getVarsList().setValue(2,c,!1),b[2]=c);this.moveObjects(b);c=Array(b.length);this.evaluate(b,c,0);b[4]=c[1];b[5]=c[3];c=this.getEnergyInfo();b[6]=c.getTranslational();b[7]=c.getPotential();b[8]=c.getTotalEnergy();a.setValues(b,!0)}moveObjects(a){var b=a[0],c=Math.sin(b),
d=Math.cos(b),e=a[2];b=Math.sin(e);var f=Math.cos(e);const g=this.rod1Length_;e=this.rod2Length_;const h=g*c,k=-g*d,l=h+e*b,m=k-e*f;this.bob1_.setPosition(new mpl$lab$util$Vector(h,k));this.bob2_.setPosition(new mpl$lab$util$Vector(l,m));d*=a[1]*g;c*=a[1]*g;f=d+a[3]*e*f;a=c+a[3]*e*b;this.bob1_.setVelocity(new mpl$lab$util$Vector(d,c));this.bob2_.setVelocity(new mpl$lab$util$Vector(f,a));this.rod1_.setStartPoint(mpl$lab$util$Vector.ORIGIN);
this.rod1_.setEndPoint(this.bob1_.getPosition());this.rod2_.setStartPoint(this.bob1_.getPosition());this.rod2_.setEndPoint(this.bob2_.getPosition())}startDrag(a,b,c,d,e){return a==this.bob1_||a==this.bob2_?this.isDragging_=!0:!1}mouseDrag(a,b,c,d){d=this.getVarsList();const e=d.getValues();b=b.subtract(c);a==this.bob1_?(e[0]=Math.atan2(b.getX(),-b.getY()),e[1]=0,e[3]=0):a==this.bob2_&&(e[2]=Math.atan2(b.getX()-this.bob1_.getPosition().getX(),-(b.getY()-this.bob1_.getPosition().getY())),e[1]=0,e[3]=
0);d.setValues(e);this.moveObjects(e)}finishDrag(a,b,c){this.isDragging_=!1}handleKeyEvent(a,b,c){}evaluate(a,b,c){mpl$lab$util$Util.zeroArray(b);b[9]=1;if(!this.isDragging_){c=a[0];const d=a[1],e=a[2];a=a[3];const f=this.bob2_.getMass(),g=this.bob1_.getMass(),h=this.rod1Length_,k=this.rod2Length_,l=this.gravity_;b[0]=d;let m=-l*(2*g+f)*Math.sin(c);m-=l*f*Math.sin(c-2*e);m-=2*f*a*a*k*Math.sin(c-e);m-=f*d*d*h*Math.sin(2*(c-e));m/=h*(2*g+f-f*Math.cos(2*(c-e)));b[1]=m;b[2]=a;
m=(g+f)*d*d*h;m+=l*(g+f)*Math.cos(c);m+=f*a*a*k*Math.cos(c-e);m=2*m*Math.sin(c-e);m/=k*(2*g+f-f*Math.cos(2*(c-e)));b[3]=m}return null}getMass1(){return this.bob1_.getMass()}setMass1(a){this.bob1_.setMass(a);this.getVarsList().incrSequence(4,5,6,7,8);this.broadcastParameter(mpl$sims$pendulum$DoublePendulumSim.en.MASS_1)}getMass2(){return this.bob2_.getMass()}setMass2(a){this.bob2_.setMass(a);this.getVarsList().incrSequence(4,5,6,7,8);this.broadcastParameter(mpl$sims$pendulum$DoublePendulumSim.en.MASS_2)}getGravity(){return this.gravity_}setGravity(a){this.gravity_=
a;this.getVarsList().incrSequence(4,5,7,8);this.broadcastParameter(mpl$sims$pendulum$DoublePendulumSim.en.GRAVITY)}getRod1Length(){return this.rod1Length_}setRod1Length(a){this.rod1Length_=a;this.getVarsList().incrSequence(4,5,6,7,8);this.broadcastParameter(mpl$sims$pendulum$DoublePendulumSim.en.ROD_1_LENGTH)}getRod2Length(){return this.rod2Length_}setRod2Length(a){this.rod2Length_=a;this.getVarsList().incrSequence(4,5,6,7,8);this.broadcastParameter(mpl$sims$pendulum$DoublePendulumSim.en.ROD_2_LENGTH)}}
mpl$sims$pendulum$DoublePendulumSim.en={ACCELERATION_1:"acceleration-1",ACCELERATION_2:"acceleration-2",ANGLE_1:"angle-1",ANGLE_1_VELOCITY:"angle-1 velocity",ANGLE_2:"angle-2",ANGLE_2_VELOCITY:"angle-2 velocity",GRAVITY:"gravity",MASS_1:"mass-1",MASS_2:"mass-2",ROD_1_LENGTH:"rod-1 length",ROD_2_LENGTH:"rod-2 length"};
mpl$sims$pendulum$DoublePendulumSim.de_strings={ACCELERATION_1:"Beschleunigung-1",ACCELERATION_2:"Beschleunigung-2",ANGLE_1:"Winkel-1",ANGLE_1_VELOCITY:"Winkel-1 Geschwindigkeit",ANGLE_2:"Winkel-2",ANGLE_2_VELOCITY:"Winkel-2 Geschwindigkeit",GRAVITY:"Gravitation",MASS_1:"Masse-1",MASS_2:"Masse-2",ROD_1_LENGTH:"Stange-1 L\u00e4nge",ROD_2_LENGTH:"Stange-2 L\u00e4nge"};
mpl$sims$pendulum$DoublePendulumSim.i18n="de"===goog.LOCALE?mpl$sims$pendulum$DoublePendulumSim.de_strings:mpl$sims$pendulum$DoublePendulumSim.en;class mpl$lab$model$DiffEqSolver extends mpl$lab$util$Printable{getName(a){}nameEquals(a){}step(a){}};class mpl$lab$model$AdvanceStrategy extends mpl$lab$util$Printable{advance(a,b){}getTime(){}getTimeStep(){}reset(){}save(){}setTimeStep(a){}};class mpl$lab$model$ODEAdvance extends mpl$lab$model$AdvanceStrategy{getDiffEqSolver(){}setDiffEqSolver(a){}};class mpl$lab$model$RungeKutta{constructor(a){this.ode_=a;this.inp_=[];this.k1_=[];this.k2_=[];this.k3_=[];this.k4_=[]}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"RungeKutta{ode_: "+this.ode_.toStringShort()+"}"}getName(a){return a?mpl$lab$model$RungeKutta.i18n.NAME:mpl$lab$util$Util.toName(mpl$lab$model$RungeKutta.en.NAME)}nameEquals(a){return this.getName()==
mpl$lab$util$Util.toName(a)}step(a){const b=this.ode_.getVarsList(),c=b.getValues(),d=c.length;this.inp_.length<d&&(this.inp_=Array(d),this.k1_=Array(d),this.k2_=Array(d),this.k3_=Array(d),this.k4_=Array(d));var e=this.inp_;const f=this.k1_,g=this.k2_,h=this.k3_,k=this.k4_;for(var l=0;l<d;l++)e[l]=c[l];mpl$lab$util$Util.zeroArray(f);l=this.ode_.evaluate(e,f,0);if(null!==l)return l;for(l=0;l<d;l++)e[l]=c[l]+f[l]*a/2;mpl$lab$util$Util.zeroArray(g);
l=this.ode_.evaluate(e,g,a/2);if(null!==l)return l;for(l=0;l<d;l++)e[l]=c[l]+g[l]*a/2;mpl$lab$util$Util.zeroArray(h);l=this.ode_.evaluate(e,h,a/2);if(null!==l)return l;for(l=0;l<d;l++)e[l]=c[l]+h[l]*a;mpl$lab$util$Util.zeroArray(k);l=this.ode_.evaluate(e,k,a);if(null!==l)return l;for(e=0;e<d;e++)c[e]+=(f[e]+2*g[e]+2*h[e]+k[e])*a/6;b.setValues(c,!0);return null}}mpl$lab$model$RungeKutta.en={NAME:"Runge-Kutta"};
mpl$lab$model$RungeKutta.de_strings={NAME:"Runge-Kutta"};mpl$lab$model$RungeKutta.i18n="de"===goog.LOCALE?mpl$lab$model$RungeKutta.de_strings:mpl$lab$model$RungeKutta.en;class mpl$lab$model$SimpleAdvance{constructor(a,b){this.sim_=a;this.odeSolver_=b||new mpl$lab$model$RungeKutta(a);this.timeStep_=.025}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", odeSolver_: "+this.odeSolver_.toStringShort()+"}"}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"SimpleAdvance{sim_: "+this.sim_.toStringShort()+"}"}advance(a,b){this.sim_.getSimList().removeTemporary(this.sim_.getTime());
a=this.odeSolver_.step(a);if(null!=a)throw"error during advance "+a;this.sim_.modifyObjects();void 0!==b&&b.memorize()}getDiffEqSolver(){return this.odeSolver_}getTime(){return this.sim_.getTime()}getTimeStep(){return this.timeStep_}reset(){this.sim_.reset()}save(){this.sim_.saveInitialState()}setDiffEqSolver(a){this.odeSolver_=a}setTimeStep(a){this.timeStep_=a}};const module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_MockObserver1{constructor(a){this.sim=a;this.numStrings=this.numDoubles=this.numBooleans=this.numEvents=0}observe(a){a instanceof mpl$lab$util$GenericEvent?(this.numEvents++,module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(this.sim,a.getSubject())):a instanceof mpl$lab$util$ParameterBoolean?(this.numBooleans++,module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(this.sim,
a.getSubject()),a=a.getValue(),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue("boolean"===typeof a)):a instanceof mpl$lab$util$ParameterNumber?(this.numDoubles++,module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(this.sim,a.getSubject()),a=a.getValue(),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue("number"===typeof a)):a instanceof mpl$lab$util$ParameterString&&
(this.numStrings++,module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(this.sim,a.getSubject()),module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue("string"===typeof a.getValue()))}toStringShort(){return"MockObserver1"}}
class mpl$sims$pendulum$test$DoublePendulumTest{static test(){module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_schedule(mpl$sims$pendulum$test$DoublePendulumTest.testDoublePendulum)}static testDoublePendulum(){module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_startTest(mpl$sims$pendulum$test$DoublePendulumTest.groupName+"testDoublePendulum");var a=new mpl$sims$pendulum$DoublePendulumSim,
b=a.getSimList();const c=new mpl$lab$model$SimpleAdvance(a);var d=b.getPointMass("bob1");module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue(d instanceof mpl$lab$model$PointMass);d=b.getPointMass("bob2");module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue(d instanceof mpl$lab$model$PointMass);d=b.getConcreteLine("rod1");module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue(d instanceof
mpl$lab$model$ConcreteLine);b=b.getConcreteLine("rod2");module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue(b instanceof mpl$lab$model$ConcreteLine);b=a.getParameterNumber(mpl$sims$pendulum$DoublePendulumSim.en.ROD_1_LENGTH);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals("ROD_1_LENGTH",mpl$lab$util$Util.toName(mpl$sims$pendulum$DoublePendulumSim.en.ROD_1_LENGTH));
module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue(b.nameEquals(mpl$sims$pendulum$DoublePendulumSim.en.ROD_1_LENGTH));module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$pendulum$DoublePendulumSim.en.ROD_1_LENGTH),b.getName());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1,b.getValue());b=a.getParameterNumber(mpl$sims$pendulum$DoublePendulumSim.en.ROD_2_LENGTH);
module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$pendulum$DoublePendulumSim.en.ROD_2_LENGTH),b.getName());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1,b.getValue());b=a.getParameterNumber(mpl$sims$pendulum$DoublePendulumSim.en.MASS_1);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$pendulum$DoublePendulumSim.en.MASS_1),
b.getName());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(2,b.getValue());b=a.getParameterNumber(mpl$sims$pendulum$DoublePendulumSim.en.MASS_2);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$pendulum$DoublePendulumSim.en.MASS_2),b.getName());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(2,b.getValue());
b=a.getParameterNumber(mpl$sims$pendulum$DoublePendulumSim.en.GRAVITY);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$pendulum$DoublePendulumSim.en.GRAVITY),b.getName());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(9.8,b.getValue());b=new module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_MockObserver1(a);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,
b.numEvents);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,b.numBooleans);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,b.numDoubles);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,b.numStrings);a.addObserver(b);d=a.getObservers();module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1,d.length);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertTrue(d.includes(b));
module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1,a.getRod1Length());a.setRod1Length(1.2);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1.2,a.getRod1Length());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1,b.numDoubles);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1,a.getRod2Length());a.setRod2Length(.9);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(.9,
a.getRod2Length());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(2,b.numDoubles);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(2,a.getMass1());a.setMass1(1);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1,a.getMass1());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(3,b.numDoubles);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(2,a.getMass2());
a.setMass2(1.2);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1.2,a.getMass2());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(4,b.numDoubles);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(9.8,a.getGravity());a.setGravity(5);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(5,a.getGravity());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(5,
b.numDoubles);a.restState();b=a.getEnergyInfo();module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,b.getPotential());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,b.getTranslational());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,b.getTotalEnergy());a.getVarsList().setValue(0,Math.PI/8);a.saveInitialState();b=[[.39177,-.07457,.00115,.09186],[.38897,-.14902,.00459,.18354],[.38432,-.22321,.01032,
.27484],[.37781,-.29694,.01833,.36545],[.36948,-.36994,.02859,.4549],[.35933,-.44182,.04106,.54255],[.3474,-.51206,.05569,.62746],[.33374,-.57996,.0724,.70839],[.31843,-.64463,.09106,.78374],[.30155,-.70497,.11152,.85156]];c.advance(0);d=a.getEnergyInfo();module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(1.004790170851014,d.getPotential());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(0,d.getTranslational());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(d.getPotential(),
d.getTotalEnergy());d=0;for(let e=0;10>e;e++){c.advance(.025);d+=.025;module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertRoughlyEquals(d,a.getTime(),1E-15);const f=a.getVarsList().getValues(!0);for(let g=0;4>g;g++)module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertRoughlyEquals(b[e][g],f[g],2E-5);module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertRoughlyEquals(1.0047901623242046,f[8],2E-5)}a.setPEOffset(99-a.getEnergyInfo().getPotential());
a=a.getEnergyInfo();module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertEquals(99,a.getPotential());module$contents$myphysicslab$sims$pendulum$test$DoublePendulumTest_assertRoughlyEquals(.37563230349452903,a.getTranslational(),1E-10)}}mpl$sims$pendulum$test$DoublePendulumTest.groupName="DoublePendulumTest.";class mpl$lab$model$ModifiedEuler{constructor(a){this.ode_=a;this.inp_=[];this.k1_=[];this.k2_=[]}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort()}toStringShort(){return mpl$lab$util$Util.ADVANCED?"":"ModifiedEuler{ode_: "+this.ode_.toStringShort()+"}"}getName(a){return a?mpl$lab$model$ModifiedEuler.i18n.NAME:mpl$lab$util$Util.toName(mpl$lab$model$ModifiedEuler.en.NAME)}nameEquals(a){return this.getName()==
mpl$lab$util$Util.toName(a)}step(a){const b=this.ode_.getVarsList(),c=b.getValues(),d=c.length;this.inp_.length!=d&&(this.inp_=Array(d),this.k1_=Array(d),this.k2_=Array(d));var e=this.inp_;const f=this.k1_,g=this.k2_;for(var h=0;h<d;h++)e[h]=c[h];mpl$lab$util$Util.zeroArray(f);h=this.ode_.evaluate(e,f,0);if(null!=h)return h;for(h=0;h<d;h++)e[h]=c[h]+f[h]*a;mpl$lab$util$Util.zeroArray(g);h=this.ode_.evaluate(e,g,a);if(null!=h)return h;
for(e=0;e<d;e++)c[e]+=(f[e]+g[e])*a/2;b.setValues(c,!0);return null}}mpl$lab$model$ModifiedEuler.en={NAME:"Modified Euler"};mpl$lab$model$ModifiedEuler.de_strings={NAME:"Modifiziert Euler"};mpl$lab$model$ModifiedEuler.i18n="de"===goog.LOCALE?mpl$lab$model$ModifiedEuler.de_strings:mpl$lab$model$ModifiedEuler.en;class mpl$sims$roller$HasPath extends mpl$lab$util$Printable{getPath(){}setPath(a){}};class mpl$sims$roller$RollerSingleSim extends mpl$lab$model$AbstractODESim{constructor(a,b){super(b);this.setVarsList(new mpl$lab$model$VarsList([mpl$sims$roller$RollerSingleSim.en.POSITION,mpl$sims$roller$RollerSingleSim.en.VELOCITY,mpl$lab$model$VarsList.en.TIME,mpl$sims$roller$RollerSingleSim.en.X_POSITION,mpl$sims$roller$RollerSingleSim.en.Y_POSITION,
mpl$lab$model$EnergySystem.en.KINETIC_ENERGY,mpl$lab$model$EnergySystem.en.POTENTIAL_ENERGY,mpl$lab$model$EnergySystem.en.TOTAL_ENERGY,mpl$sims$roller$RollerSingleSim.en.ANCHOR_X,mpl$sims$roller$RollerSingleSim.en.ANCHOR_Y],[mpl$sims$roller$RollerSingleSim.i18n.POSITION,mpl$sims$roller$RollerSingleSim.i18n.VELOCITY,mpl$lab$model$VarsList.i18n.TIME,
mpl$sims$roller$RollerSingleSim.i18n.X_POSITION,mpl$sims$roller$RollerSingleSim.i18n.Y_POSITION,mpl$lab$model$EnergySystem.i18n.KINETIC_ENERGY,mpl$lab$model$EnergySystem.i18n.POTENTIAL_ENERGY,mpl$lab$model$EnergySystem.i18n.TOTAL_ENERGY,mpl$sims$roller$RollerSingleSim.i18n.ANCHOR_X,mpl$sims$roller$RollerSingleSim.i18n.ANCHOR_Y],this.getName()+
"_VARS"));this.getVarsList().setComputed(3,4,5,6,7);this.hasSpring_=a||!1;this.damping_=0;this.gravity_=9.8;this.ball1_=mpl$lab$model$PointMass.makeCircle(.3,"ball1").setMass(.5);this.getSimList().add(this.ball1_);this.anchor_=mpl$lab$model$PointMass.makeSquare(.4,"anchor");this.spring_=new mpl$lab$model$Spring("spring",this.ball1_,mpl$lab$util$Vector.ORIGIN,this.anchor_,mpl$lab$util$Vector.ORIGIN,
1,5);this.hasSpring_&&this.getSimList().add(this.anchor_,this.spring_);this.path_=null;this.potentialOffset_=this.lowestPoint_=0;this.pathPoint_=new mpl$lab$model$PathPoint;this.dragObj_=null;this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$roller$RollerSingleSim.en.DAMPING,mpl$sims$roller$RollerSingleSim.i18n.DAMPING,()=>this.getDamping(),c=>this.setDamping(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,
mpl$sims$roller$RollerSingleSim.en.GRAVITY,mpl$sims$roller$RollerSingleSim.i18n.GRAVITY,()=>this.getGravity(),c=>this.setGravity(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$roller$RollerSingleSim.en.MASS,mpl$sims$roller$RollerSingleSim.i18n.MASS,()=>this.getMass(),c=>this.setMass(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,
mpl$sims$roller$RollerSingleSim.en.SPRING_DAMPING,mpl$sims$roller$RollerSingleSim.i18n.SPRING_DAMPING,()=>this.getSpringDamping(),c=>this.setSpringDamping(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$roller$RollerSingleSim.en.SPRING_LENGTH,mpl$sims$roller$RollerSingleSim.i18n.SPRING_LENGTH,()=>this.getSpringLength(),c=>this.setSpringLength(c)));this.addParameter(new mpl$lab$util$ParameterNumber(this,
mpl$sims$roller$RollerSingleSim.en.SPRING_STIFFNESS,mpl$sims$roller$RollerSingleSim.i18n.SPRING_STIFFNESS,()=>this.getSpringStiffness(),c=>this.setSpringStiffness(c)));this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$model$EnergySystem.en.PE_OFFSET,mpl$lab$model$EnergySystem.i18n.PE_OFFSET,()=>this.getPEOffset(),c=>this.setPEOffset(c))).setLowerLimit(mpl$lab$util$Util.NEGATIVE_INFINITY).setSignifDigits(5))}toString(){return mpl$lab$util$Util.ADVANCED?
"":this.toStringShort().slice(0,-1)+", ball1_: "+this.ball1_+", anchor_: "+this.anchor_+", spring_: "+this.spring_+", path_: "+this.path_+", hasSpring_: "+this.hasSpring_+", damping_: "+mpl$lab$util$Util.NF(this.damping_)+", gravity_: "+mpl$lab$util$Util.NF(this.gravity_)+", lowestPoint_: "+mpl$lab$util$Util.NF(this.lowestPoint_)+", potentialOffset_: "+mpl$lab$util$Util.NF(this.potentialOffset_)+super.toString()}getClassName(){return"RollerSingleSim"}getPath(){return this.path_}setPath(a){var b=
this.getSimList(),c=this.path_;null!=c&&b.remove(c);this.path_=a;b.add(a);c=a.getBoundsWorld();b=this.getVarsList();this.hasSpring_&&(b.setValue(8,c.getLeft()+.2*c.getWidth()),b.setValue(9,c.getTop()-.4*c.getHeight()));this.lowestPoint_=c.getBottom();c=new mpl$lab$util$Vector(c.getLeft()+.1*c.getWidth(),c.getTop()-.1*c.getHeight());this.pathPoint_=a.findNearestGlobal(c);b.setValue(0,this.pathPoint_.p);b.setValue(1,0);b.setValue(2,0);this.modifyObjects();this.saveInitialState()}modifyObjects(){if(null!=
this.path_){const b=this.getVarsList();var a=b.getValues();this.moveObjects(a);const c=this.path_.mod_p(a[0]);c!=a[0]&&(a[0]=c,b.setValue(0,c));b.setValue(3,this.path_.map_p_to_x(a[0]),!0);b.setValue(4,this.path_.map_p_to_y(a[0]),!0);a=this.getEnergyInfo();b.setValue(5,a.getTranslational(),!0);b.setValue(6,a.getPotential(),!0);b.setValue(7,a.getTotalEnergy(),!0)}}moveObjects(a){null!=this.path_&&(this.pathPoint_.p=a[0],this.path_.map_p_to_slope(this.pathPoint_),this.ball1_.setPosition(this.pathPoint_),
this.ball1_.setVelocity(this.pathPoint_.getSlope().multiply(a[1])));this.hasSpring_&&this.anchor_.setPosition(new mpl$lab$util$Vector(a[8],a[9]))}getEnergyInfo(){const a=this.ball1_.getKineticEnergy();let b=this.ball1_.getMass()*this.gravity_*(this.ball1_.getPosition().getY()-this.lowestPoint_);this.hasSpring_&&(b+=this.spring_.getPotentialEnergy());return new mpl$lab$model$EnergyInfo(b+this.potentialOffset_,a)}getPEOffset(){return this.potentialOffset_}setPEOffset(a){this.potentialOffset_=
a;this.getVarsList().incrSequence(6,7);this.broadcastParameter(mpl$lab$model$EnergySystem.en.PE_OFFSET)}startDrag(a,b,c,d,e){return a==this.ball1_?(this.dragObj_=a,!0):a==this.anchor_?!0:!1}mouseDrag(a,b,c,d){d=this.getVarsList();b=b.subtract(c);a==this.ball1_&&null!=this.path_?(this.pathPoint_=this.path_.findNearestGlobal(b),d.setValue(0,this.pathPoint_.p),d.setValue(1,0),d.incrSequence(3,4,5,6,7)):a==this.anchor_&&(d.setValue(8,b.getX()),d.setValue(9,b.getY()));this.moveObjects(d.getValues())}finishDrag(a,
b,c){this.dragObj_=null}handleKeyEvent(a,b,c){}evaluate(a,b,c){mpl$lab$util$Util.zeroArray(b);b[2]=1;if(this.dragObj_!=this.ball1_){this.moveObjects(a);b[0]=a[1];c=this.pathPoint_.slope;const d=isFinite(c)?c/Math.sqrt(1+c*c):1;b[1]=-this.gravity_*this.pathPoint_.direction*d-this.damping_*a[1]/this.ball1_.getMass();if(this.hasSpring_){if(isFinite(c)){if(a=new mpl$lab$util$Vector(1,c,0),a=a.normalize().multiply(this.pathPoint_.direction),null==a)throw"";
}else a=new mpl$lab$util$Vector(0,0<c?1:-1,0);c=this.spring_.calculateForces()[0];goog.asserts.assert(c.getBody()==this.ball1_);c=c.getVector();b[1]+=c.dotProduct(a)/this.ball1_.getMass()}}return null}getGravity(){return this.gravity_}setGravity(a){this.gravity_=a;this.getVarsList().incrSequence(6,7);this.broadcastParameter(mpl$sims$roller$RollerSingleSim.en.GRAVITY)}getDamping(){return this.damping_}setDamping(a){this.damping_=a;this.broadcastParameter(mpl$sims$roller$RollerSingleSim.en.DAMPING)}getMass(){return this.ball1_.getMass()}setMass(a){this.ball1_.setMass(a);
this.getVarsList().incrSequence(5,6,7);this.broadcastParameter(mpl$sims$roller$RollerSingleSim.en.MASS)}getSpringStiffness(){return this.spring_.getStiffness()}setSpringStiffness(a){this.spring_.setStiffness(a);this.getVarsList().incrSequence(6,7);this.broadcastParameter(mpl$sims$roller$RollerSingleSim.en.SPRING_STIFFNESS)}getSpringLength(){return this.spring_.getRestLength()}setSpringLength(a){this.spring_.setRestLength(a);this.getVarsList().incrSequence(6,
7);this.broadcastParameter(mpl$sims$roller$RollerSingleSim.en.SPRING_LENGTH)}getSpringDamping(){return this.spring_.getDamping()}setSpringDamping(a){this.spring_.setDamping(a);this.broadcastParameter(mpl$sims$roller$RollerSingleSim.en.SPRING_DAMPING)}}
mpl$sims$roller$RollerSingleSim.en={ANCHOR_X:"anchor X",ANCHOR_Y:"anchor Y",DAMPING:"damping",GRAVITY:"gravity",MASS:"mass",SPRING_DAMPING:"spring damping",SPRING_LENGTH:"spring length",SPRING_STIFFNESS:"spring stiffness",POSITION:"position",VELOCITY:"velocity",X_POSITION:"x position",Y_POSITION:"y position"};
mpl$sims$roller$RollerSingleSim.de_strings={ANCHOR_X:"Anker X",ANCHOR_Y:"Anker Y",DAMPING:"D\u00e4mpfung",GRAVITY:"Gravitation",MASS:"Masse",SPRING_DAMPING:"Federd\u00e4mpfung",SPRING_LENGTH:"Federl\u00e4nge",SPRING_STIFFNESS:"Federsteifheit",POSITION:"Position",VELOCITY:"Geschwindigkeit",X_POSITION:"x Position",Y_POSITION:"y Position"};
mpl$sims$roller$RollerSingleSim.i18n="de"===goog.LOCALE?mpl$sims$roller$RollerSingleSim.de_strings:mpl$sims$roller$RollerSingleSim.en;const module$contents$myphysicslab$sims$roller$test$RollerTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$sims$roller$test$RollerTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$sims$roller$test$RollerTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$sims$roller$test$RollerTest_assertFalse=a=>mpl$test$TestRig.assertFalse(a),
module$contents$myphysicslab$sims$roller$test$RollerTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$sims$roller$test$RollerTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$sims$roller$test$RollerTest_startTest=a=>mpl$test$TestRig.startTest(a);
class mpl$sims$roller$test$RollerTest{static test(){module$contents$myphysicslab$sims$roller$test$RollerTest_schedule(mpl$sims$roller$test$RollerTest.testRoller1)}static testRoller1(){module$contents$myphysicslab$sims$roller$test$RollerTest_startTest(mpl$sims$roller$test$RollerTest.groupName+"testRoller1");var a=new mpl$sims$roller$RollerSingleSim;a.getSimList();var b=new mpl$lab$model$ModifiedEuler(a);
b=new mpl$lab$model$SimpleAdvance(a,b);var c=new mpl$lab$model$NumericalPath(new mpl$sims$roller$CirclePath(3));a.setPath(c);module$contents$myphysicslab$sims$roller$test$RollerTest_assertEquals(0,a.getDamping());module$contents$myphysicslab$sims$roller$test$RollerTest_assertEquals(.5,a.getMass());module$contents$myphysicslab$sims$roller$test$RollerTest_assertEquals(9.8,a.getGravity());c=a.getVarsList();const d=[[2.3586219743147407,
.17325628055424852],[2.36512064742212,.3467624393969093],[2.3759616566049595,.5207674926568824],[2.3911605800569604,.6955189861256125],[2.410739161460887,.8712622181979011],[2.4347252438084173,1.0482394123962095],[2.463152681795956,1.2266888223100774],[2.4960612308904864,1.4068437515077188],[2.5334964107198403,1.588931470682751],[2.5755093399946953,1.7731720140215197]];b.advance(0);let e=0;for(let f=0;10>f;f++)b.advance(.025),e+=.025,module$contents$myphysicslab$sims$roller$test$RollerTest_assertRoughlyEquals(e,
a.getTime(),2E-13),module$contents$myphysicslab$sims$roller$test$RollerTest_assertRoughlyEquals(e,c.getValue(2),2E-13),module$contents$myphysicslab$sims$roller$test$RollerTest_assertRoughlyEquals(d[f][0],c.getValue(0),2E-13),module$contents$myphysicslab$sims$roller$test$RollerTest_assertRoughlyEquals(d[f][1],c.getValue(1),2E-13),module$contents$myphysicslab$sims$roller$test$RollerTest_assertRoughlyEquals(25.0935,c.getValue(7),.001);a.setPEOffset(99-a.getEnergyInfo().getPotential());a=a.getEnergyInfo();
module$contents$myphysicslab$sims$roller$test$RollerTest_assertEquals(99,a.getPotential());module$contents$myphysicslab$sims$roller$test$RollerTest_assertRoughlyEquals(.7860347478272578,a.getTranslational(),1E-10)}}mpl$sims$roller$test$RollerTest.groupName="RollerTest.";class mpl$sims$springs$SingleSpringSim extends mpl$lab$model$AbstractODESim{constructor(a){super(a);this.setVarsList(new mpl$lab$model$VarsList([mpl$sims$springs$SingleSpringSim.en.POSITION,mpl$sims$springs$SingleSpringSim.en.VELOCITY,mpl$sims$springs$SingleSpringSim.en.WORK_FROM_DAMPING,mpl$lab$model$VarsList.en.TIME,mpl$sims$springs$SingleSpringSim.en.ACCELERATION,
mpl$lab$model$EnergySystem.en.KINETIC_ENERGY,mpl$lab$model$EnergySystem.en.POTENTIAL_ENERGY,mpl$lab$model$EnergySystem.en.TOTAL_ENERGY],[mpl$sims$springs$SingleSpringSim.i18n.POSITION,mpl$sims$springs$SingleSpringSim.i18n.VELOCITY,mpl$sims$springs$SingleSpringSim.i18n.WORK_FROM_DAMPING,mpl$lab$model$VarsList.i18n.TIME,mpl$sims$springs$SingleSpringSim.i18n.ACCELERATION,
mpl$lab$model$EnergySystem.i18n.KINETIC_ENERGY,mpl$lab$model$EnergySystem.i18n.POTENTIAL_ENERGY,mpl$lab$model$EnergySystem.i18n.TOTAL_ENERGY],this.getName()+"_VARS"));this.getVarsList().setComputed(2,4,5,6,7);this.block_=mpl$lab$model$PointMass.makeRectangle(.4,.8,"block").setMass(.5);this.fixedPoint_=mpl$lab$model$PointMass.makeSquare(.5,"fixed_point").setMass(mpl$lab$util$Util.POSITIVE_INFINITY);
this.fixedPoint_.setPosition(new mpl$lab$util$Vector(-2.5,0));this.spring_=new mpl$lab$model$Spring("spring",this.fixedPoint_,mpl$lab$util$Vector.ORIGIN,this.block_,mpl$lab$util$Vector.ORIGIN,2.5,3);this.damping_=.1;this.potentialOffset_=this.initialEnergy_=0;this.isDragging=!1;this.getVarsList().setValue(0,-2);this.initWork();this.saveInitialState();this.getSimList().add(this.block_,this.fixedPoint_,this.spring_);
this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$springs$SingleSpringSim.en.DAMPING,mpl$sims$springs$SingleSpringSim.i18n.DAMPING,()=>this.getDamping(),b=>this.setDamping(b)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$springs$SingleSpringSim.en.SPRING_LENGTH,mpl$sims$springs$SingleSpringSim.i18n.SPRING_LENGTH,()=>this.getSpringRestLength(),
b=>this.setSpringRestLength(b)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$springs$SingleSpringSim.en.MASS,mpl$sims$springs$SingleSpringSim.i18n.MASS,()=>this.getMass(),b=>this.setMass(b)));this.addParameter(new mpl$lab$util$ParameterNumber(this,mpl$sims$springs$SingleSpringSim.en.SPRING_STIFFNESS,mpl$sims$springs$SingleSpringSim.i18n.SPRING_STIFFNESS,
()=>this.getSpringStiffness(),b=>this.setSpringStiffness(b)));this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$sims$springs$SingleSpringSim.en.FIXED_POINT,mpl$sims$springs$SingleSpringSim.i18n.FIXED_POINT,()=>this.getFixedPoint(),b=>this.setFixedPoint(b))).setLowerLimit(mpl$lab$util$Util.NEGATIVE_INFINITY));this.addParameter((new mpl$lab$util$ParameterNumber(this,mpl$lab$model$EnergySystem.en.PE_OFFSET,
mpl$lab$model$EnergySystem.i18n.PE_OFFSET,()=>this.getPEOffset(),b=>this.setPEOffset(b))).setLowerLimit(mpl$lab$util$Util.NEGATIVE_INFINITY).setSignifDigits(5))}toString(){return mpl$lab$util$Util.ADVANCED?"":this.toStringShort().slice(0,-1)+", block_: "+this.block_+", fixedPoint_: "+this.fixedPoint_+", spring_: "+this.spring_+", damping_: "+mpl$lab$util$Util.NF(this.damping_)+", initialEnergy_: "+mpl$lab$util$Util.NF(this.initialEnergy_)+
super.toString()}getClassName(){return"SingleSpringSim"}reset(){super.reset();this.initWork()}initWork(){this.getVarsList().setValue(2,0);this.initialEnergy_=this.getEnergyInfo().getTotalEnergy()}getEnergyInfo(){const a=this.getVarsList().getValues();return this.getEnergyInfo_(a[2])}getEnergyInfo_(a){const b=this.block_.getKineticEnergy(),c=this.spring_.getPotentialEnergy()+this.potentialOffset_;return new mpl$lab$model$EnergyInfo(c,b,NaN,a,this.initialEnergy_)}getPEOffset(){return this.potentialOffset_}setPEOffset(a){this.potentialOffset_=
a;this.getVarsList().incrSequence(6,7);this.broadcastParameter(mpl$lab$model$EnergySystem.en.PE_OFFSET)}modifyObjects(){const a=this.getVarsList(),b=a.getValues();this.moveObjects(b);var c=Array(b.length);this.evaluate(b,c,0);b[4]=c[1];c=this.getEnergyInfo_(b[2]);b[5]=c.getTranslational();b[6]=c.getPotential();b[7]=c.getTotalEnergy();a.setValues(b,!0)}moveObjects(a){this.block_.setPosition(new mpl$lab$util$Vector(a[0],0));this.block_.setVelocity(new mpl$lab$util$Vector(a[1],
0,0))}startDrag(a,b,c,d,e){return a==this.block_?this.isDragging=!0:!1}mouseDrag(a,b,c,d){d=this.getVarsList();a==this.block_&&(a=b.subtract(c),d.setValue(0,a.getX()),d.setValue(1,0),this.initWork(),d.incrSequence(4,5,6,7),this.moveObjects(d.getValues()))}finishDrag(a,b,c){this.isDragging=!1}handleKeyEvent(a,b,c){}evaluate(a,b,c){mpl$lab$util$Util.zeroArray(b);b[3]=1;this.isDragging||(this.moveObjects(a),b[0]=a[1],b[1]=(-this.spring_.getStiffness()*this.spring_.getStretch()-
this.damping_*a[1])/this.block_.getMass(),b[2]=-this.damping_*a[1]*a[1]);return null}getMass(){return this.block_.getMass()}setMass(a){this.block_.setMass(a);this.initWork();this.getVarsList().incrSequence(4,5,6,7);this.broadcastParameter(mpl$sims$springs$SingleSpringSim.en.MASS)}getSpringStiffness(){return this.spring_.getStiffness()}setSpringStiffness(a){this.spring_.setStiffness(a);this.initWork();this.getVarsList().incrSequence(4,6,7);this.broadcastParameter(mpl$sims$springs$SingleSpringSim.en.SPRING_STIFFNESS)}getSpringRestLength(){return this.spring_.getRestLength()}setSpringRestLength(a){this.spring_.setRestLength(a);
this.initWork();this.getVarsList().incrSequence(4,6,7);this.broadcastParameter(mpl$sims$springs$SingleSpringSim.en.SPRING_LENGTH)}getDamping(){return this.damping_}setDamping(a){this.damping_=a;this.initWork();this.broadcastParameter(mpl$sims$springs$SingleSpringSim.en.DAMPING)}getFixedPoint(){return this.fixedPoint_.getPosition().getX()}setFixedPoint(a){this.fixedPoint_.setPosition(new mpl$lab$util$Vector(a,0));this.initWork();
this.broadcastParameter(mpl$sims$springs$SingleSpringSim.en.FIXED_POINT)}}mpl$sims$springs$SingleSpringSim.en={ACCELERATION:"acceleration",DAMPING:"damping",MASS:"mass",POSITION:"position",SPRING_LENGTH:"spring length",SPRING_STIFFNESS:"spring stiffness",VELOCITY:"velocity",WORK_FROM_DAMPING:"work from damping",FIXED_POINT:"fixed point"};
mpl$sims$springs$SingleSpringSim.de_strings={ACCELERATION:"Beschleunigung",DAMPING:"D\u00e4mpfung",MASS:"Masse",POSITION:"Position",SPRING_LENGTH:"Federl\u00e4nge",SPRING_STIFFNESS:"Federsteifheit",VELOCITY:"Geschwindigkeit",WORK_FROM_DAMPING:"Arbeit der D\u00e4mpfung",FIXED_POINT:"Festpunkt"};mpl$sims$springs$SingleSpringSim.i18n="de"===goog.LOCALE?mpl$sims$springs$SingleSpringSim.de_strings:mpl$sims$springs$SingleSpringSim.en;const module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals=(a,b)=>mpl$test$TestRig.assertEquals(a,b),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals=(a,b,c)=>mpl$test$TestRig.assertRoughlyEquals(a,b,c),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue=a=>mpl$test$TestRig.assertTrue(a),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertFalse=
a=>mpl$test$TestRig.assertFalse(a),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertThrows=a=>mpl$test$TestRig.assertThrows(a),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_schedule=a=>mpl$test$TestRig.schedule(a),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_startTest=a=>mpl$test$TestRig.startTest(a);
class module$contents$myphysicslab$sims$springs$test$SingleSpringTest_MockObserver1{constructor(a){this.sim=a;this.numStrings=this.numDoubles=this.numBooleans=this.numEvents=0}observe(a){a instanceof mpl$lab$util$GenericEvent?(this.numEvents++,module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(this.sim,a.getSubject())):a instanceof mpl$lab$util$ParameterBoolean?(this.numBooleans++,module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(this.sim,
a.getSubject()),a=a.getValue(),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue("boolean"===typeof a)):a instanceof mpl$lab$util$ParameterNumber?(this.numDoubles++,module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(this.sim,a.getSubject()),a=a.getValue(),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue("number"===typeof a)):a instanceof mpl$lab$util$ParameterString&&(this.numStrings++,
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(this.sim,a.getSubject()),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue("string"===typeof a.getValue()))}toStringShort(){return"MockObserver1"}}
class mpl$sims$springs$test$SingleSpringTest{static test(){module$contents$myphysicslab$sims$springs$test$SingleSpringTest_schedule(mpl$sims$springs$test$SingleSpringTest.testSingleSpring)}static testSingleSpring(){module$contents$myphysicslab$sims$springs$test$SingleSpringTest_startTest(mpl$sims$springs$test$SingleSpringTest.groupName+"testSingleSpring");var a=new mpl$sims$springs$SingleSpringSim,b=a.getSimList(),
c=new mpl$lab$model$ModifiedEuler(a);c=new mpl$lab$model$SimpleAdvance(a,c);var d=b.getPointMass("block");module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue(d instanceof mpl$lab$model$PointMass);b=b.getSpring("spring");module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue(b instanceof mpl$lab$model$Spring);b=a.getParameterNumber(mpl$sims$springs$SingleSpringSim.en.DAMPING);
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue(b.nameEquals(mpl$sims$springs$SingleSpringSim.en.DAMPING));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$springs$SingleSpringSim.en.DAMPING),b.getName());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.1,b.getValue());b=a.getParameterNumber(mpl$sims$springs$SingleSpringSim.en.SPRING_LENGTH);
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$springs$SingleSpringSim.en.SPRING_LENGTH),b.getName());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue(b.nameEquals(mpl$sims$springs$SingleSpringSim.en.SPRING_LENGTH));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(2.5,b.getValue());b=a.getParameterNumber(mpl$sims$springs$SingleSpringSim.en.MASS);
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue(b.nameEquals(mpl$sims$springs$SingleSpringSim.en.MASS));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$springs$SingleSpringSim.en.MASS),b.getName());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.5,b.getValue());b=a.getParameterNumber(mpl$sims$springs$SingleSpringSim.en.SPRING_STIFFNESS);
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue(b.nameEquals(mpl$sims$springs$SingleSpringSim.en.SPRING_STIFFNESS));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$springs$SingleSpringSim.en.SPRING_STIFFNESS),b.getName());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(3,b.getValue());b=new module$contents$myphysicslab$sims$springs$test$SingleSpringTest_MockObserver1(a);
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(0,b.numEvents);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(0,b.numBooleans);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(0,b.numDoubles);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(0,b.numStrings);a.addObserver(b);var e=a.getObservers();module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(1,e.length);
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertTrue(e.includes(b));a.setFixedPoint(0);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(0,a.getFixedPoint());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.1,a.getDamping());a.setDamping(.15);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.15,a.getDamping());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(2,b.numDoubles);
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(2.5,a.getSpringRestLength());a.setSpringRestLength(2);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(2,a.getSpringRestLength());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(3,b.numDoubles);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(3,a.getSpringStiffness());a.setSpringStiffness(6);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(6,
a.getSpringStiffness());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(4,b.numDoubles);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.5,a.getMass());a.setMass(.7);module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.7,a.getMass());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(5,b.numDoubles);b=a.getVarsList();b.setValue(0,.5);a.initWork();a.saveInitialState();module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$springs$SingleSpringSim.en.POSITION),
b.getVariable(0).getName());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$sims$springs$SingleSpringSim.i18n.POSITION,b.getVariable(0).getName(!0));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.5,b.getValue(0));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$lab$util$Util.toName(mpl$sims$springs$SingleSpringSim.en.VELOCITY),b.getVariable(1).getName());
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(mpl$sims$springs$SingleSpringSim.i18n.VELOCITY,b.getVariable(1).getName(!0));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(0,b.getValue(1));e=b.timeIndex();b.setValue(e,100);a.saveInitialState();b.setValue(e,0);e=[[.5040178571428572,.32056760204081636],[.516017675638894,.6377051511841583],[.5358925536030913,.9497343223285384],[.5634940297550691,1.2550130990176436],[.5986331000236428,
1.551944363925923],[.6410814456152146,1.8389842031764325],[.6905728648445506,2.114649881594092],[.7468048999775697,2.377527447987486],[.8094406493392821,2.6262789317505306],[.8781107540009925,2.8596490944688435]];c.advance(0);let f=0;for(let g=0;10>g;g++)c.advance(.025),f+=.025,module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(b.getValue(0),d.getPosition().getX()),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(b.getValue(1),d.getVelocity().getX()),
module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(f,a.getTime(),1E-15),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(e[g][0],b.getValue(0),1E-14),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(e[g][1],b.getValue(1),1E-14),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(6.7,b.getValue(7),.1);a.reset();module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(.5,
b.getValue(0));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(0,b.getValue(1));module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(100,a.getTime());f=100;for(d=0;10>d;d++)c.advance(.025),f+=.025,module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(f,a.getTime(),1E-15),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(e[d][0],b.getValue(0),1E-14),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(e[d][1],
b.getValue(1),1E-14),module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(6.7,b.getValue(7),.1);a.setPEOffset(99-a.getEnergyInfo().getPotential());a=a.getEnergyInfo();module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertEquals(99,a.getPotential());module$contents$myphysicslab$sims$springs$test$SingleSpringTest_assertRoughlyEquals(2.8621575302237665,a.getTranslational(),1E-10)}}
mpl$sims$springs$test$SingleSpringTest.groupName="SingleSpringTest.";class mpl$test$UnitTest{static runTests(){mpl$test$TestRig.startTests();mpl$lab$util$test$AbstractSubjectTest.test();mpl$lab$util$test$AffineTransformTest.test();mpl$lab$util$test$CalculusTest.test();mpl$lab$util$test$CircularListTest.test();mpl$lab$util$test$ClockTest.test();mpl$lab$util$test$ConcreteMemoListTest.test();
mpl$lab$util$test$DoubleMathTest.test();mpl$lab$util$test$DoubleRectTest.test();mpl$lab$util$test$EasyScriptParserTest.test();mpl$lab$util$test$MutableVectorTest.test();mpl$lab$util$test$ParameterBooleanTest.test();mpl$lab$util$test$ParameterNumberTest.test();mpl$lab$util$test$ParameterStringTest.test();mpl$lab$util$test$RandomLCGTest.test();
mpl$lab$util$test$TerminalTest.test();mpl$lab$util$test$TimerTest.test();mpl$lab$util$test$UtilTest.test();mpl$lab$util$test$VectorTest.test();mpl$lab$model$test$ConcreteLineTest.test();mpl$lab$model$test$EnergyInfoTest.test();mpl$lab$model$test$NumericalPathTest.test();mpl$lab$model$test$PointMassTest.test();
mpl$lab$model$test$SimListTest.test();mpl$lab$model$test$SpringTest.test();mpl$lab$model$test$VarsListTest.test();mpl$lab$engine2D$test$CircularEdgeTest.test();mpl$lab$engine2D$test$EdgeSetTest.test();mpl$lab$engine2D$test$PolygonTest.test();mpl$lab$engine2D$test$RigidBodySimTest.test();mpl$lab$engine2D$test$StraightEdgeTest.test();
mpl$lab$engine2D$test$UtilEngineTest.test();mpl$lab$engine2D$test$VertexTest.test();mpl$lab$view$test$CoordMapTest.test();mpl$lab$view$test$DisplayLineTest.test();mpl$lab$view$test$DisplayListTest.test();mpl$lab$view$test$DisplayShapeTest.test();mpl$lab$view$test$DisplaySpringTest.test();mpl$lab$view$test$LabCanvasTest.test();
mpl$lab$view$test$ScreenRectTest.test();mpl$lab$view$test$SimViewTest.test();mpl$sims$pendulum$test$DoublePendulumTest.test();mpl$sims$roller$test$RollerTest.test();mpl$sims$springs$test$SingleSpringTest.test();mpl$test$TestRig.schedule(mpl$test$TestRig.finishTests);mpl$test$TestRig.runTests()}}
goog.exportProperty(mpl$test$UnitTest,"runTests",mpl$test$UnitTest.runTests);goog.exportSymbol("runTests",mpl$test$UnitTest.runTests);
